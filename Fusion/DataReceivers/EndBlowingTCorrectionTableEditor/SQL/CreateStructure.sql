ALTER TABLE BOF.ADDITION
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.ADDITION CASCADE CONSTRAINTS;

CREATE TABLE BOF.ADDITION
(
  ID           NUMBER                           NOT NULL,
  NAME         VARCHAR2(100 BYTE)               NOT NULL,
  DESCRIPTION  VARCHAR2(100 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


DROP TABLE BOF.BLASEPLAN CASCADE CONSTRAINTS;

CREATE TABLE BOF.BLASEPLAN
(
  CV_NO          INTEGER,
  DTURPLAN       DATE,
  DTCORRPLAN     DATE,
  DTFACT         DATE,
  HEATINSCHICHT  INTEGER,
  HEATID         NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.BLASEPLAN IS 'Таблица расчета сменного производства по конвертерам';

COMMENT ON COLUMN BOF.BLASEPLAN.CV_NO IS 'номер конвертера';

COMMENT ON COLUMN BOF.BLASEPLAN.DTURPLAN IS 'момент начала продувки (=MBLS) ..1й расчёт';

COMMENT ON COLUMN BOF.BLASEPLAN.DTCORRPLAN IS 'момент начала продувки (=MBLS)..перерасчет';

COMMENT ON COLUMN BOF.BLASEPLAN.DTFACT IS 'момент начала продувки (=MBLS)..факт';

COMMENT ON COLUMN BOF.BLASEPLAN.HEATINSCHICHT IS 'порядковый № плавки в смене';

COMMENT ON COLUMN BOF.BLASEPLAN.HEATID IS 'HEATID';



ALTER TABLE BOF.BOF_PARAMETERS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.BOF_PARAMETERS CASCADE CONSTRAINTS;

CREATE TABLE BOF.BOF_PARAMETERS
(
  PAR_ID           VARCHAR2(30 BYTE)            NOT NULL,
  PAR_DATA_TYPE    VARCHAR2(1 BYTE),
  PAR_GROUP_ID     VARCHAR2(30 BYTE),
  PAR_GROUP_YN     VARCHAR2(1 BYTE),
  PAR_NAME         VARCHAR2(40 BYTE)            NOT NULL,
  PAR_VALUE        VARCHAR2(50 BYTE),
  PAR_DESCRIPTION  VARCHAR2(100 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.BOF_PARAMETERS IS 'Таблица глобальных параметров SMKBOF';

COMMENT ON COLUMN BOF.BOF_PARAMETERS.PAR_ID IS 'Идентификатор';

COMMENT ON COLUMN BOF.BOF_PARAMETERS.PAR_DATA_TYPE IS 'Тип (S - string, D - date, N - number)';

COMMENT ON COLUMN BOF.BOF_PARAMETERS.PAR_GROUP_ID IS 'Ссылка на PAR_ID, если это не группа';

COMMENT ON COLUMN BOF.BOF_PARAMETERS.PAR_GROUP_YN IS 'Группа (Y- да, N - нет)';

COMMENT ON COLUMN BOF.BOF_PARAMETERS.PAR_NAME IS 'Наименование параметра';

COMMENT ON COLUMN BOF.BOF_PARAMETERS.PAR_VALUE IS 'Значение параметра (может и небыть)';

COMMENT ON COLUMN BOF.BOF_PARAMETERS.PAR_DESCRIPTION IS 'Описание праметра (может и не быть)';



ALTER TABLE BOF.BOF_TELEGRAMS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.BOF_TELEGRAMS CASCADE CONSTRAINTS;

CREATE TABLE BOF.BOF_TELEGRAMS
(
  REC_ID        NUMBER                          NOT NULL,
  OPERATION_ID  NUMBER                          NOT NULL,
  EVENTTIME     DATE,
  WORKEDTIME    DATE,
  CV_NO         NUMBER(1),
  HEAT_NO       VARCHAR2(7 BYTE),
  STATUS        NUMBER                          DEFAULT 0,
  PAR1          VARCHAR2(20 BYTE),
  PAR2          VARCHAR2(20 BYTE),
  PAR3          VARCHAR2(20 BYTE),
  PAR4          VARCHAR2(20 BYTE),
  PAR5          VARCHAR2(20 BYTE),
  PAR6          VARCHAR2(20 BYTE),
  PAR7          VARCHAR2(20 BYTE),
  PAR8          VARCHAR2(20 BYTE),
  PAR9          VARCHAR2(20 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


DROP TABLE BOF.DELAYS CASCADE CONSTRAINTS;

CREATE TABLE BOF.DELAYS
(
  ID          NUMBER                            NOT NULL,
  HEAT_ID     NUMBER                            NOT NULL,
  STARTTIME   DATE,
  ENDTIME     DATE,
  DURATION    NUMBER,
  DELAY_ID    NUMBER,
  INSERTTIME  DATE                              DEFAULT sysdate
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             192K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.DELAYS IS 'Учет простоев на плавке и в межплавочный период';

COMMENT ON COLUMN BOF.DELAYS.ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.DELAYS.HEAT_ID IS 'Id плавки';

COMMENT ON COLUMN BOF.DELAYS.STARTTIME IS 'Начало простоя';

COMMENT ON COLUMN BOF.DELAYS.ENDTIME IS 'Конец простоя';

COMMENT ON COLUMN BOF.DELAYS.DURATION IS 'Длительность(минуты)';

COMMENT ON COLUMN BOF.DELAYS.DELAY_ID IS 'Id из NSI_DELAYS';

COMMENT ON COLUMN BOF.DELAYS.INSERTTIME IS 'Момент занесения';



ALTER TABLE BOF.ELEMENT
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.ELEMENT CASCADE CONSTRAINTS;

CREATE TABLE BOF.ELEMENT
(
  ID     NUMBER                                 NOT NULL,
  SID    NUMBER                                 NOT NULL,
  NAME   VARCHAR2(6 BYTE)                       NOT NULL,
  VALUE  NUMBER                                 NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE BOF.EVENTS_SPEC
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.EVENTS_SPEC CASCADE CONSTRAINTS;

CREATE TABLE BOF.EVENTS_SPEC
(
  TYPE_ID    VARCHAR2(4 BYTE)                   NOT NULL,
  TYPE_NAME  VARCHAR2(50 BYTE),
  VALID_YN   NUMBER(1)                          DEFAULT 1,
  CDP_NAME   VARCHAR2(50 BYTE),
  VALID_CDP  NUMBER(1)                          DEFAULT 1
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.EVENTS_SPEC IS 'Таблица наименований событий на плавку';

COMMENT ON COLUMN BOF.EVENTS_SPEC.TYPE_ID IS 'Уник. идентификатор';

COMMENT ON COLUMN BOF.EVENTS_SPEC.TYPE_NAME IS 'Наименование события';

COMMENT ON COLUMN BOF.EVENTS_SPEC.VALID_YN IS '1/0 - Актуально / Не актально';

COMMENT ON COLUMN BOF.EVENTS_SPEC.CDP_NAME IS 'Строка для ЦДП';

COMMENT ON COLUMN BOF.EVENTS_SPEC.VALID_CDP IS '1/0 - Актуально / Не актально - Для системы диспетчерская комбината';



ALTER TABLE BOF.FITTING
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.FITTING CASCADE CONSTRAINTS;

CREATE TABLE BOF.FITTING
(
  HEAT_ID            NUMBER                     NOT NULL,
  FITTING_ATLOADING  NUMBER,
  ATLOADING          NUMBER,
  FITTING_ATTAPPING  NUMBER,
  ATTAPPING          NUMBER,
  FITTING_ATBOTTOM   NUMBER,
  ATBOTTOM           NUMBER,
  INSERTTIME         DATE                       DEFAULT sysdate
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.FITTING IS 'Расход огнеупоров на подварку футеровки';

COMMENT ON COLUMN BOF.FITTING.HEAT_ID IS 'Идентификатор плавки';

COMMENT ON COLUMN BOF.FITTING.FITTING_ATLOADING IS 'Id материала подварки на загрузке';

COMMENT ON COLUMN BOF.FITTING.ATLOADING IS 'Фактическое кол-во материала подварки на загрузке';

COMMENT ON COLUMN BOF.FITTING.FITTING_ATTAPPING IS 'Id материала подварки на сливе';

COMMENT ON COLUMN BOF.FITTING.ATTAPPING IS 'Фактическое кол-во материала подварки на сливе';

COMMENT ON COLUMN BOF.FITTING.FITTING_ATBOTTOM IS 'Id материала подварки на донышке';

COMMENT ON COLUMN BOF.FITTING.ATBOTTOM IS 'Фактическое кол-во материала подварки на донышке';

COMMENT ON COLUMN BOF.FITTING.INSERTTIME IS 'Момент времени занесения';



ALTER TABLE BOF.GRADE_ANALYSIS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.GRADE_ANALYSIS CASCADE CONSTRAINTS;

CREATE TABLE BOF.GRADE_ANALYSIS
(
  GRADE_ANALYSIS_ID  NUMBER                     NOT NULL,
  GRADE_ANALYSIS_NO  VARCHAR2(30 BYTE)          NOT NULL,
  UPDATETIME         DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.GRADE_ANALYSIS IS 'Таблица целевой химии по марочнику сталей';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS.GRADE_ANALYSIS_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS.GRADE_ANALYSIS_NO IS 'Имя марки';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS.UPDATETIME IS 'Момент обновления';



ALTER TABLE BOF.GRADE_ANALYSIS_EL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.GRADE_ANALYSIS_EL CASCADE CONSTRAINTS;

CREATE TABLE BOF.GRADE_ANALYSIS_EL
(
  GRADE_ANALYSIS_ID  NUMBER                     NOT NULL,
  ELEMENT            VARCHAR2(6 BYTE)           NOT NULL,
  VALUE_MIN          NUMBER,
  VALUE_AIM          NUMBER,
  VALUE_MAX          NUMBER,
  VALUE_MIN_BLOW     NUMBER,
  VALUE_AIM_BLOW     NUMBER,
  VALUE_MAX_BLOW     NUMBER,
  UPDATETIME         DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.GRADE_ANALYSIS_EL IS 'Таблица целевой химии по марочнику сталей, список элементов';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.GRADE_ANALYSIS_ID IS 'Уникальный Id - связка ч Grade_analysis';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.ELEMENT IS 'Наименование элемента';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.VALUE_MIN IS 'минимальное';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.VALUE_AIM IS 'целевое';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.VALUE_MAX IS 'максимальное';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.VALUE_MIN_BLOW IS 'минимальное в конце продувки';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.VALUE_AIM_BLOW IS 'целевое в конце продувки';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.VALUE_MAX_BLOW IS 'максимальное в конце продувки';

COMMENT ON COLUMN BOF.GRADE_ANALYSIS_EL.UPDATETIME IS 'момент обновления';



ALTER TABLE BOF.GRADE_SPEC
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.GRADE_SPEC CASCADE CONSTRAINTS;

CREATE TABLE BOF.GRADE_SPEC
(
  GRADE_ID           NUMBER                     NOT NULL,
  GRADE_NO           VARCHAR2(30 BYTE)          NOT NULL,
  GRADE_GROUP        VARCHAR2(2 BYTE)           DEFAULT 1                     NOT NULL,
  NAME_ENGLISH       VARCHAR2(50 BYTE)          NOT NULL,
  NAME_OTHER         VARCHAR2(50 BYTE),
  DESCRIPTION        VARCHAR2(200 BYTE),
  GRADE_ANALYSIS_ID  NUMBER                     NOT NULL,
  UPDATETIME         DATE,
  INSERTTIME         DATE,
  SAVEDTIME          DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.GRADE_SPEC IS 'Таблица марочника сталей';

COMMENT ON COLUMN BOF.GRADE_SPEC.GRADE_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.GRADE_SPEC.GRADE_NO IS 'Наименование краткое';

COMMENT ON COLUMN BOF.GRADE_SPEC.GRADE_GROUP IS 'группа марок сталь';

COMMENT ON COLUMN BOF.GRADE_SPEC.NAME_ENGLISH IS 'наименование международное';

COMMENT ON COLUMN BOF.GRADE_SPEC.NAME_OTHER IS 'наименование локализованное';

COMMENT ON COLUMN BOF.GRADE_SPEC.DESCRIPTION IS 'описание';

COMMENT ON COLUMN BOF.GRADE_SPEC.GRADE_ANALYSIS_ID IS 'Id анализов';

COMMENT ON COLUMN BOF.GRADE_SPEC.UPDATETIME IS 'момент обновления';

COMMENT ON COLUMN BOF.GRADE_SPEC.INSERTTIME IS 'Создается при Insert';

COMMENT ON COLUMN BOF.GRADE_SPEC.SAVEDTIME IS 'момент сохранения';



ALTER TABLE BOF.GRADE_STD_ALLOY
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.GRADE_STD_ALLOY CASCADE CONSTRAINTS;

CREATE TABLE BOF.GRADE_STD_ALLOY
(
  GRADE_ID      NUMBER                          NOT NULL,
  MAT_ID        NUMBER                          NOT NULL,
  DISPLAYORDER  NUMBER(2),
  WEIGHT        NUMBER(6),
  UPDATETIME    DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.GRADE_STD_ALLOY.GRADE_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.GRADE_STD_ALLOY.MAT_ID IS 'Id материала';

COMMENT ON COLUMN BOF.GRADE_STD_ALLOY.DISPLAYORDER IS 'порядок визуализации';

COMMENT ON COLUMN BOF.GRADE_STD_ALLOY.WEIGHT IS 'вес';

COMMENT ON COLUMN BOF.GRADE_STD_ALLOY.UPDATETIME IS 'момент обновлениея';



ALTER TABLE BOF.HEAT_ACT
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_ACT CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_ACT
(
  CV_NO                   NUMBER(1)             NOT NULL,
  HEAT_ID                 NUMBER,
  HEAT_NO                 VARCHAR2(7 BYTE),
  HO_ID                   NUMBER,
  HO_NO                   VARCHAR2(9 BYTE),
  PREV_HEATNO             VARCHAR2(7 BYTE),
  ADDSCHEME_NO            VARCHAR2(2 BYTE),
  BLOWSCHEME_NO           VARCHAR2(2 BYTE),
  CALC_STEEL_TEMP         NUMBER(4),
  CALC_STEEL_C            FLOAT(126),
  ACT_O2FLOW              NUMBER(5),
  ACT_O2PRESSURE          FLOAT(126),
  ACT_LANCE_HGT           NUMBER(4),
  BATHLEVEL               NUMBER(5),
  ACT_O2VOL               NUMBER(5),
  ACT_O2VOL_IGN           NUMBER(5),
  AIM_O2VOL_SUBL          NUMBER(5),
  ACT_O2VOL_SUBL          NUMBER(5),
  AIM_O2VOL_MAIN          NUMBER(5),
  ACT_O2VOL_MAIN          NUMBER(5),
  ACT_O2VOL_REBLOW        NUMBER(5),
  ACT_OGTEMP              NUMBER(4),
  ACT_OGFLOW              NUMBER(6),
  ACT_OG_CO               FLOAT(126),
  ACT_OG_CO2              FLOAT(126),
  ACT_OG_O2               FLOAT(126),
  ACT_OG_N2               FLOAT(126),
  ACT_OG_H2               FLOAT(126),
  ACT_OG_AR               FLOAT(126),
  CALC_OG_DECARB          FLOAT(126),
  ACT_O2VOL_TORK          NUMBER(5),
  ACT_NVOL_SLAGBLOW       NUMBER(5),
  ACT_SKULLCUTTING        NUMBER(1),
  ACT_SLAGBLOWING         NUMBER(1),
  ACT_OPLANCE             NUMBER(1),
  ACT_OPADDITIONS         NUMBER(1),
  ACT_OPALLOYS            NUMBER(1),
  ACT_OPSUBLANCE          NUMBER(1),
  PHASE_NO                VARCHAR2(4 BYTE),
  OPO2FLOW                NUMBER,
  HEAT_CONF               VARCHAR2(1 BYTE)      NOT NULL,
  HOOD_POS                NUMBER(1),
  GASFILTERCONTROLPOS     NUMBER(1),
  CONVERTER_LIFE          NUMBER,
  CAMPAIGN_NO             NUMBER,
  CAMPAIGN_START          DATE,
  LANCE_NO                NUMBER,
  BLOWINGTIME             NUMBER,
  IMF                     NUMBER,
  CALC_SCC_C              FLOAT(126),
  COOL                    NUMBER,
  BA_LANCE                VARCHAR2(4 BYTE),
  BA_SAUSTOFF             VARCHAR2(4 BYTE),
  BA_WAAGEN               VARCHAR2(4 BYTE),
  LANCESEL                VARCHAR2(1 BYTE)      DEFAULT 'R',
  LQWASSSERZUFLUSS        NUMBER,
  LQWASSSERABFLUSS        NUMBER,
  LTEMPWASSSERZUFLUSS     NUMBER,
  LTEMPWASSSERABFLUSS     NUMBER,
  LWASSERDRUCK            NUMBER,
  RQWASSSERZUFLUSS        NUMBER,
  RQWASSSERABFLUSS        NUMBER,
  RTEMPWASSSERZUFLUSS     NUMBER,
  RTEMPWASSSERABFLUSS     NUMBER,
  RWASSERDRUCK            NUMBER,
  ISOFFLINE               INTEGER,
  DTBEGINFACKTORKR        DATE,
  DTDOZATORAUF            DATE,
  PLANHEATCNT             INTEGER,
  PLANHEATCNTNEXTSCHICHT  INTEGER,
  PLANHEATINSERTTIME      DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_ACT IS 'Таблица данных по текущим плавкам на конвертерах';

COMMENT ON COLUMN BOF.HEAT_ACT.CV_NO IS '№ конвертера';

COMMENT ON COLUMN BOF.HEAT_ACT.HEAT_ID IS 'Id плавки';

COMMENT ON COLUMN BOF.HEAT_ACT.HEAT_NO IS 'Номер плавки';

COMMENT ON COLUMN BOF.HEAT_ACT.HO_ID IS 'Id плана';

COMMENT ON COLUMN BOF.HEAT_ACT.HO_NO IS 'номер плана';

COMMENT ON COLUMN BOF.HEAT_ACT.PREV_HEATNO IS 'Id предыдущей плавки';

COMMENT ON COLUMN BOF.HEAT_ACT.ADDSCHEME_NO IS 'Номер схемы шлакообразующих';

COMMENT ON COLUMN BOF.HEAT_ACT.BLOWSCHEME_NO IS 'номер схемы продувки';

COMMENT ON COLUMN BOF.HEAT_ACT.CALC_STEEL_TEMP IS 'расчетная температура стали';

COMMENT ON COLUMN BOF.HEAT_ACT.CALC_STEEL_C IS 'расчетный [C]';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_O2FLOW IS 'текущая интенсивность продувки';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_O2PRESSURE IS 'текущее давление килорода';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_LANCE_HGT IS 'текущее положение фурмы';

COMMENT ON COLUMN BOF.HEAT_ACT.BATHLEVEL IS 'уровень ванны';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_O2VOL IS 'Общий расход О2';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_O2VOL_IGN IS 'О2 на зажигание';

COMMENT ON COLUMN BOF.HEAT_ACT.AIM_O2VOL_SUBL IS 'заданный О2 на замер измерительной фурмой';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_O2VOL_SUBL IS 'факт О2 на замер измерительной фурмой';

COMMENT ON COLUMN BOF.HEAT_ACT.AIM_O2VOL_MAIN IS 'заданный О2 на плавку';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_O2VOL_MAIN IS 'факт О2 на плавку';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_O2VOL_REBLOW IS 'О2 на додувке';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OGTEMP IS 'температура отходящих газов';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OGFLOW IS 'расход отходящих газов';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OG_CO IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OG_CO2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OG_O2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OG_N2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OG_H2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OG_AR IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_ACT.CALC_OG_DECARB IS 'расчетная (по анализу отходящих газов) скорость обезуглероживания';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_O2VOL_TORK IS 'расход О2 на раздувку шлака';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_NVOL_SLAGBLOW IS 'расход N2 на раздувку шлака';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_SKULLCUTTING IS 'торкретирование';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_SLAGBLOWING IS 'раздувка шлака';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OPLANCE IS 'режим работы фурмы';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OPADDITIONS IS 'режим работы шлакообразующих';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OPALLOYS IS 'режим работы легирующих';

COMMENT ON COLUMN BOF.HEAT_ACT.ACT_OPSUBLANCE IS 'режим работы измерительной фурмы';

COMMENT ON COLUMN BOF.HEAT_ACT.PHASE_NO IS 'наименование фазы';

COMMENT ON COLUMN BOF.HEAT_ACT.OPO2FLOW IS 'режим работы интенсивности продувки';

COMMENT ON COLUMN BOF.HEAT_ACT.HEAT_CONF IS 'подтверждение плавки';

COMMENT ON COLUMN BOF.HEAT_ACT.HOOD_POS IS 'положение юбки';

COMMENT ON COLUMN BOF.HEAT_ACT.GASFILTERCONTROLPOS IS 'положение конуса';

COMMENT ON COLUMN BOF.HEAT_ACT.CONVERTER_LIFE IS 'стойкость футеровки';

COMMENT ON COLUMN BOF.HEAT_ACT.CAMPAIGN_NO IS 'кампания конвертера';

COMMENT ON COLUMN BOF.HEAT_ACT.CAMPAIGN_START IS 'момент начала кампании';

COMMENT ON COLUMN BOF.HEAT_ACT.LANCE_NO IS 'номер фурмы(продувочной)';

COMMENT ON COLUMN BOF.HEAT_ACT.BLOWINGTIME IS 'время продувки';

COMMENT ON COLUMN BOF.HEAT_ACT.IMF IS 'ИМФ';

COMMENT ON COLUMN BOF.HEAT_ACT.CALC_SCC_C IS 'Расчетный[C] по статической модели';

COMMENT ON COLUMN BOF.HEAT_ACT.COOL IS 'Охладитель';

COMMENT ON COLUMN BOF.HEAT_ACT.BA_LANCE IS 'режим работы фурмы(модель)';

COMMENT ON COLUMN BOF.HEAT_ACT.BA_SAUSTOFF IS 'режим работы О2(модель)';

COMMENT ON COLUMN BOF.HEAT_ACT.BA_WAAGEN IS 'режим работы весов(модель)';

COMMENT ON COLUMN BOF.HEAT_ACT.LANCESEL IS 'Работающ.фурма: левая/правая';

COMMENT ON COLUMN BOF.HEAT_ACT.LQWASSSERZUFLUSS IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.LQWASSSERABFLUSS IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.LTEMPWASSSERZUFLUSS IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.LTEMPWASSSERABFLUSS IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.LWASSERDRUCK IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.RQWASSSERZUFLUSS IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.RQWASSSERABFLUSS IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.RTEMPWASSSERZUFLUSS IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.RTEMPWASSSERABFLUSS IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.RWASSERDRUCK IS 'Текущие замеры охлаждения L и R фурм';

COMMENT ON COLUMN BOF.HEAT_ACT.ISOFFLINE IS 'null или 0 - конвертер работает, иначе, в ремонте';

COMMENT ON COLUMN BOF.HEAT_ACT.DTBEGINFACKTORKR IS '=sysdate при начале факельного,=null сразу по концу';

COMMENT ON COLUMN BOF.HEAT_ACT.DTDOZATORAUF IS '#null после сигнала открытия дозатора;при повторе,даже и на другом дозаторе,переписывается';

COMMENT ON COLUMN BOF.HEAT_ACT.PLANHEATCNT IS 'Запланировано плавок на смену';

COMMENT ON COLUMN BOF.HEAT_ACT.PLANHEATCNTNEXTSCHICHT IS 'Запланировано плавок на следующую смену (за макс.1час до её начала)';

COMMENT ON COLUMN BOF.HEAT_ACT.PLANHEATINSERTTIME IS 'Момент занесения к-ва плавок(хоть на текущую,хоть на следующую смену)';



ALTER TABLE BOF.HEAT_ADDITIONS_ACT
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_ADDITIONS_ACT CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_ADDITIONS_ACT
(
  HTADDACT_ID        NUMBER                     NOT NULL,
  HEAT_ID            NUMBER                     NOT NULL,
  MAT_ID             NUMBER                     NOT NULL,
  PHASE_NO           VARCHAR2(4 BYTE),
  DESTINATION_AGGNO  VARCHAR2(4 BYTE)           NOT NULL,
  DATA_SOURCE        VARCHAR2(4 BYTE),
  INSERTTIME         DATE                       NOT NULL,
  PORTION_WGT        NUMBER(6),
  TOTAL_WGT          NUMBER(6),
  DRYING_DUR         NUMBER(6),
  LANZE_POS          NUMBER(6),
  O2VOL_TOTAL        NUMBER(6),
  L1_TOTAL_WGT       NUMBER(6),
  BA_WAAGEN          VARCHAR2(4 BYTE),
  HTADDMAN_ID        NUMBER,
  LEG_PRZ            NUMBER,
  LEG_SERTIF         VARCHAR2(16 BYTE),
  BUNKER_NR          NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          50M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_ADDITIONS_ACT IS 'Таблица используемых материалов на плавку (общий вес)';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.HTADDACT_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.MAT_ID IS 'MAT_ID';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.PHASE_NO IS 'Имя фазы';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.DESTINATION_AGGNO IS 'агрегат';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.DATA_SOURCE IS 'источник данных';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.PORTION_WGT IS 'вес порции';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.TOTAL_WGT IS 'общий вес материала на плавке';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.DRYING_DUR IS 'время сушки, сек';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.LANZE_POS IS 'положение сушки';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.O2VOL_TOTAL IS 'общий О2';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.L1_TOTAL_WGT IS 'Общий вес списка';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.BA_WAAGEN IS 'режим весов';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.HTADDMAN_ID IS 'Ссылка на HTADDMAN_ID из HEAT_ADDITIONS_MAN,если занесён оттуда';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.LEG_PRZ IS '% легирующего элемента(через Мнемосхему)';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.LEG_SERTIF IS '№ Сертификата';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_ACT.BUNKER_NR IS 'Номер бункера';



ALTER TABLE BOF.HEAT_ADDITIONS_DOZEN
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_ADDITIONS_DOZEN CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_ADDITIONS_DOZEN
(
  HTADDDOZ_ID   NUMBER                          NOT NULL,
  HEAT_ID       NUMBER                          NOT NULL,
  MAT_ID        NUMBER                          NOT NULL,
  DATA_SOURCE   VARCHAR2(4 BYTE),
  INSERTTIME    DATE                            NOT NULL,
  PORTION_WGT   NUMBER(6),
  DRYING_DUR    NUMBER,
  BUNKER_NR     NUMBER,
  COMMENTAR     VARCHAR2(128 BYTE),
  CRED_ID       NUMBER,
  BUNKER_DUR    NUMBER,
  DTDOZATORAUF  DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          10M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_ADDITIONS_DOZEN IS 'Таблица используемых материалов на плавку (порционный вес)';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.HTADDDOZ_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.MAT_ID IS 'MAT_ID';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.DATA_SOURCE IS 'источник данных';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.PORTION_WGT IS 'порционный вес';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.DRYING_DUR IS 'время сушки';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.BUNKER_NR IS 'номер бункера';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.COMMENTAR IS 'комментарий';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.CRED_ID IS 'Ссылка на HEAT_WATCHADDT_CRED,если был идентифицирован';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.BUNKER_DUR IS 'Время пролеживания материала в бункере,сек';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_DOZEN.DTDOZATORAUF IS '=Heat_Act';



ALTER TABLE BOF.HEAT_ADDITIONS_MAN
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_ADDITIONS_MAN CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_ADDITIONS_MAN
(
  HTADDMAN_ID      NUMBER                       NOT NULL,
  HEAT_ID          NUMBER,
  MAT_ID           NUMBER                       NOT NULL,
  INSERTTIME       DATE,
  INS_IN_HEATTIME  DATE,
  WEIGHT           NUMBER,
  DEVICE           VARCHAR2(16 BYTE),
  SIGN             VARCHAR2(8 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_MAN.HTADDMAN_ID IS 'Unique Id';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_MAN.HEAT_ID IS 'после занесения в HEAT_ADDITIONS_ACT';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_MAN.MAT_ID IS 'MAT_ID';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_MAN.INSERTTIME IS 'Момент образования строки';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_MAN.INS_IN_HEATTIME IS 'Момент занесения в плавку';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_MAN.WEIGHT IS 'Вес, кг';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_MAN.DEVICE IS 'IP устройства ввода';

COMMENT ON COLUMN BOF.HEAT_ADDITIONS_MAN.SIGN IS 'Электронная подпись';



ALTER TABLE BOF.HEAT_ALLOYS_TOTAL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_ALLOYS_TOTAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_ALLOYS_TOTAL
(
  ALYTOT_ID    NUMBER                           NOT NULL,
  HEAT_ID      NUMBER                           NOT NULL,
  MAT_ID       NUMBER                           NOT NULL,
  CHG_TYPE     VARCHAR2(4 BYTE)                 NOT NULL,
  MOD_WEIGHT   NUMBER(6),
  SETP_WEIGHT  NUMBER(6),
  ACT_WEIGHT   NUMBER(6)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          4M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEAT_ALLOYS_TOTAL.ALYTOT_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.HEAT_ALLOYS_TOTAL.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_ALLOYS_TOTAL.MAT_ID IS 'MAT_ID';

COMMENT ON COLUMN BOF.HEAT_ALLOYS_TOTAL.CHG_TYPE IS 'тип чугуна';

COMMENT ON COLUMN BOF.HEAT_ALLOYS_TOTAL.MOD_WEIGHT IS 'модельный вес';

COMMENT ON COLUMN BOF.HEAT_ALLOYS_TOTAL.SETP_WEIGHT IS 'шаго вый вес';

COMMENT ON COLUMN BOF.HEAT_ALLOYS_TOTAL.ACT_WEIGHT IS 'текущий вес';



ALTER TABLE BOF.HEAT_BATHLEVEL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_BATHLEVEL CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_BATHLEVEL
(
  BATHLEVEL_ID  NUMBER                          NOT NULL,
  HEAT_ID       NUMBER                          NOT NULL,
  INSERTTIME    DATE                            NOT NULL,
  TYPE          VARCHAR2(4 BYTE)                NOT NULL,
  VALUE         NUMBER(4)                       NOT NULL,
  DATA_SOURCE   VARCHAR2(4 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_BATHLEVEL IS 'Таблица данных о замерах уровня ванны';

COMMENT ON COLUMN BOF.HEAT_BATHLEVEL.BATHLEVEL_ID IS 'Sequence HTBATHLEVEL_SEQ';

COMMENT ON COLUMN BOF.HEAT_BATHLEVEL.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_BATHLEVEL.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.HEAT_BATHLEVEL.TYPE IS 'тип';

COMMENT ON COLUMN BOF.HEAT_BATHLEVEL.VALUE IS 'величина';

COMMENT ON COLUMN BOF.HEAT_BATHLEVEL.DATA_SOURCE IS 'источник данных';



ALTER TABLE BOF.HEAT_BLASENS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_BLASENS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_BLASENS
(
  BLASENS_ID      NUMBER,
  HEAT_ID         NUMBER,
  DTSTART         DATE,
  DTEND           DATE,
  O2VOL           NUMBER(5),
  EVENT_ID_START  NUMBER,
  EVENT_ID_END    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_BLASENS IS 'Таблица данных о продувке плавок (общая информация)';

COMMENT ON COLUMN BOF.HEAT_BLASENS.BLASENS_ID IS 'HTBLASENS_SEQ';

COMMENT ON COLUMN BOF.HEAT_BLASENS.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_BLASENS.DTSTART IS 'момент начала продувки';

COMMENT ON COLUMN BOF.HEAT_BLASENS.DTEND IS 'момент конца продувки';

COMMENT ON COLUMN BOF.HEAT_BLASENS.O2VOL IS 'продутый О2';

COMMENT ON COLUMN BOF.HEAT_BLASENS.EVENT_ID_START IS '=heat_events by ''BLOS''';

COMMENT ON COLUMN BOF.HEAT_BLASENS.EVENT_ID_END IS '=heat_events by ''BLOE''';



ALTER TABLE BOF.HEAT_BLOWINGS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_BLOWINGS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_BLOWINGS
(
  BLOWING_ID    NUMBER                          NOT NULL,
  HEAT_ID       NUMBER                          NOT NULL,
  INSERTTIME    DATE                            NOT NULL,
  PHASE_NO      VARCHAR2(4 BYTE),
  O2VOL         NUMBER(5),
  O2FLOW        FLOAT(126),
  O2PRESSURE    FLOAT(126),
  LANCEHGT      NUMBER(4),
  LANGEWICHT_R  NUMBER,
  LANBAER_R     NUMBER,
  LANGEWICHT_L  NUMBER,
  LANBAER_L     NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          254M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_BLOWINGS IS 'Таблица данных о продувке плавок (подробная)';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.BLOWING_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.PHASE_NO IS 'имя фазы';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.O2VOL IS 'Общий О2';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.O2FLOW IS 'интенсивность';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.O2PRESSURE IS 'давление О2';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.LANCEHGT IS 'положение фурмы';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.LANGEWICHT_R IS 'Вес ПРАВОЙ фурмы';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.LANBAER_R IS 'Настыль ПРАВОЙ фурмы';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.LANGEWICHT_L IS 'Вес ЛЕВОЙ фурмы';

COMMENT ON COLUMN BOF.HEAT_BLOWINGS.LANBAER_L IS 'Настыль ЛЕВОЙ фурмы';



ALTER TABLE BOF.HEAT_CALCPARAM
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_CALCPARAM CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_CALCPARAM
(
  HEAT_NO   VARCHAR2(8 BYTE)                    NOT NULL,
  HMTEMP    NUMBER,
  HMWEIGHT  NUMBER,
  SCWEIGHT  NUMBER,
  STWEIGHT  NUMBER,
  HMPSI     FLOAT(126),
  STATUS    NVARCHAR2(100)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEAT_CALCPARAM.HEAT_NO IS 'номер плавки';

COMMENT ON COLUMN BOF.HEAT_CALCPARAM.HMTEMP IS 'температура чугуна';

COMMENT ON COLUMN BOF.HEAT_CALCPARAM.HMWEIGHT IS 'вес чугуна';

COMMENT ON COLUMN BOF.HEAT_CALCPARAM.SCWEIGHT IS 'вес лома';

COMMENT ON COLUMN BOF.HEAT_CALCPARAM.STWEIGHT IS 'вес стали';

COMMENT ON COLUMN BOF.HEAT_CALCPARAM.HMPSI IS 'содержание кремния в чугуне';

COMMENT ON COLUMN BOF.HEAT_CALCPARAM.STATUS IS 'строка состояния';



ALTER TABLE BOF.HEAT_FACTPARAM
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_FACTPARAM CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_FACTPARAM
(
  HEAT_NO   VARCHAR2(8 BYTE)                    NOT NULL,
  HMTEMP    NUMBER,
  HMWEIGHT  NUMBER,
  SCWEIGHT  NUMBER,
  STWEIGHT  NUMBER,
  HMPSI     FLOAT(126),
  STATUS    NVARCHAR2(100)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEAT_FACTPARAM.HEAT_NO IS 'номер плавки';

COMMENT ON COLUMN BOF.HEAT_FACTPARAM.HMTEMP IS 'температура чугуна';

COMMENT ON COLUMN BOF.HEAT_FACTPARAM.HMWEIGHT IS 'вес чугуна';

COMMENT ON COLUMN BOF.HEAT_FACTPARAM.SCWEIGHT IS 'вес лома';

COMMENT ON COLUMN BOF.HEAT_FACTPARAM.STWEIGHT IS 'вес стали';

COMMENT ON COLUMN BOF.HEAT_FACTPARAM.HMPSI IS 'содержание кремния в чугуне';

COMMENT ON COLUMN BOF.HEAT_FACTPARAM.STATUS IS 'строка состояния';



DROP TABLE BOF.HEAT_HOTMETAL_KRAN CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_HOTMETAL_KRAN
(
  SERIAL         NUMBER,
  KRAN_TIME      DATE,
  LADLE          INTEGER,
  NETTO          NUMBER,
  HEAT_NO        VARCHAR2(7 BYTE),
  T_CRANE        NUMBER(3),
  KRANE_COMMENT  VARCHAR2(372 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_HOTMETAL_KRAN IS 'Таблица данных по чугуну на плавку (взвешивание на крановых весах)';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL_KRAN.SERIAL IS 'Из DBF наземной станции';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL_KRAN.KRAN_TIME IS 'Время взвешивания по часам наземной станции';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL_KRAN.LADLE IS 'номер чугуна';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL_KRAN.NETTO IS 'Вес слитого чугуна';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL_KRAN.HEAT_NO IS 'номер плавки';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL_KRAN.T_CRANE IS 'Номер крана';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL_KRAN.KRANE_COMMENT IS 'Замечания по качеству данных';



ALTER TABLE BOF.HEAT_MEASUREMENTS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_MEASUREMENTS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_MEASUREMENTS
(
  MEASUREMENT_ID  NUMBER                        NOT NULL,
  HEAT_ID         NUMBER                        NOT NULL,
  INSERTTIME      DATE                          NOT NULL,
  PHASE_NO        VARCHAR2(4 BYTE)              NOT NULL,
  TYPE            VARCHAR2(4 BYTE),
  TEMP            NUMBER(4),
  OXYGEN          FLOAT(126),
  EMF             FLOAT(126),
  CARBON          FLOAT(126),
  DATA_SOURCE     VARCHAR2(4 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          7M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_MEASUREMENTS IS 'Таблица данных замеров температуры на плавке';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.MEASUREMENT_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.PHASE_NO IS 'имя фазы';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.TYPE IS 'тип';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.TEMP IS 'температура';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.OXYGEN IS 'содержание О2';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.EMF IS 'EMF';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.CARBON IS 'содержание [C]';

COMMENT ON COLUMN BOF.HEAT_MEASUREMENTS.DATA_SOURCE IS 'источник данных';



ALTER TABLE BOF.HEAT_OFFGAS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_OFFGAS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_OFFGAS
(
  OFFGAS_ID   NUMBER                            NOT NULL,
  HEAT_ID     NUMBER                            NOT NULL,
  INSERTTIME  DATE                              NOT NULL,
  TEMP        NUMBER(4),
  FLOW        FLOAT(126),
  ANA_CO      FLOAT(126),
  ANA_CO2     FLOAT(126),
  ANA_O2      FLOAT(126),
  ANA_N2      FLOAT(126),
  ANA_H2      FLOAT(126),
  ANA_AR      FLOAT(126),
  HOOD_POS    NUMBER(1),
  PHASE_NO    VARCHAR2(4 BYTE),
  CNV_NO      NUMBER(1)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          112M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_OFFGAS IS 'Таблица данных газового анализа на плавке';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.OFFGAS_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.TEMP IS 'температура';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.FLOW IS 'расход';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.ANA_CO IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.ANA_CO2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.ANA_O2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.ANA_N2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.ANA_H2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.ANA_AR IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.HOOD_POS IS 'положение юбки';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.PHASE_NO IS 'имя фазы';

COMMENT ON COLUMN BOF.HEAT_OFFGAS.CNV_NO IS '№ конвертера';



ALTER TABLE BOF.HEATORDER_AIMDATA
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATORDER_AIMDATA CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATORDER_AIMDATA
(
  HO_ID       NUMBER                            NOT NULL,
  UPDATETIME  DATE,
  NAME        VARCHAR2(20 BYTE)                 NOT NULL,
  VALUE_MIN   NUMBER,
  VALUE_MAX   NUMBER,
  VALUE_DIR   NUMBER,
  VALUE_TEXT  VARCHAR2(20 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          7M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEATORDER_AIMDATA.HO_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.HEATORDER_AIMDATA.UPDATETIME IS 'момент обновления';

COMMENT ON COLUMN BOF.HEATORDER_AIMDATA.NAME IS 'наименование';

COMMENT ON COLUMN BOF.HEATORDER_AIMDATA.VALUE_MIN IS 'минимум';

COMMENT ON COLUMN BOF.HEATORDER_AIMDATA.VALUE_MAX IS 'максимум';

COMMENT ON COLUMN BOF.HEATORDER_AIMDATA.VALUE_DIR IS 'величина';

COMMENT ON COLUMN BOF.HEATORDER_AIMDATA.VALUE_TEXT IS 'комментарий';



ALTER TABLE BOF.HEATORDER_ANA
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATORDER_ANA CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATORDER_ANA
(
  HO_ID           NUMBER                        NOT NULL,
  UPDATETIME      DATE,
  ELEMENT         VARCHAR2(6 BYTE)              NOT NULL,
  VALUE_MIN       NUMBER,
  VALUE_AIM       NUMBER,
  VALUE_MAX       NUMBER,
  VALUE_MIN_BLOW  NUMBER,
  VALUE_AIM_BLOW  NUMBER,
  VALUE_MAX_BLOW  NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          15M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEATORDER_ANA.HO_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.HEATORDER_ANA.UPDATETIME IS 'момент обновления';

COMMENT ON COLUMN BOF.HEATORDER_ANA.ELEMENT IS 'элемент';

COMMENT ON COLUMN BOF.HEATORDER_ANA.VALUE_MIN IS 'минимум';

COMMENT ON COLUMN BOF.HEATORDER_ANA.VALUE_AIM IS 'цель';

COMMENT ON COLUMN BOF.HEATORDER_ANA.VALUE_MAX IS 'максимум';

COMMENT ON COLUMN BOF.HEATORDER_ANA.VALUE_MIN_BLOW IS 'минимум в конце продуки';

COMMENT ON COLUMN BOF.HEATORDER_ANA.VALUE_AIM_BLOW IS 'цель в конце продуки';

COMMENT ON COLUMN BOF.HEATORDER_ANA.VALUE_MAX_BLOW IS 'максимум в конце продуки';



ALTER TABLE BOF.HEATORDER_RNO
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATORDER_RNO CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATORDER_RNO
(
  HO_ID          NUMBER                         NOT NULL,
  RNOHEATNUMBER  NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEATORDER_RNO.HO_ID IS 'Id плана';

COMMENT ON COLUMN BOF.HEATORDER_RNO.RNOHEATNUMBER IS 'Id плавки возврата';



ALTER TABLE BOF.HEATORDERS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATORDERS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATORDERS
(
  HO_ID                 NUMBER                  NOT NULL,
  HO_NO                 VARCHAR2(9 BYTE)        NOT NULL,
  STATUS                VARCHAR2(4 BYTE)        NOT NULL,
  INSERTTIME            DATE                    NOT NULL,
  GRADE_ID              NUMBER                  NOT NULL,
  PLANNED_TAP_STEELWGT  NUMBER(6),
  PLANNED_CV            NUMBER(1),
  PLANNED_CC            NUMBER(1),
  ORDER_SOURCE          VARCHAR2(4 BYTE)        DEFAULT 'PCS'                 NOT NULL,
  ANA_SOURCE            VARCHAR2(4 BYTE),
  INSTRUCTION_TEXT      VARCHAR2(180 BYTE),
  STATUS_FCC            VARCHAR2(4 BYTE),
  SCHEDULENO            NUMBER,
  SEQUENCENO            NUMBER,
  POSITIONNO            NUMBER,
  STEELGRADE            VARCHAR2(20 BYTE),
  PLANNED_TAPEND_TIME   DATE,
  GRADE_ANALYSIS_ID     NUMBER,
  STATUS_OK             CHAR(2 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          7M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEATORDERS IS 'Таблица планирования';

COMMENT ON COLUMN BOF.HEATORDERS.HO_ID IS 'Id';

COMMENT ON COLUMN BOF.HEATORDERS.HO_NO IS 'Номер плана';

COMMENT ON COLUMN BOF.HEATORDERS.STATUS IS 'Статус';

COMMENT ON COLUMN BOF.HEATORDERS.INSERTTIME IS 'Дата создания';

COMMENT ON COLUMN BOF.HEATORDERS.GRADE_ID IS 'Id Марки стали';

COMMENT ON COLUMN BOF.HEATORDERS.PLANNED_TAP_STEELWGT IS 'Заданный вес';

COMMENT ON COLUMN BOF.HEATORDERS.PLANNED_CV IS 'Заданный конвертер';

COMMENT ON COLUMN BOF.HEATORDERS.PLANNED_CC IS 'Заданный № УНРС или ЭСПЦ';

COMMENT ON COLUMN BOF.HEATORDERS.ORDER_SOURCE IS 'Источник';

COMMENT ON COLUMN BOF.HEATORDERS.ANA_SOURCE IS 'источник анализов';

COMMENT ON COLUMN BOF.HEATORDERS.INSTRUCTION_TEXT IS 'текст инструкции';

COMMENT ON COLUMN BOF.HEATORDERS.STATUS_FCC IS 'статус статической модели';

COMMENT ON COLUMN BOF.HEATORDERS.SCHEDULENO IS 'номер плана';

COMMENT ON COLUMN BOF.HEATORDERS.SEQUENCENO IS 'номер серии';

COMMENT ON COLUMN BOF.HEATORDERS.POSITIONNO IS 'номер мозиции';

COMMENT ON COLUMN BOF.HEATORDERS.STEELGRADE IS 'Марка';

COMMENT ON COLUMN BOF.HEATORDERS.PLANNED_TAPEND_TIME IS 'Планируемое время выпуска';

COMMENT ON COLUMN BOF.HEATORDERS.GRADE_ANALYSIS_ID IS 'Id марки';

COMMENT ON COLUMN BOF.HEATORDERS.STATUS_OK IS 'статус';



ALTER TABLE BOF.HEAT_PERSONAL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_PERSONAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_PERSONAL
(
  ID_PERSONAL  NUMBER,
  HEAT_NO      VARCHAR2(7 BYTE),
  NSMEN        VARCHAR2(25 BYTE),
  MASTPR       VARCHAR2(25 BYTE),
  DISTR        VARCHAR2(25 BYTE),
  STALEV       VARCHAR2(25 BYTE),
  KONOTK       VARCHAR2(25 BYTE),
  KLADOV       VARCHAR2(25 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_PERSONAL IS 'Таблица данных персонала, проводивших плавку (ФИО мастера, сталевара и т.д.)';

COMMENT ON COLUMN BOF.HEAT_PERSONAL.ID_PERSONAL IS 'уникальный Id';

COMMENT ON COLUMN BOF.HEAT_PERSONAL.HEAT_NO IS 'HEAT_NO';

COMMENT ON COLUMN BOF.HEAT_PERSONAL.NSMEN IS 'начальник смены';

COMMENT ON COLUMN BOF.HEAT_PERSONAL.MASTPR IS 'мастер смены';

COMMENT ON COLUMN BOF.HEAT_PERSONAL.DISTR IS 'дистрибуторшик';

COMMENT ON COLUMN BOF.HEAT_PERSONAL.STALEV IS 'сталевар';

COMMENT ON COLUMN BOF.HEAT_PERSONAL.KONOTK IS 'контролер ОТК';

COMMENT ON COLUMN BOF.HEAT_PERSONAL.KLADOV IS 'кладовщик';



ALTER TABLE BOF.HEAT_PHASES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_PHASES CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_PHASES
(
  HEATPHASE_ID   NUMBER                         NOT NULL,
  HEAT_ID        NUMBER                         NOT NULL,
  PHASE_NO       VARCHAR2(6 BYTE)               NOT NULL,
  STARTTIME      DATE,
  ENDTIME        DATE,
  CORRECTION_NO  NUMBER(1),
  COR_REASON_ID  VARCHAR2(4 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          15M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_PHASES IS 'Таблица данных по фазам плавки';

COMMENT ON COLUMN BOF.HEAT_PHASES.HEATPHASE_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.HEAT_PHASES.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_PHASES.PHASE_NO IS 'имя фазы';

COMMENT ON COLUMN BOF.HEAT_PHASES.STARTTIME IS 'момент начала';

COMMENT ON COLUMN BOF.HEAT_PHASES.ENDTIME IS 'момент окончания';

COMMENT ON COLUMN BOF.HEAT_PHASES.CORRECTION_NO IS 'количество додувок';

COMMENT ON COLUMN BOF.HEAT_PHASES.COR_REASON_ID IS 'причина додувок';



ALTER TABLE BOF.HEAT_POURBACK
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_POURBACK CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_POURBACK
(
  POURBACK_ID      NUMBER                       NOT NULL,
  HEAT_ID          NUMBER,
  POURBACKTIME     DATE                         NOT NULL,
  WEIGHT           NUMBER(8),
  TEMP             NUMBER(4),
  HEATNO_BACKHEAT  VARCHAR2(7 BYTE),
  HEATID_BACKHEAT  NUMBER,
  POURBACK_TYPE    VARCHAR2(3 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_POURBACK IS 'Таблица данных по возвратам плавок';

COMMENT ON COLUMN BOF.HEAT_POURBACK.POURBACK_ID IS 'Id уникальный';

COMMENT ON COLUMN BOF.HEAT_POURBACK.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_POURBACK.POURBACKTIME IS 'момент возврата';

COMMENT ON COLUMN BOF.HEAT_POURBACK.WEIGHT IS 'вес возвращенной стали';

COMMENT ON COLUMN BOF.HEAT_POURBACK.TEMP IS 'температура стали';

COMMENT ON COLUMN BOF.HEAT_POURBACK.HEATNO_BACKHEAT IS 'номер возвращаемой плавки';

COMMENT ON COLUMN BOF.HEAT_POURBACK.HEATID_BACKHEAT IS 'Id возвращаемой плавки';

COMMENT ON COLUMN BOF.HEAT_POURBACK.POURBACK_TYPE IS 'тип возврата';



ALTER TABLE BOF.HEAT_REGRADINGS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_REGRADINGS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_REGRADINGS
(
  REGR_ID         NUMBER                        NOT NULL,
  HEAT_ID         NUMBER                        NOT NULL,
  INSERTTIME      DATE                          NOT NULL,
  AIM_GRADE_ID    NUMBER                        NOT NULL,
  NEW_GRADE_ID    NUMBER                        NOT NULL,
  REGR_REASON_NO  VARCHAR2(4 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_REGRADINGS IS 'Таблица данных о смене марки на плавку';

COMMENT ON COLUMN BOF.HEAT_REGRADINGS.REGR_ID IS 'кникальный Id';

COMMENT ON COLUMN BOF.HEAT_REGRADINGS.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_REGRADINGS.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.HEAT_REGRADINGS.AIM_GRADE_ID IS 'целевая марка';

COMMENT ON COLUMN BOF.HEAT_REGRADINGS.NEW_GRADE_ID IS 'новая марка';

COMMENT ON COLUMN BOF.HEAT_REGRADINGS.REGR_REASON_NO IS 'причина смены';



ALTER TABLE BOF.HEAT_REMARK
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_REMARK CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_REMARK
(
  ID_REMARK   NUMBER,
  HEAT_NO     VARCHAR2(7 BYTE),
  REMARK_OTK  VARCHAR2(51 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          4M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_REMARK IS 'Таблица данных по замечаниям на плавку';

COMMENT ON COLUMN BOF.HEAT_REMARK.ID_REMARK IS 'уникальный Id';

COMMENT ON COLUMN BOF.HEAT_REMARK.HEAT_NO IS 'номер плавки';

COMMENT ON COLUMN BOF.HEAT_REMARK.REMARK_OTK IS 'замечания ОТК';



ALTER TABLE BOF.HEATS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATS
(
  HEAT_ID            NUMBER                     NOT NULL,
  HEAT_NO            VARCHAR2(7 BYTE),
  HO_ID              NUMBER,
  GRADE_ID           NUMBER,
  CV_NO              NUMBER(1),
  REMARK             VARCHAR2(200 BYTE),
  ADDSCHEME_NO       VARCHAR2(2 BYTE),
  BLOWSCHEME_NO      VARCHAR2(2 BYTE),
  ACT_TAPTEMP        NUMBER(4),
  AIM_TAPWEIGHT      NUMBER(6),
  CALC_TAPWEIGHT     NUMBER(6),
  ACT_TAPWEIGHT      NUMBER(6),
  TEAM_NAME          VARCHAR2(1 BYTE),
  CHGLALDE_NO        VARCHAR2(2 BYTE),
  CHGD_HMWEIGHT      NUMBER(6),
  HM_TEMP            NUMBER(4),
  STEELLADLE_NO      VARCHAR2(2 BYTE),
  DESTINATION_AGGNO  VARCHAR2(4 BYTE),
  PREV_HEATNO        VARCHAR2(7 BYTE),
  TAPTOTAP_DUR       NUMBER,
  PHASE_NO           VARCHAR2(4 BYTE),
  STATUS_SCC         VARCHAR2(4 BYTE),
  STATUS_IBC         VARCHAR2(4 BYTE),
  STATUS_ALYC        VARCHAR2(4 BYTE),
  STATUS_CORC        VARCHAR2(4 BYTE),
  STATUS_TAPC        VARCHAR2(4 BYTE),
  STATUS_DYNC        VARCHAR2(4 BYTE),
  STATUS_REC         VARCHAR2(4 BYTE),
  PREV_HEATID        NUMBER,
  CONVERTER_LIFE     NUMBER,
  CAMPAIGN_NO        NUMBER,
  LANCE_NO           NUMBER,
  CO_GESAMT          NUMBER,
  REMARK1            VARCHAR2(200 BYTE),
  CALC_SCC_C         FLOAT(126),
  RPT_TSOLL          NUMBER,
  RPT_TIST           NUMBER,
  RPT_CSOLL          NUMBER,
  RPT_CIST           NUMBER,
  BA_LANCE           NUMBER,
  BA_SAUSTOFF        NUMBER,
  BA_WAAGEN          NUMBER,
  DT_BEGIN           DATE,
  DT_END             DATE,
  DESLAGG_STATUS     INTEGER                    DEFAULT 0,
  CNV_BEHANDLUNG     VARCHAR2(64 BYTE),
  CNV_DELAYS         VARCHAR2(64 BYTE),
  TAPP_WINKEL        NUMBER,
  UNRS_NO            VARCHAR2(2 BYTE),
  DT_MBLS            DATE,
  DT_RE_READY        DATE,
  DT_RE_CHARGED      DATE,
  DT_SR_READY        DATE,
  DT_SR_CHARGED      DATE,
  SOLLUNRS_NO        VARCHAR2(2 BYTE),
  OK00               NUMBER,
  OK01               NUMBER,
  OK02               NUMBER,
  OK_INSERTTIME      DATE,
  DTBEGINM           DATE,
  DTNSCCE            DATE,
  DTCHECKEDMANUELL   DATE,
  BWASCHANGED        NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          10M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEATS IS 'Таблица данных по плавкам';

COMMENT ON COLUMN BOF.HEATS.HEAT_ID IS 'Sequence HEATID_SEQ';

COMMENT ON COLUMN BOF.HEATS.HEAT_NO IS 'Номер плавки';

COMMENT ON COLUMN BOF.HEATS.HO_ID IS 'Id плана';

COMMENT ON COLUMN BOF.HEATS.GRADE_ID IS 'ID марки стали';

COMMENT ON COLUMN BOF.HEATS.CV_NO IS 'Номер конвертера';

COMMENT ON COLUMN BOF.HEATS.REMARK IS 'замечания';

COMMENT ON COLUMN BOF.HEATS.ADDSCHEME_NO IS 'номер схемы шлакообразующих';

COMMENT ON COLUMN BOF.HEATS.BLOWSCHEME_NO IS 'номер схемы продувки';

COMMENT ON COLUMN BOF.HEATS.ACT_TAPTEMP IS 'температура на сливе';

COMMENT ON COLUMN BOF.HEATS.AIM_TAPWEIGHT IS 'заданный вес стали';

COMMENT ON COLUMN BOF.HEATS.CALC_TAPWEIGHT IS 'расчетный вес стали';

COMMENT ON COLUMN BOF.HEATS.ACT_TAPWEIGHT IS 'факт вес стали';

COMMENT ON COLUMN BOF.HEATS.TEAM_NAME IS 'номер бригады';

COMMENT ON COLUMN BOF.HEATS.CHGLALDE_NO IS 'номер ковша (чугун)';

COMMENT ON COLUMN BOF.HEATS.CHGD_HMWEIGHT IS 'вес в ковше (чугун)';

COMMENT ON COLUMN BOF.HEATS.HM_TEMP IS 'температура чугуна';

COMMENT ON COLUMN BOF.HEATS.STEELLADLE_NO IS 'номер ковша (сталь)';

COMMENT ON COLUMN BOF.HEATS.DESTINATION_AGGNO IS 'целевой агрегат';

COMMENT ON COLUMN BOF.HEATS.PREV_HEATNO IS 'номер предыдущей плавки';

COMMENT ON COLUMN BOF.HEATS.TAPTOTAP_DUR IS 'цикл плавки';

COMMENT ON COLUMN BOF.HEATS.PHASE_NO IS 'имя фазы';

COMMENT ON COLUMN BOF.HEATS.STATUS_SCC IS 'статус статической модели';

COMMENT ON COLUMN BOF.HEATS.STATUS_IBC IS 'статус модели обратной связи';

COMMENT ON COLUMN BOF.HEATS.STATUS_ALYC IS 'статус  модели легирующих';

COMMENT ON COLUMN BOF.HEATS.STATUS_CORC IS 'статус динамической модели на додувке';

COMMENT ON COLUMN BOF.HEATS.STATUS_TAPC IS 'статус слива';

COMMENT ON COLUMN BOF.HEATS.STATUS_DYNC IS 'статус динамической модели';

COMMENT ON COLUMN BOF.HEATS.STATUS_REC IS 'статус  модели расчета чугуна';

COMMENT ON COLUMN BOF.HEATS.PREV_HEATID IS 'предыдущий heat_id';

COMMENT ON COLUMN BOF.HEATS.CONVERTER_LIFE IS 'стойкость футеровки';

COMMENT ON COLUMN BOF.HEATS.CAMPAIGN_NO IS 'номер компании';

COMMENT ON COLUMN BOF.HEATS.LANCE_NO IS 'номер фурмы';

COMMENT ON COLUMN BOF.HEATS.CO_GESAMT IS 'общий выброс СО';

COMMENT ON COLUMN BOF.HEATS.REMARK1 IS 'замечания';

COMMENT ON COLUMN BOF.HEATS.CALC_SCC_C IS 'расчетный [C] от статической модели';

COMMENT ON COLUMN BOF.HEATS.RPT_TSOLL IS 'заданная отчетная температура';

COMMENT ON COLUMN BOF.HEATS.RPT_TIST IS 'факт отчетная температура';

COMMENT ON COLUMN BOF.HEATS.RPT_CSOLL IS 'заданная отчетная [С]';

COMMENT ON COLUMN BOF.HEATS.RPT_CIST IS 'факт отчетный  [C]';

COMMENT ON COLUMN BOF.HEATS.BA_LANCE IS 'режим управления фурмы';

COMMENT ON COLUMN BOF.HEATS.BA_SAUSTOFF IS 'режим управления  кислородом';

COMMENT ON COLUMN BOF.HEATS.BA_WAAGEN IS 'режим управления весами';

COMMENT ON COLUMN BOF.HEATS.DT_BEGIN IS 'Set through trigger tr_heatev';

COMMENT ON COLUMN BOF.HEATS.DT_END IS 'Set through trigger tr_heatev';

COMMENT ON COLUMN BOF.HEATS.DESLAGG_STATUS IS 'статус слива шлака';

COMMENT ON COLUMN BOF.HEATS.CNV_BEHANDLUNG IS 'Строка операций ухода за конвертером';

COMMENT ON COLUMN BOF.HEATS.CNV_DELAYS IS 'Строка причин превышения цикла плавки';

COMMENT ON COLUMN BOF.HEATS.TAPP_WINKEL IS 'Максимальный угол при сливе стали';

COMMENT ON COLUMN BOF.HEATS.UNRS_NO IS 'УНРС через link от Татьяны';

COMMENT ON COLUMN BOF.HEATS.DT_MBLS IS 'Момент начала основной продувки';

COMMENT ON COLUMN BOF.HEATS.DT_RE_READY IS 'Момент готовности (на ГПО) ковша к заливке дистрибутором';

COMMENT ON COLUMN BOF.HEATS.DT_RE_CHARGED IS 'Момент заливки чугуна дистриботором';

COMMENT ON COLUMN BOF.HEATS.DT_SR_READY IS 'Момент готовности (на ГПО) совка';

COMMENT ON COLUMN BOF.HEATS.DT_SR_CHARGED IS 'Момент загрузки скрапа дистрибутором';

COMMENT ON COLUMN BOF.HEATS.SOLLUNRS_NO IS 'целевая УНРС';

COMMENT ON COLUMN BOF.HEATS.OK00 IS 'TEXNO select * from v_ref_card_bof t WHERE t.code_group = ''00'' and code_podgroup=''00''';

COMMENT ON COLUMN BOF.HEATS.OK01 IS 'TEXNO select * from v_ref_card_bof t WHERE t.code_group = ''01''';

COMMENT ON COLUMN BOF.HEATS.OK02 IS 'TEXNO select * from v_ref_card_bof t WHERE t.code_group = ''02''';

COMMENT ON COLUMN BOF.HEATS.OK_INSERTTIME IS 'Момент занесения';

COMMENT ON COLUMN BOF.HEATS.DTBEGINM IS 'изначально := dtBegin по триггеру,редактируется в Редакторе плавок';

COMMENT ON COLUMN BOF.HEATS.DTNSCCE IS 'SCCE следующей плавки на этом конвертере';

COMMENT ON COLUMN BOF.HEATS.DTCHECKEDMANUELL IS 'Дата подтверждения проверки материалов вручную';

COMMENT ON COLUMN BOF.HEATS.BWASCHANGED IS 'При проверке вручную были изменены материалы';



ALTER TABLE BOF.HEATS_ALLERTS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATS_ALLERTS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATS_ALLERTS
(
  HEAT_ID      NUMBER,
  HEAT_NO      VARCHAR2(7 BYTE),
  HEAT_STATUS  NUMBER(1)                        DEFAULT 0,
  HEAT_FROM    NUMBER(1),
  HEAT_DATE    DATE                             DEFAULT SYSDATE,
  HEAT_UPDATE  DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEATS_ALLERTS IS 'Таблица реализации интерфейса уровней 2 и 3 АСУ';

COMMENT ON COLUMN BOF.HEATS_ALLERTS.HEAT_ID IS 'Ключ - идентификатор';

COMMENT ON COLUMN BOF.HEATS_ALLERTS.HEAT_NO IS 'Номер плавки';

COMMENT ON COLUMN BOF.HEATS_ALLERTS.HEAT_STATUS IS 'Статус: 0 или 1';

COMMENT ON COLUMN BOF.HEATS_ALLERTS.HEAT_FROM IS 'Сигнал от : HEATS-1, HEAT_EVENTS-2 or 3 or 4 or 5, REDAKTOR-6,12otm-7';

COMMENT ON COLUMN BOF.HEATS_ALLERTS.HEAT_DATE IS 'Дата обновления';



ALTER TABLE BOF.HEATS_ESPC
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATS_ESPC CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATS_ESPC
(
  HEAT_ID  NUMBER                               NOT NULL,
  HEAT_NO  VARCHAR2(6 BYTE)                     NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEATS_ESPC.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEATS_ESPC.HEAT_NO IS 'номер плавки';



DROP TABLE BOF.HEAT_SLAG_IN_SK CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_SLAG_IN_SK
(
  HEAT_ID        NUMBER                         NOT NULL,
  SLAG_IN_SK_ID  NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_SLAG_IN_SK IS 'Данные по шлаку в стальковше';

COMMENT ON COLUMN BOF.HEAT_SLAG_IN_SK.HEAT_ID IS 'Принадлежит этой плавке';

COMMENT ON COLUMN BOF.HEAT_SLAG_IN_SK.SLAG_IN_SK_ID IS 'Id из SLAG_IN_SK_NSI';



ALTER TABLE BOF.HEAT_TARGETVAL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_TARGETVAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_TARGETVAL
(
  HEAT_NO      VARCHAR2(8 BYTE)                 NOT NULL,
  STTEMP       NUMBER,
  PMGO         FLOAT(126),
  PFEO         FLOAT(126),
  BASITICY     FLOAT(126),
  FINALCARBON  FLOAT(126)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEAT_TARGETVAL.HEAT_NO IS 'номер плавки';

COMMENT ON COLUMN BOF.HEAT_TARGETVAL.STTEMP IS 'температура стали';

COMMENT ON COLUMN BOF.HEAT_TARGETVAL.PMGO IS '% MgO';

COMMENT ON COLUMN BOF.HEAT_TARGETVAL.PFEO IS '% FeO';

COMMENT ON COLUMN BOF.HEAT_TARGETVAL.BASITICY IS 'Основность';

COMMENT ON COLUMN BOF.HEAT_TARGETVAL.FINALCARBON IS 'Остаток углерода %';



ALTER TABLE BOF.HEAT_UNRS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_UNRS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_UNRS
(
  HEAT_UNRS_ID  NUMBER                          NOT NULL,
  HEAT_NO       VARCHAR2(7 BYTE)                NOT NULL,
  UNRS_NO       VARCHAR2(2 BYTE)                NOT NULL,
  INSERTTIME    DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_UNRS IS 'Таблица данных по плавкам на УНРС';

COMMENT ON COLUMN BOF.HEAT_UNRS.HEAT_UNRS_ID IS 'Id задания';

COMMENT ON COLUMN BOF.HEAT_UNRS.HEAT_NO IS '7-значный номер плавки';

COMMENT ON COLUMN BOF.HEAT_UNRS.UNRS_NO IS 'номер УНРС';

COMMENT ON COLUMN BOF.HEAT_UNRS.INSERTTIME IS 'Дата ввода';



DROP TABLE BOF.HEAT_WATCHADDT_CRED CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_WATCHADDT_CRED
(
  CRED_ID       NUMBER                          NOT NULL,
  DEBT_ID       NUMBER,
  INSERTTIME    DATE,
  LAGERTIME     INTEGER,
  PORTION_WGT   NUMBER(6),
  ITWASDELETE   INTEGER,
  INPUT_FROM    VARCHAR2(16 BYTE),
  UNTERSCHRIFT  VARCHAR2(19 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEAT_WATCHADDT_CRED.LAGERTIME IS 'Время пребывания в бункере(сек)';

COMMENT ON COLUMN BOF.HEAT_WATCHADDT_CRED.ITWASDELETE IS 'Заносится при удалении дозы';



DROP TABLE BOF.HEAT_WATCHADDT_DEBT CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_WATCHADDT_DEBT
(
  DEBT_ID       NUMBER                          NOT NULL,
  CV_NO         NUMBER(1),
  BUNKER        NUMBER(2),
  MAT_NAME      VARCHAR2(6 BYTE),
  INSERTTIME    DATE,
  DEBET_WGT     NUMBER(6),
  REST_WGT      NUMBER(6),
  INPUT_FROM    VARCHAR2(16 BYTE),
  UNTERSCHRIFT  VARCHAR2(19 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE BOF.HOTMETAL_LADLES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HOTMETAL_LADLES CASCADE CONSTRAINTS;

CREATE TABLE BOF.HOTMETAL_LADLES
(
  CHGL_ID            NUMBER                     NOT NULL,
  CHGL_NO            VARCHAR2(2 BYTE)           NOT NULL,
  STATUS             VARCHAR2(4 BYTE)           NOT NULL,
  ANA_C              FLOAT(126),
  ANA_SI             FLOAT(126),
  ANA_MN             FLOAT(126),
  ANA_P              FLOAT(126),
  ANA_S              FLOAT(126),
  ANA_TI             FLOAT(126),
  HM_TEMP            NUMBER(4),
  HM_WEIGHT          NUMBER(6),
  TEMP_SOURCE        VARCHAR2(4 BYTE),
  WEIGHT_SOURCE      VARCHAR2(4 BYTE),
  ANA_SOURCE         VARCHAR2(4 BYTE),
  FIRST_POURINGTIME  DATE                       NOT NULL,
  LAST_POURINGTIME   DATE,
  VISIBLEONL1        NUMBER(1)                  DEFAULT 1,
  DP_KOVSH_CHUG_ID   NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          5M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HOTMETAL_LADLES IS 'Таблица данных чугуновозных ковшей';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.CHGL_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.CHGL_NO IS 'номер ковша';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.STATUS IS 'статус';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.ANA_C IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.ANA_SI IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.ANA_MN IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.ANA_P IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.ANA_S IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.ANA_TI IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.HM_TEMP IS 'температура чугуна';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.HM_WEIGHT IS 'вес';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.TEMP_SOURCE IS 'источник температуры';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.WEIGHT_SOURCE IS 'источник веса';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.ANA_SOURCE IS 'источник анализа';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.FIRST_POURINGTIME IS 'момент 1й наливки';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.LAST_POURINGTIME IS 'момент последней наливки';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.VISIBLEONL1 IS 'Показать в списке готовых ковшей на ГПО';

COMMENT ON COLUMN BOF.HOTMETAL_LADLES.DP_KOVSH_CHUG_ID IS 'Ссылка на ds_main@texno';



ALTER TABLE BOF.HOTMETAL_POURINGS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HOTMETAL_POURINGS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HOTMETAL_POURINGS
(
  HMPOURING_ID  NUMBER                          NOT NULL,
  POURINGTIME   DATE                            NOT NULL,
  TLC_ID        NUMBER                          NOT NULL,
  TLC_NO        NUMBER                          NOT NULL,
  CHGL_ID       NUMBER                          NOT NULL,
  WEIGHT        NUMBER(6)                       NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HOTMETAL_POURINGS IS 'Таблица данных "наливок" чугуна в чугуновозные ковши';

COMMENT ON COLUMN BOF.HOTMETAL_POURINGS.HMPOURING_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.HOTMETAL_POURINGS.POURINGTIME IS 'момент наливки';

COMMENT ON COLUMN BOF.HOTMETAL_POURINGS.TLC_ID IS 'Id  миксера';

COMMENT ON COLUMN BOF.HOTMETAL_POURINGS.TLC_NO IS 'номер миксера';

COMMENT ON COLUMN BOF.HOTMETAL_POURINGS.CHGL_ID IS 'Id ковша';

COMMENT ON COLUMN BOF.HOTMETAL_POURINGS.WEIGHT IS 'вес';



DROP TABLE BOF.KRANECTRL CASCADE CONSTRAINTS;

CREATE TABLE BOF.KRANECTRL
(
  ID                    INTEGER,
  NAME                  VARCHAR2(32 BYTE),
  LASTDATARECEIVED      DATE,
  LASTIDENTTOHEAT       DATE,
  ROWSWITHOUTIDENTIFIC  NUMBER,
  WATCHDOG              DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.KRANECTRL IS 'Таблица данных контроля крановых систем взвешивания';

COMMENT ON COLUMN BOF.KRANECTRL.ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.KRANECTRL.NAME IS 'наименование системы';

COMMENT ON COLUMN BOF.KRANECTRL.LASTDATARECEIVED IS 'Последний ввод данных с системы';

COMMENT ON COLUMN BOF.KRANECTRL.LASTIDENTTOHEAT IS 'Последняя удачная идентификация данных';

COMMENT ON COLUMN BOF.KRANECTRL.ROWSWITHOUTIDENTIFIC IS 'к-во новых строк после удачной идентификации';

COMMENT ON COLUMN BOF.KRANECTRL.WATCHDOG IS 'WatchDog: Дата последнего квитка агента на кранстанции';



DROP TABLE BOF.KRANWEB CASCADE CONSTRAINTS;

CREATE TABLE BOF.KRANWEB
(
  ID       NUMBER,
  KRAN_NR  INTEGER,
  TYPE     VARCHAR2(8 BYTE),
  DTBEGIN  DATE,
  DTEND    DATE,
  REMARK   VARCHAR2(64 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.KRANWEB IS 'Таблица данных о состоянии кранов производства (ремонты, простои, аварии и проч.)';

COMMENT ON COLUMN BOF.KRANWEB.ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.KRANWEB.KRAN_NR IS 'номер крана';

COMMENT ON COLUMN BOF.KRANWEB.TYPE IS 'состояние';

COMMENT ON COLUMN BOF.KRANWEB.DTBEGIN IS 'начало периода';

COMMENT ON COLUMN BOF.KRANWEB.DTEND IS 'конец периода';

COMMENT ON COLUMN BOF.KRANWEB.REMARK IS 'примечание';



DROP TABLE BOF.KRANWEBACT CASCADE CONSTRAINTS;

CREATE TABLE BOF.KRANWEBACT
(
  KRAN_NR  INTEGER,
  TYPE     VARCHAR2(8 BYTE),
  DTBEGIN  DATE,
  REMARK   VARCHAR2(64 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.KRANWEBACT IS 'Таблица данных о текущем состоянии кранов производства';

COMMENT ON COLUMN BOF.KRANWEBACT.KRAN_NR IS 'номер крана';

COMMENT ON COLUMN BOF.KRANWEBACT.TYPE IS 'тип';

COMMENT ON COLUMN BOF.KRANWEBACT.DTBEGIN IS 'начало';

COMMENT ON COLUMN BOF.KRANWEBACT.REMARK IS 'замечание';



ALTER TABLE BOF.LADLES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.LADLES CASCADE CONSTRAINTS;

CREATE TABLE BOF.LADLES
(
  CHGL_ID      NUMBER                           NOT NULL,
  CHGL_NO      VARCHAR2(2 BYTE),
  ANA_C        FLOAT(126),
  ANA_SI       FLOAT(126),
  ANA_MN       FLOAT(126),
  ANA_P        FLOAT(126),
  ANA_S        FLOAT(126),
  HM_TEMP      NUMBER(4),
  HM_WEIGHT    NUMBER(6),
  POURINGTIME  DATE,
  CHGTIME      DATE,
  IDKOVSH      NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.LADLES IS 'Таблица данных чугуновозных ковшей';

COMMENT ON COLUMN BOF.LADLES.CHGL_ID IS 'sequence LADLES_SEQ';

COMMENT ON COLUMN BOF.LADLES.CHGL_NO IS 'номер ковша';

COMMENT ON COLUMN BOF.LADLES.ANA_C IS 'анализ чугуна';

COMMENT ON COLUMN BOF.LADLES.ANA_SI IS 'анализ чугуна';

COMMENT ON COLUMN BOF.LADLES.ANA_MN IS 'анализ чугуна';

COMMENT ON COLUMN BOF.LADLES.ANA_P IS 'анализ чугуна';

COMMENT ON COLUMN BOF.LADLES.ANA_S IS 'анализ чугуна';

COMMENT ON COLUMN BOF.LADLES.HM_TEMP IS 'температура';

COMMENT ON COLUMN BOF.LADLES.HM_WEIGHT IS 'вес';

COMMENT ON COLUMN BOF.LADLES.POURINGTIME IS 'момент налива';

COMMENT ON COLUMN BOF.LADLES.CHGTIME IS 'момент слива';

COMMENT ON COLUMN BOF.LADLES.IDKOVSH IS 'Id ковша, дописан Ириной в передачу с ПО9';



ALTER TABLE BOF.LADLES_OPCH
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.LADLES_OPCH CASCADE CONSTRAINTS;

CREATE TABLE BOF.LADLES_OPCH
(
  LADLES_OPCH_ID    NUMBER                      NOT NULL,
  DTIME             DATE,
  DP_KOVSH_CHUG_ID  NUMBER,
  KOVSH_NUM         NUMBER,
  VES_KOVSH         NUMBER,
  MIX1              NUMBER,
  MIX1_VES          NUMBER,
  MIX2              NUMBER,
  MIX2_VES          NUMBER,
  MIX3              NUMBER,
  MIX3_VES          NUMBER,
  TEMP              NUMBER,
  NKONV             NUMBER,
  UDCH              NUMBER,
  PRR               NUMBER                      DEFAULT 0,
  VISIBLEONL1       NUMBER                      DEFAULT 1
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.LADLES_OPCH.LADLES_OPCH_ID IS 'Уникальный id';

COMMENT ON COLUMN BOF.LADLES_OPCH.DTIME IS 'Момент наливки';

COMMENT ON COLUMN BOF.LADLES_OPCH.DP_KOVSH_CHUG_ID IS 'Уникальный id от ДП';

COMMENT ON COLUMN BOF.LADLES_OPCH.KOVSH_NUM IS '№ ковша';

COMMENT ON COLUMN BOF.LADLES_OPCH.VES_KOVSH IS 'общий вес ковша';

COMMENT ON COLUMN BOF.LADLES_OPCH.MIX1 IS '№ миксера 1';

COMMENT ON COLUMN BOF.LADLES_OPCH.MIX1_VES IS 'Вес, слитый с миксера';

COMMENT ON COLUMN BOF.LADLES_OPCH.MIX2 IS '№ миксера ';

COMMENT ON COLUMN BOF.LADLES_OPCH.MIX2_VES IS 'Вес, слитый с миксера';

COMMENT ON COLUMN BOF.LADLES_OPCH.MIX3 IS '№ миксера ';

COMMENT ON COLUMN BOF.LADLES_OPCH.MIX3_VES IS 'Вес, слитый с миксера';

COMMENT ON COLUMN BOF.LADLES_OPCH.TEMP IS 'Замер температуры чугуна';

COMMENT ON COLUMN BOF.LADLES_OPCH.NKONV IS '№ конвертера';

COMMENT ON COLUMN BOF.LADLES_OPCH.UDCH IS '=1: проходил через УДЧ';

COMMENT ON COLUMN BOF.LADLES_OPCH.PRR IS 'признак обработки';

COMMENT ON COLUMN BOF.LADLES_OPCH.VISIBLEONL1 IS 'Нужно показать на L1';



ALTER TABLE BOF.LANCES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.LANCES CASCADE CONSTRAINTS;

CREATE TABLE BOF.LANCES
(
  LANCES_ID              NUMBER                 NOT NULL,
  LANCE_NO               INTEGER,
  LANCE_ART              INTEGER,
  ACTHEAT_ID             NUMBER,
  DT_LASTBLOE            DATE,
  DT_LASTFACKE           DATE,
  DT_LASTSLBLOW          DATE,
  DTINSTALL              DATE,
  DTUNINSTALL            DATE,
  PLACE                  INTEGER,
  PLACE_SIDE             VARCHAR2(1 BYTE)       DEFAULT 'R',
  CNTCHARGEN             NUMBER                 DEFAULT 0,
  CNTSUMMBLASDAUER       NUMBER                 DEFAULT 0,
  CNTCHARGENFACKTORKR    NUMBER                 DEFAULT 0,
  CNTSUMMFACKTORKRDAUER  NUMBER                 DEFAULT 0,
  CNTCHARGENSLAGBLOW     NUMBER                 DEFAULT 0,
  CNTSUMMSLAGBLOWDAUER   NUMBER                 DEFAULT 0,
  URSACHEDEINSTALL       VARCHAR2(128 BYTE),
  WORKBESCHR             VARCHAR2(128 BYTE),
  TESTERGEBNIS           VARCHAR2(128 BYTE),
  MONTAGE_PERSON         VARCHAR2(32 BYTE),
  DEMONTAGE_PERSON       VARCHAR2(32 BYTE),
  REPARATUR_PERSON       VARCHAR2(32 BYTE),
  DTRECORD               DATE,
  DTRECORD_EDITED        DATE,
  DEVICE                 VARCHAR2(32 BYTE),
  MNEMO_INDX             INTEGER                DEFAULT 0,
  INPUT_SIGN             VARCHAR2(16 BYTE),
  ISACT                  INTEGER                DEFAULT 0,
  DTREPARATUR            DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.LANCES IS 'Таблица данных о состоянии энергооборудования на конвертерах (фурмы, мет.рукава и проч.)';

COMMENT ON COLUMN BOF.LANCES.LANCES_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.LANCES.LANCE_NO IS 'Номер фурмы или рукава';

COMMENT ON COLUMN BOF.LANCES.LANCE_ART IS '0: прод.фурма и т.д.';

COMMENT ON COLUMN BOF.LANCES.ACTHEAT_ID IS 'Последняя плавка с этой фурмой/металлорукавом';

COMMENT ON COLUMN BOF.LANCES.DT_LASTBLOE IS 'Последняя сосчит.продувка';

COMMENT ON COLUMN BOF.LANCES.DT_LASTFACKE IS 'Последняя сосчит. торкретирование';

COMMENT ON COLUMN BOF.LANCES.DT_LASTSLBLOW IS 'Последняя сосчит.раздувка шлака';

COMMENT ON COLUMN BOF.LANCES.DTINSTALL IS 'Дата установки';

COMMENT ON COLUMN BOF.LANCES.DTUNINSTALL IS 'Дата снятия';

COMMENT ON COLUMN BOF.LANCES.PLACE IS 'Место установки (конвертер)';

COMMENT ON COLUMN BOF.LANCES.PLACE_SIDE IS 'Место установки (левая или правая)';

COMMENT ON COLUMN BOF.LANCES.CNTCHARGEN IS 'Количество продутых плавок';

COMMENT ON COLUMN BOF.LANCES.CNTSUMMBLASDAUER IS 'Общая длительность продувок';

COMMENT ON COLUMN BOF.LANCES.CNTCHARGENFACKTORKR IS 'Количество фак.торкретирований';

COMMENT ON COLUMN BOF.LANCES.CNTSUMMFACKTORKRDAUER IS 'Общая длительность торкретирований';

COMMENT ON COLUMN BOF.LANCES.CNTCHARGENSLAGBLOW IS 'Количество раздувок шлака';

COMMENT ON COLUMN BOF.LANCES.CNTSUMMSLAGBLOWDAUER IS 'Общая длительность раздувок шлака';

COMMENT ON COLUMN BOF.LANCES.URSACHEDEINSTALL IS 'Причины снятия оборудования';

COMMENT ON COLUMN BOF.LANCES.WORKBESCHR IS 'Перечень выполненных по ремонту работ';

COMMENT ON COLUMN BOF.LANCES.TESTERGEBNIS IS 'Результат испытаний';

COMMENT ON COLUMN BOF.LANCES.MONTAGE_PERSON IS 'Наименование исполнителя работ по монтажу';

COMMENT ON COLUMN BOF.LANCES.DEMONTAGE_PERSON IS 'Наименование исполнителя работ по демонтажу';

COMMENT ON COLUMN BOF.LANCES.REPARATUR_PERSON IS 'Наименование исполнителя работ по ремонту';

COMMENT ON COLUMN BOF.LANCES.DTRECORD IS 'Дата создания записи';

COMMENT ON COLUMN BOF.LANCES.DTRECORD_EDITED IS 'Дата посл.изменения записи';

COMMENT ON COLUMN BOF.LANCES.DEVICE IS 'Место ввода';

COMMENT ON COLUMN BOF.LANCES.MNEMO_INDX IS 'Индекс в мнемосхеме';

COMMENT ON COLUMN BOF.LANCES.INPUT_SIGN IS 'Эл.подпись вводившего данные';

COMMENT ON COLUMN BOF.LANCES.ISACT IS '=1 Отмечает 8х3 записей текущего оборудования,=0 запись ушла в архив';

COMMENT ON COLUMN BOF.LANCES.DTREPARATUR IS 'Дата ремонта';



ALTER TABLE BOF.LOG_UPDATE
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.LOG_UPDATE CASCADE CONSTRAINTS;

CREATE TABLE BOF.LOG_UPDATE
(
  DATE_UPDATE   DATE                            NOT NULL,
  OPERATOR      VARCHAR2(30 BYTE)               NOT NULL,
  HEAT_N        VARCHAR2(7 BYTE),
  FIELD_UPDATE  VARCHAR2(150 BYTE),
  OLD_DATA      VARCHAR2(200 BYTE),
  NEW_DATA      VARCHAR2(200 BYTE),
  LOG_ID        NUMBER(6)                       NOT NULL,
  REASON        VARCHAR2(200 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.LOG_UPDATE IS 'Таблица данных корректировок тех.параметров на плавке';

COMMENT ON COLUMN BOF.LOG_UPDATE.DATE_UPDATE IS 'уникальный Id';

COMMENT ON COLUMN BOF.LOG_UPDATE.OPERATOR IS 'ФИО оператора';

COMMENT ON COLUMN BOF.LOG_UPDATE.HEAT_N IS 'номкр плавки';

COMMENT ON COLUMN BOF.LOG_UPDATE.FIELD_UPDATE IS 'что менялось';

COMMENT ON COLUMN BOF.LOG_UPDATE.OLD_DATA IS 'было';

COMMENT ON COLUMN BOF.LOG_UPDATE.NEW_DATA IS 'стало';

COMMENT ON COLUMN BOF.LOG_UPDATE.LOG_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.LOG_UPDATE.REASON IS 'причина коррекции данных';



ALTER TABLE BOF.MATERIAL_SPEC
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.MATERIAL_SPEC CASCADE CONSTRAINTS;

CREATE TABLE BOF.MATERIAL_SPEC
(
  MAT_ID             NUMBER                     NOT NULL,
  MAT_NO             VARCHAR2(9 BYTE)           NOT NULL,
  TYPE               VARCHAR2(4 BYTE)           NOT NULL,
  NAME               VARCHAR2(40 BYTE),
  UPDATETIME         DATE                       DEFAULT sysdate,
  MANUAL             INTEGER                    DEFAULT 0,
  TEXN_ID            NUMBER                     NOT NULL,
  SELECTED_TO        INTEGER                    DEFAULT 0,
  SELECTED_TO_CONV   INTEGER                    DEFAULT 0,
  SELECTED_TO_LADLE  INTEGER                    DEFAULT 0
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.MATERIAL_SPEC.MAT_ID IS 'Sequence MATERIAL_SEQ';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.MAT_NO IS 'Номер по единому классификатору';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.TYPE IS 'Тип: SCR-скрап ALY-легирующий  FLUX-шлакообразующий';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.NAME IS 'наименование, для материалов ALY и FLUX не более 6 символов в связи с ограничением PLC';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.UPDATETIME IS 'Момент обновления данных';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.MANUAL IS '=1 дается вручную с рабочей площадки';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.TEXN_ID IS 'осуществляет привязку к справочнику в TEXN';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.SELECTED_TO IS '0: не выбран никуда; 1: выбран в конвертер; 2: выбран в ковш';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.SELECTED_TO_CONV IS 'Флаг, показывающий, что материал выбран в список материалов конвертера';

COMMENT ON COLUMN BOF.MATERIAL_SPEC.SELECTED_TO_LADLE IS 'Флаг, показывающий, что материал выбран в список материалов ковша';



DROP TABLE BOF.MESS_LADLELVL CASCADE CONSTRAINTS;

CREATE TABLE BOF.MESS_LADLELVL
(
  INSERTTIME      DATE,
  LADLENO         NUMBER(2),
  BODENLVL        NUMBER(6),
  BODENLVLVAL     NUMBER(6),
  RESTHEIGHT      NUMBER(7,3),
  RESTWEIGHT      NUMBER(7,3),
  STANDHEIGHT     NUMBER(7,3),
  STANDWEIGHT     NUMBER(7,3),
  INTENS          NUMBER(8,3),
  FUELTIME        DATE,
  NETTO           NUMBER(8,1),
  BRUTTO          NUMBER(8,1),
  TARA            NUMBER(8,1),
  WAAGENO         NUMBER(2),
  VORSTANDHEIGHT  NUMBER(7,3),
  VORNETTO        NUMBER(7,3),
  VORTARA         NUMBER(7,3),
  DIFFERENZ       NUMBER(7,3),
  KOEFF           NUMBER(12,5),
  ERROR           VARCHAR2(128 BYTE),
  HEAT_ID         NUMBER,
  HEAT_NO         VARCHAR2(7 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          11M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.MESS_LADLELVL IS 'Таблица данных замеров уровня чугуна в чугуновозном ковше (система "Радар")';

COMMENT ON COLUMN BOF.MESS_LADLELVL.INSERTTIME IS 'Время налива';

COMMENT ON COLUMN BOF.MESS_LADLELVL.LADLENO IS 'Номер';

COMMENT ON COLUMN BOF.MESS_LADLELVL.BODENLVL IS 'Дно от пола,мм';

COMMENT ON COLUMN BOF.MESS_LADLELVL.BODENLVLVAL IS 'Дно от пола плавающее,мм';

COMMENT ON COLUMN BOF.MESS_LADLELVL.RESTHEIGHT IS 'Остаток,см';

COMMENT ON COLUMN BOF.MESS_LADLELVL.RESTWEIGHT IS 'Остаток,т';

COMMENT ON COLUMN BOF.MESS_LADLELVL.STANDHEIGHT IS 'Налито,см';

COMMENT ON COLUMN BOF.MESS_LADLELVL.STANDWEIGHT IS 'Налито,т';

COMMENT ON COLUMN BOF.MESS_LADLELVL.INTENS IS 'Интенсивность';

COMMENT ON COLUMN BOF.MESS_LADLELVL.FUELTIME IS 'Время взвешивания,сек';

COMMENT ON COLUMN BOF.MESS_LADLELVL.NETTO IS 'Нетто,т';

COMMENT ON COLUMN BOF.MESS_LADLELVL.BRUTTO IS 'Брутто,т';

COMMENT ON COLUMN BOF.MESS_LADLELVL.TARA IS 'Тара,т';

COMMENT ON COLUMN BOF.MESS_LADLELVL.WAAGENO IS 'Весы';

COMMENT ON COLUMN BOF.MESS_LADLELVL.VORSTANDHEIGHT IS 'Налито в прошлый раз,см';

COMMENT ON COLUMN BOF.MESS_LADLELVL.VORNETTO IS 'Нетто в прошлый раз,т';

COMMENT ON COLUMN BOF.MESS_LADLELVL.VORTARA IS 'Тара в прошлый раз,т';

COMMENT ON COLUMN BOF.MESS_LADLELVL.DIFFERENZ IS 'Невязка,т';

COMMENT ON COLUMN BOF.MESS_LADLELVL.KOEFF IS 'Коэффициент поправки,т/м';

COMMENT ON COLUMN BOF.MESS_LADLELVL.ERROR IS 'Ошибки измерения';

COMMENT ON COLUMN BOF.MESS_LADLELVL.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.MESS_LADLELVL.HEAT_NO IS 'номер плавки';



ALTER TABLE BOF.MESS_O2INO2
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.MESS_O2INO2 CASCADE CONSTRAINTS;

CREATE TABLE BOF.MESS_O2INO2
(
  O2INO2_ID   NUMBER                            NOT NULL,
  INSERTTIME  DATE                              NOT NULL,
  ANA_O2      FLOAT(126),
  ANA_N2      FLOAT(126),
  ANA_AR      FLOAT(126),
  DEVNAME     VARCHAR2(10 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.MESS_O2INO2 IS 'Таблица данных замеров чистоты газов';

COMMENT ON COLUMN BOF.MESS_O2INO2.O2INO2_ID IS 'Unique Id';

COMMENT ON COLUMN BOF.MESS_O2INO2.INSERTTIME IS 'момент измерения';

COMMENT ON COLUMN BOF.MESS_O2INO2.ANA_O2 IS 'содержание О2';

COMMENT ON COLUMN BOF.MESS_O2INO2.ANA_N2 IS 'содержание N2';

COMMENT ON COLUMN BOF.MESS_O2INO2.ANA_AR IS 'содержание Ar';

COMMENT ON COLUMN BOF.MESS_O2INO2.DEVNAME IS 'имя прибора';



ALTER TABLE BOF.MODEL_TELEGRAMS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.MODEL_TELEGRAMS CASCADE CONSTRAINTS;

CREATE TABLE BOF.MODEL_TELEGRAMS
(
  REC_ID        NUMBER                          NOT NULL,
  OPERATION_ID  NUMBER                          NOT NULL,
  EVENTTIME     DATE,
  WORKEDTIME    DATE,
  CV_NO         NUMBER(1),
  HEAT_NO       VARCHAR2(7 BYTE),
  STATUS        NUMBER                          DEFAULT 0,
  PAR1          VARCHAR2(20 BYTE),
  PAR2          VARCHAR2(20 BYTE),
  PAR3          VARCHAR2(20 BYTE),
  PAR4          VARCHAR2(20 BYTE),
  PAR5          VARCHAR2(20 BYTE),
  PAR6          VARCHAR2(20 BYTE),
  PAR7          VARCHAR2(20 BYTE),
  PAR8          VARCHAR2(20 BYTE),
  PAR9          VARCHAR2(20 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE BOF.MODEL_TRENDS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.MODEL_TRENDS CASCADE CONSTRAINTS;

CREATE TABLE BOF.MODEL_TRENDS
(
  REC_ID        NUMBER                          NOT NULL,
  OPERATION_ID  NUMBER                          NOT NULL,
  EVENTTIME     DATE,
  WORKEDTIME    DATE,
  CV_NO         NUMBER(1),
  HEAT_NO       VARCHAR2(7 BYTE),
  STATUS        NUMBER                          DEFAULT 0,
  PAR1          VARCHAR2(20 BYTE),
  PAR2          VARCHAR2(20 BYTE),
  PAR3          VARCHAR2(20 BYTE),
  PAR4          VARCHAR2(20 BYTE),
  PAR5          VARCHAR2(20 BYTE),
  PAR6          VARCHAR2(20 BYTE),
  PAR7          VARCHAR2(20 BYTE),
  PAR8          VARCHAR2(20 BYTE),
  PAR9          VARCHAR2(20 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE BOF.MONITORING_EVENTS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.MONITORING_EVENTS CASCADE CONSTRAINTS;

CREATE TABLE BOF.MONITORING_EVENTS
(
  EVENT_ID    NUMBER,
  HEAT_ID     NUMBER,
  HEAT_NO     VARCHAR2(7 BYTE),
  EVENT_TIME  DATE                              NOT NULL,
  EVENT_TEXT  VARCHAR2(100 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          4M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.MONITORING_EVENTS IS 'Таблица данных проверки событий на плавке';

COMMENT ON COLUMN BOF.MONITORING_EVENTS.EVENT_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.MONITORING_EVENTS.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.MONITORING_EVENTS.HEAT_NO IS 'номер плавки';

COMMENT ON COLUMN BOF.MONITORING_EVENTS.EVENT_TIME IS 'время события';

COMMENT ON COLUMN BOF.MONITORING_EVENTS.EVENT_TEXT IS 'объясняющий текст';



DROP TABLE BOF.NSI_DELAYS CASCADE CONSTRAINTS;

CREATE TABLE BOF.NSI_DELAYS
(
  ID               NUMBER                       NOT NULL,
  INHEAT           NUMBER                       DEFAULT 0,
  NAME             VARCHAR2(200 BYTE),
  DEFAULTDURATION  NUMBER                       DEFAULT 5,
  VISUAL           NUMBER                       DEFAULT 1
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             128K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.NSI_DELAYS IS 'Справочник простоев ЦВС';

COMMENT ON COLUMN BOF.NSI_DELAYS.ID IS 'Уникальный идентификатор';

COMMENT ON COLUMN BOF.NSI_DELAYS.INHEAT IS '=0: межплавочный период; =1: на плавке';

COMMENT ON COLUMN BOF.NSI_DELAYS.NAME IS 'Описание простоя';

COMMENT ON COLUMN BOF.NSI_DELAYS.DEFAULTDURATION IS 'Длительность по умолчанию(минуты)';

COMMENT ON COLUMN BOF.NSI_DELAYS.VISUAL IS '1/0 - Отображать / Не отображать';



ALTER TABLE BOF.NSI_FITTING
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.NSI_FITTING CASCADE CONSTRAINTS;

CREATE TABLE BOF.NSI_FITTING
(
  FITTING_ID  NUMBER                            NOT NULL,
  FIRMA_NAME  VARCHAR2(75 BYTE),
  MARKA_NAME  VARCHAR2(75 BYTE),
  ATLOADING   NUMBER,
  ATTAPPING   NUMBER,
  ATBOTTOM    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.NSI_FITTING IS 'Справочник огнеупоров на подварку футеровки';

COMMENT ON COLUMN BOF.NSI_FITTING.FIRMA_NAME IS 'Производитель (страна)';

COMMENT ON COLUMN BOF.NSI_FITTING.MARKA_NAME IS 'Марка';

COMMENT ON COLUMN BOF.NSI_FITTING.ATLOADING IS 'Теоретическое кол-во материала подварки на загрузке';

COMMENT ON COLUMN BOF.NSI_FITTING.ATTAPPING IS 'Теоретическое кол-во материала подварки на сливе';

COMMENT ON COLUMN BOF.NSI_FITTING.ATBOTTOM IS 'Теоретическое кол-во материала подварки на донышке';



ALTER TABLE BOF.NSI_OPERATIONS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.NSI_OPERATIONS CASCADE CONSTRAINTS;

CREATE TABLE BOF.NSI_OPERATIONS
(
  OPER_ID    NUMBER                             NOT NULL,
  OPER_NAME  VARCHAR2(75 BYTE),
  VALID      NUMBER(1)                          DEFAULT 1
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.NSI_OPERATIONS.OPER_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.NSI_OPERATIONS.OPER_NAME IS 'Наименование операции';

COMMENT ON COLUMN BOF.NSI_OPERATIONS.VALID IS '!=1  Не обрабатывать';



DROP TABLE BOF.NSI_OTK_OTKL CASCADE CONSTRAINTS;

CREATE TABLE BOF.NSI_OTK_OTKL
(
  ID_OTKL    NUMBER                             NOT NULL,
  OTKL_NAIM  VARCHAR2(50 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.NSI_OTK_OTKL IS 'Таблица данных замечаний по плавкам (справочник)';

COMMENT ON COLUMN BOF.NSI_OTK_OTKL.ID_OTKL IS 'уникальный Id';

COMMENT ON COLUMN BOF.NSI_OTK_OTKL.OTKL_NAIM IS 'объясняющий текст';



DROP TABLE BOF.NSI_PERSONAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.NSI_PERSONAL
(
  ID_ADMIN  NUMBER                              NOT NULL,
  GRUPPA    NUMBER(1),
  FIO       VARCHAR2(25 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.NSI_PERSONAL IS 'Таблица данных персонала (справочник)';

COMMENT ON COLUMN BOF.NSI_PERSONAL.ID_ADMIN IS 'уникальный Id';

COMMENT ON COLUMN BOF.NSI_PERSONAL.GRUPPA IS 'группа';

COMMENT ON COLUMN BOF.NSI_PERSONAL.FIO IS 'ФИО';



DROP TABLE BOF.OPC_PLC_POINTS CASCADE CONSTRAINTS;

CREATE TABLE BOF.OPC_PLC_POINTS
(
  SGROUP         VARCHAR2(32 BYTE),
  SALIAS         VARCHAR2(32 BYTE),
  SPLC_ADR       VARCHAR2(32 BYTE),
  IISTAKEOVER    NUMBER,
  ITYPECODE      NUMBER,
  SDATAVALUE     VARCHAR2(32 BYTE),
  DTDATAVALUE    DATE,
  IDATAVALUE     NUMBER,
  DTREADINGDATE  DATE,
  IREADCNT       NUMBER,
  IREADCNTMAX    NUMBER,
  DTMAX          DATE,
  SDESC          VARCHAR2(128 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          50M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.SGROUP IS 'имя группы';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.SALIAS IS 'имя точки';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.SPLC_ADR IS 'адрес уровня 1';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.IISTAKEOVER IS 'триггерная точка';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.ITYPECODE IS 'код типа переменной';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.SDATAVALUE IS 'строковая величина';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.DTDATAVALUE IS 'момент замера';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.IDATAVALUE IS 'целая величина';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.DTREADINGDATE IS 'момент чтения';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.IREADCNT IS 'счетчик незапомненных чтений';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.IREADCNTMAX IS 'макс счетчик незапомненных чтений';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.DTMAX IS 'момент максимума';

COMMENT ON COLUMN BOF.OPC_PLC_POINTS.SDESC IS 'описание точки';



ALTER TABLE BOF.PARAMETER_GRADES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.PARAMETER_GRADES CASCADE CONSTRAINTS;

CREATE TABLE BOF.PARAMETER_GRADES
(
  GRADE_ID     NUMBER                           NOT NULL,
  NAME         VARCHAR2(20 BYTE)                NOT NULL,
  UNIT         VARCHAR2(20 BYTE),
  VALUE_DIR    FLOAT(126),
  VALUE_MIN    FLOAT(126),
  VALUE_MAX    FLOAT(126),
  VALUE_TEXT   VARCHAR2(40 BYTE),
  DESCRIPTION  VARCHAR2(80 BYTE),
  UPDATETIME   DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.PARAMETER_GRADES IS 'Таблица НСИ марочника сталей';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.GRADE_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.NAME IS 'имя';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.UNIT IS 'единица';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.VALUE_DIR IS 'величина';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.VALUE_MIN IS 'минимум';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.VALUE_MAX IS 'максимум';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.VALUE_TEXT IS 'текст';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.DESCRIPTION IS 'описание';

COMMENT ON COLUMN BOF.PARAMETER_GRADES.UPDATETIME IS 'момент обновления';



DROP TABLE BOF.PLANRAZL_BUFF CASCADE CONSTRAINTS;

CREATE TABLE BOF.PLANRAZL_BUFF
(
  PLANOPER_PRM         NUMBER                   NOT NULL,
  REFOPER_PRM          NUMBER                   NOT NULL,
  REFOPER_NAME         VARCHAR2(20 BYTE),
  PLANOPER_UNRS        NUMBER,
  PLANOPER_DATE        DATE,
  PLANOPER_TIME        DATE,
  PLANOPER_NOTE        VARCHAR2(250 BYTE),
  TECHN_NORDOC         VARCHAR2(53 BYTE),
  TECHN_NAME           VARCHAR2(100 BYTE),
  REFMARGOS_MARK       VARCHAR2(20 BYTE),
  REFMARGOST_FULLMARK  VARCHAR2(25 BYTE),
  REFMARGOS_GOST       VARCHAR2(20 BYTE),
  REFMARGOS_FULLGOST   VARCHAR2(200 BYTE),
  SVPLAW_KONAGR        VARCHAR2(20 BYTE),
  SVPLAW_PROF          VARCHAR2(20 BYTE),
  SVPLAW_GOSTP         VARCHAR2(20 BYTE),
  PLSVPLAW_PRM         NUMBER,
  PLSVPLAW_NSP         VARCHAR2(5 BYTE),
  PLSVPLAW_SLSHIRZ     NUMBER(4),
  PLSVPLAW_VSL         NUMBER(3)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE BOF.PROCESS_PHASES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.PROCESS_PHASES CASCADE CONSTRAINTS;

CREATE TABLE BOF.PROCESS_PHASES
(
  PHASE_NO          VARCHAR2(4 BYTE)            NOT NULL,
  SEQUENCE_NO       NUMBER(2)                   NOT NULL,
  NAME_ENGLISH      VARCHAR2(20 BYTE),
  NAME_OTHER        VARCHAR2(20 BYTE),
  DEFAULT_DURATION  NUMBER(2),
  DESCRIPTION       VARCHAR2(50 BYTE),
  UPDATETIME        DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.PROCESS_PHASES IS 'Таблица данных по фазам плавки (описание стадий плавки)';

COMMENT ON COLUMN BOF.PROCESS_PHASES.PHASE_NO IS 'имя фазы';

COMMENT ON COLUMN BOF.PROCESS_PHASES.SEQUENCE_NO IS 'номер серии';

COMMENT ON COLUMN BOF.PROCESS_PHASES.NAME_ENGLISH IS 'имя международное';

COMMENT ON COLUMN BOF.PROCESS_PHASES.NAME_OTHER IS 'имя локализованное';

COMMENT ON COLUMN BOF.PROCESS_PHASES.DEFAULT_DURATION IS 'длительность по умолчанию';

COMMENT ON COLUMN BOF.PROCESS_PHASES.DESCRIPTION IS 'описание';

COMMENT ON COLUMN BOF.PROCESS_PHASES.UPDATETIME IS 'момент обновления';



ALTER TABLE BOF.REASON_DEF
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.REASON_DEF CASCADE CONSTRAINTS;

CREATE TABLE BOF.REASON_DEF
(
  REASON_NO     VARCHAR2(4 BYTE)                NOT NULL,
  TYPE          VARCHAR2(4 BYTE)                NOT NULL,
  NAME_ENGLISH  VARCHAR2(20 BYTE)               NOT NULL,
  NAME_OTHER    VARCHAR2(20 BYTE),
  UPDATETIME    DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.REASON_DEF.REASON_NO IS 'уникальный Id';

COMMENT ON COLUMN BOF.REASON_DEF.TYPE IS 'тип';

COMMENT ON COLUMN BOF.REASON_DEF.NAME_ENGLISH IS 'имя международноеимя';

COMMENT ON COLUMN BOF.REASON_DEF.NAME_OTHER IS 'имя локализованное';

COMMENT ON COLUMN BOF.REASON_DEF.UPDATETIME IS 'момент обновления';



ALTER TABLE BOF.REASONS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.REASONS CASCADE CONSTRAINTS;

CREATE TABLE BOF.REASONS
(
  REASON_ID    NUMBER                           NOT NULL,
  REASON_TEXT  VARCHAR2(200 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.REASONS IS 'Таблица возможных причин корректировок тех.параметров';

COMMENT ON COLUMN BOF.REASONS.REASON_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.REASONS.REASON_TEXT IS 'текст';



DROP TABLE BOF.RESULTS_TMP CASCADE CONSTRAINTS;

CREATE TABLE BOF.RESULTS_TMP
(
  HEAT_ID            NUMBER                     NOT NULL,
  HEAT_NO            VARCHAR2(7 BYTE),
  HO_ID              NUMBER,
  GRADE_ID           NUMBER,
  GRADE_ANALYSIS_ID  NUMBER,
  NAME_OTHER         VARCHAR2(50 BYTE),
  REFERENCE_TIME     DATE,
  CV_NO              NUMBER,
  T_SOLL             NUMBER                     DEFAULT 0,
  C_SOLL             NUMBER                     DEFAULT 0,
  C_SOLL1            NUMBER                     DEFAULT 0,
  T_IST              NUMBER                     DEFAULT 0,
  C_IST              NUMBER                     DEFAULT 0,
  T_IST_MODELL       NUMBER                     DEFAULT 0,
  C_IST_MODELL       NUMBER                     DEFAULT 0,
  GARANTIE_ERFUELLT  INTEGER                    DEFAULT 0
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             432K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.RESULTS_TMP IS 'Temporary created fuer Garantienachweisauswertung - Poritski ';



DROP TABLE BOF.SAPLEGCALCS CASCADE CONSTRAINTS;

CREATE TABLE BOF.SAPLEGCALCS
(
  HEATID      NUMBER                            NOT NULL,
  HEATNO      VARCHAR2(7 BYTE),
  CALCNR      NUMBER,
  NIPRZSOLL   NUMBER,
  CUPRZSOLL   NUMBER,
  NIPRZIST    NUMBER,
  CUPRZIST    NUMBER,
  NIKGSOLL    NUMBER,
  CUKGSOLL    NUMBER,
  NIKGIST     NUMBER,
  CUKGIST     NUMBER,
  GRADE_NAME  VARCHAR2(50 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.SAPLEGCALCS.HEATID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SAPLEGCALCS.HEATNO IS 'номер плавки';

COMMENT ON COLUMN BOF.SAPLEGCALCS.CALCNR IS 'номер расчета';

COMMENT ON COLUMN BOF.SAPLEGCALCS.NIPRZSOLL IS 'заданный % Ni';

COMMENT ON COLUMN BOF.SAPLEGCALCS.CUPRZSOLL IS 'заданный % Cu';

COMMENT ON COLUMN BOF.SAPLEGCALCS.NIPRZIST IS 'факт % Ni';

COMMENT ON COLUMN BOF.SAPLEGCALCS.CUPRZIST IS 'факт % Cu';

COMMENT ON COLUMN BOF.SAPLEGCALCS.NIKGSOLL IS 'заданный вес  Ni';

COMMENT ON COLUMN BOF.SAPLEGCALCS.CUKGSOLL IS 'заданный вес  Cu';

COMMENT ON COLUMN BOF.SAPLEGCALCS.NIKGIST IS 'факт вес  Ni';

COMMENT ON COLUMN BOF.SAPLEGCALCS.CUKGIST IS 'факт вес  Ni';

COMMENT ON COLUMN BOF.SAPLEGCALCS.GRADE_NAME IS 'Марка';



DROP TABLE BOF.SAPLEGNSISCR CASCADE CONSTRAINTS;

CREATE TABLE BOF.SAPLEGNSISCR
(
  SORT  NUMBER                                  NOT NULL,
  NAME  VARCHAR2(64 BYTE),
  NI    NUMBER,
  CU    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SAPLEGNSISCR IS 'НСИ саперного расчета легирующих.Лом';

COMMENT ON COLUMN BOF.SAPLEGNSISCR.SORT IS 'Сорт в типе Number,соответствует Material_Spec';

COMMENT ON COLUMN BOF.SAPLEGNSISCR.NAME IS 'Имя';

COMMENT ON COLUMN BOF.SAPLEGNSISCR.NI IS 'химсостав';

COMMENT ON COLUMN BOF.SAPLEGNSISCR.CU IS 'химсостав';



ALTER TABLE BOF.SCHR_ORPHANS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SCHR_ORPHANS CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCHR_ORPHANS
(
  ORPHANS_ID     NUMBER                         NOT NULL,
  BUCKET_NO      NUMBER,
  ACTBUF_TIME    DATE,
  ACTBUF_WEIGHT  NUMBER,
  RESULT_TIME    DATE,
  RESULT_WEIGHT  NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          768K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.SCHR_ORPHANS.ORPHANS_ID IS 'Id';

COMMENT ON COLUMN BOF.SCHR_ORPHANS.BUCKET_NO IS '№ совка';

COMMENT ON COLUMN BOF.SCHR_ORPHANS.ACTBUF_TIME IS 'Время прихода actbuf';

COMMENT ON COLUMN BOF.SCHR_ORPHANS.ACTBUF_WEIGHT IS 'Вес при actbuf';

COMMENT ON COLUMN BOF.SCHR_ORPHANS.RESULT_TIME IS 'Время прихода result';

COMMENT ON COLUMN BOF.SCHR_ORPHANS.RESULT_WEIGHT IS 'Вес при result';



ALTER TABLE BOF.SCRAP
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SCRAP CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAP
(
  ID           NUMBER                           NOT NULL,
  CODE         INTEGER                          NOT NULL,
  DESCRIPTION  VARCHAR2(100 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


DROP TABLE BOF.SCRAP_ACTBUF_KRAN CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAP_ACTBUF_KRAN
(
  SERIAL     NUMBER,
  LADLE      INTEGER,
  NET        NUMBER,
  RTARE      NUMBER,
  DATE_TIME  DATE,
  B_CRANE    INTEGER,
  B_BRUT     NUMBER,
  B_DATE     DATE,
  PHASE      INTEGER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SCRAP_ACTBUF_KRAN IS 'Таблица учета данных взвешивания скрапа на кранах';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.SERIAL IS 'уникальный Id';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.LADLE IS 'номер совка';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.NET IS 'нетто';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.RTARE IS 'тара';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.DATE_TIME IS 'момент взвешивания';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.B_CRANE IS 'номер крана';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.B_BRUT IS 'брутто';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.B_DATE IS 'момент взвешивания брутто';

COMMENT ON COLUMN BOF.SCRAP_ACTBUF_KRAN.PHASE IS 'фаза';



ALTER TABLE BOF.SCRAP_BUCKETMATS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SCRAP_BUCKETMATS CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAP_BUCKETMATS
(
  BUCKET_ID  NUMBER                             NOT NULL,
  MAT_ID     NUMBER                             NOT NULL,
  WEIGHT     NUMBER(6)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SCRAP_BUCKETMATS IS 'Таблица данных сортности скрапа в совке';

COMMENT ON COLUMN BOF.SCRAP_BUCKETMATS.BUCKET_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SCRAP_BUCKETMATS.MAT_ID IS 'Id материала';

COMMENT ON COLUMN BOF.SCRAP_BUCKETMATS.WEIGHT IS 'вес';



ALTER TABLE BOF.SCRAP_BUCKETS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SCRAP_BUCKETS CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAP_BUCKETS
(
  BUCKET_ID      NUMBER                         NOT NULL,
  BUCKET_NO      VARCHAR2(2 BYTE)               NOT NULL,
  STATUS         VARCHAR2(4 BYTE)               NOT NULL,
  HO_ID          NUMBER,
  HEAT_ID        NUMBER,
  TOTAL_WEIGHT   NUMBER(6),
  DATA_SOURCE    VARCHAR2(4 BYTE),
  LOADINGTIME    DATE                           NOT NULL,
  CHARGINGTIME   DATE,
  KRAN_TIME      DATE,
  T_CRANE        NUMBER(3),
  NETTO          NUMBER,
  KRANE_COMMENT  VARCHAR2(255 BYTE),
  WEIGHT_MAN     NUMBER(6),
  IDTYPE         INTEGER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SCRAP_BUCKETS IS 'Таблица данных скрапа в совке на плавке';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.BUCKET_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.BUCKET_NO IS 'номер совка';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.STATUS IS 'статус';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.HO_ID IS 'Id плана';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.HEAT_ID IS 'Id плавки';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.TOTAL_WEIGHT IS 'общий вес';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.DATA_SOURCE IS 'источник данных';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.LOADINGTIME IS 'момент загрузки';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.CHARGINGTIME IS 'момент завалки';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.KRAN_TIME IS 'Время взвешивания по часам наземной станции';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.T_CRANE IS 'Номер крана';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.NETTO IS 'Вес скрапа';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.KRANE_COMMENT IS 'Замечания по качеству данных';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.WEIGHT_MAN IS 'Введенный вручную общий вес,если была замена от крана';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS.IDTYPE IS 'Выбирается из ScrapTypes,IdType';



ALTER TABLE BOF.SCRAP_BUCKETS_KRAN
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SCRAP_BUCKETS_KRAN CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAP_BUCKETS_KRAN
(
  BUCKET_ID      NUMBER                         NOT NULL,
  BUCKET_NO      VARCHAR2(2 BYTE)               NOT NULL,
  HEAT_ID        NUMBER,
  NETTO_TIME     DATE,
  TARA_TIME      DATE,
  TARA_SRC       VARCHAR2(8 BYTE),
  T_CRANE        NUMBER(3),
  BRUTTO         NUMBER,
  TARA           NUMBER,
  NETTO          NUMBER,
  CHARGING_TIME  DATE,
  KOMMENT        VARCHAR2(255 BYTE),
  VESSEL         INTEGER,
  RTARE          NUMBER,
  T_FIX          VARCHAR2(1 BYTE),
  B_CRANE        INTEGER,
  B_DATE         DATE,
  PHASE          INTEGER,
  SERIAL         NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SCRAP_BUCKETS_KRAN IS 'Таблица данных скрапа в совке на плавку (взвешивание на крановых весах)';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.BUCKET_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.BUCKET_NO IS 'номер совка';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.HEAT_ID IS 'Id плавки';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.NETTO_TIME IS 'Время взвешивания собственно полного совка по часам наземной станции';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.TARA_TIME IS 'Время взвешивания или ввода тары по часам наземной станции';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.TARA_SRC IS 'Источник ввода тары: кран или собств.данные(рассчётные)';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.T_CRANE IS 'Номер крана';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.BRUTTO IS 'врутто';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.TARA IS 'тара';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.NETTO IS 'Вес скрапа';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.CHARGING_TIME IS 'При загрузке, от триггера';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.KOMMENT IS 'Замечания по качеству данных';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.VESSEL IS 'конвертер';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.RTARE IS 'тара';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.T_FIX IS 'признак';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.B_CRANE IS 'номер крана';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.B_DATE IS 'момент взвешивания';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.PHASE IS 'фаза';

COMMENT ON COLUMN BOF.SCRAP_BUCKETS_KRAN.SERIAL IS 'Из DBF наземной станции';



ALTER TABLE BOF.SCRAPSCHEMES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SCRAPSCHEMES CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAPSCHEMES
(
  SCSH_NO       VARCHAR2(2 BYTE)                NOT NULL,
  NAME_ENGLISH  VARCHAR2(50 BYTE),
  NAME_OTHER    VARCHAR2(50 BYTE),
  DESCRIPTION   VARCHAR2(50 BYTE),
  UPDATETIME    DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.SCRAPSCHEMES.SCSH_NO IS 'номер схемы';

COMMENT ON COLUMN BOF.SCRAPSCHEMES.NAME_ENGLISH IS 'наименование международное';

COMMENT ON COLUMN BOF.SCRAPSCHEMES.NAME_OTHER IS 'наименование локализованное';

COMMENT ON COLUMN BOF.SCRAPSCHEMES.DESCRIPTION IS 'описание';

COMMENT ON COLUMN BOF.SCRAPSCHEMES.UPDATETIME IS 'момент обновления';



ALTER TABLE BOF.SCRAPSCHEME_STEPS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SCRAPSCHEME_STEPS CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAPSCHEME_STEPS
(
  SCSH_NO     VARCHAR2(2 BYTE)                  NOT NULL,
  MAT_ID      NUMBER                            NOT NULL,
  PERC_VAL    NUMBER                            NOT NULL,
  UPDATETIME  DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.SCRAPSCHEME_STEPS.SCSH_NO IS 'номер схемы';

COMMENT ON COLUMN BOF.SCRAPSCHEME_STEPS.MAT_ID IS 'Id материала';

COMMENT ON COLUMN BOF.SCRAPSCHEME_STEPS.PERC_VAL IS 'процент материала';

COMMENT ON COLUMN BOF.SCRAPSCHEME_STEPS.UPDATETIME IS 'момент обновления';



DROP TABLE BOF.SCRAPTYPE_INBUCKET CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAPTYPE_INBUCKET
(
  ID          INTEGER,
  IDTYPE      INTEGER,
  INSERTTIME  DATE,
  IP          VARCHAR2(32 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SCRAPTYPE_INBUCKET IS 'Таблица данных подготовленных совков с видом скрапа на скрапном дворике';

COMMENT ON COLUMN BOF.SCRAPTYPE_INBUCKET.ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SCRAPTYPE_INBUCKET.IDTYPE IS 'Id типа';

COMMENT ON COLUMN BOF.SCRAPTYPE_INBUCKET.INSERTTIME IS 'момент ввода';

COMMENT ON COLUMN BOF.SCRAPTYPE_INBUCKET.IP IS 'IP терминала';



DROP TABLE BOF.SCRAPTYPES CASCADE CONSTRAINTS;

CREATE TABLE BOF.SCRAPTYPES
(
  ID    INTEGER,
  NAME  VARCHAR2(32 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SCRAPTYPES IS 'Таблица данных видов скрапа на скрапном дворике';

COMMENT ON COLUMN BOF.SCRAPTYPES.ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SCRAPTYPES.NAME IS 'наименование';



ALTER TABLE BOF.SHIFT_JOB
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SHIFT_JOB CASCADE CONSTRAINTS;

CREATE TABLE BOF.SHIFT_JOB
(
  JOB_ID     NUMBER                             NOT NULL,
  JOB_NAME   VARCHAR2(30 BYTE)                  NOT NULL,
  JOB_DESCR  VARCHAR2(80 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.SHIFT_JOB.JOB_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SHIFT_JOB.JOB_NAME IS 'наименование должности';

COMMENT ON COLUMN BOF.SHIFT_JOB.JOB_DESCR IS 'описание должности';



ALTER TABLE BOF.SHIFT_TEAM
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SHIFT_TEAM CASCADE CONSTRAINTS;

CREATE TABLE BOF.SHIFT_TEAM
(
  TEAM_NAME  VARCHAR2(1 BYTE)                   NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.SHIFT_TEAM.TEAM_NAME IS 'номер бригады';



ALTER TABLE BOF.SLAGBLOWING
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SLAGBLOWING CASCADE CONSTRAINTS;

CREATE TABLE BOF.SLAGBLOWING
(
  CV_NO      NUMBER(1)                          NOT NULL,
  STARTTIME  DATE                               NOT NULL,
  ENDTIME    DATE,
  VALUE      NUMBER(6),
  HEAT_ID    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SLAGBLOWING IS 'Таблица данных расхода азота на плавке и в межплавочный промежуток (торкретирование и охлаждение)';

COMMENT ON COLUMN BOF.SLAGBLOWING.CV_NO IS 'номер конвертера';

COMMENT ON COLUMN BOF.SLAGBLOWING.STARTTIME IS 'момент начала';

COMMENT ON COLUMN BOF.SLAGBLOWING.ENDTIME IS 'момент окончания';

COMMENT ON COLUMN BOF.SLAGBLOWING.VALUE IS 'продуто газа-носителя';

COMMENT ON COLUMN BOF.SLAGBLOWING.HEAT_ID IS 'Id плавки';



DROP TABLE BOF.SLAG_IN_SK_NSI CASCADE CONSTRAINTS;

CREATE TABLE BOF.SLAG_IN_SK_NSI
(
  SLAG_IN_SK_ID  NUMBER                         NOT NULL,
  DESCRIPTION    VARCHAR2(27 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SLAG_IN_SK_NSI IS 'НСИ для шлака в стальковше';

COMMENT ON COLUMN BOF.SLAG_IN_SK_NSI.SLAG_IN_SK_ID IS 'Уникальный идентификатор';

COMMENT ON COLUMN BOF.SLAG_IN_SK_NSI.DESCRIPTION IS 'Наименование';



DROP TABLE BOF.SPECTROTRACE CASCADE CONSTRAINTS;

CREATE TABLE BOF.SPECTROTRACE
(
  INSERTTIME  DATE,
  STLGID      VARCHAR2(16 BYTE),
  XIM_C       NUMBER,
  XIM_SI      NUMBER,
  XIM_MN      NUMBER,
  XIM_P       NUMBER,
  XIM_S       NUMBER,
  XIM_CR      NUMBER,
  XIM_NI      NUMBER,
  XIM_CU      NUMBER,
  XIM_AL      NUMBER,
  XIM_N       NUMBER,
  XIM_V       NUMBER,
  XIM_TI      NUMBER,
  XIM_AS      NUMBER,
  XIM_NB      NUMBER,
  XIM_ZR      NUMBER,
  XIM_MO      NUMBER,
  XIM_B       NUMBER,
  XIM_SN      NUMBER,
  XIM_AL_KR   NUMBER,
  XIM_W       NUMBER,
  XIM_CA      NUMBER,
  XIM_CO      NUMBER,
  XIM_H2      NUMBER,
  XIM_O2      NUMBER,
  XIM_SB      NUMBER,
  XIM_ZN      NUMBER,
  XIM_CE      NUMBER,
  XIM_PB      NUMBER,
  XIM_BI      NUMBER,
  MICRO_ELM   VARCHAR2(128 BYTE),
  SSPXSTRING  VARCHAR2(512 BYTE),
  SCOMMENT    VARCHAR2(100 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          23M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.SPECTROTRACE IS 'Таблица данных анализов проб на установке "Спектролюкс"';

COMMENT ON COLUMN BOF.SPECTROTRACE.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.SPECTROTRACE.STLGID IS 'Id телеграммы';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_C IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_SI IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_MN IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_P IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_S IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_CR IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_NI IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_CU IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_AL IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_N IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_V IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_TI IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_AS IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_NB IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_ZR IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_MO IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_B IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_SN IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_AL_KR IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_W IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_CA IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_CO IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_H2 IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_O2 IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_SB IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_ZN IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_CE IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_PB IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.XIM_BI IS 'химанализ';

COMMENT ON COLUMN BOF.SPECTROTRACE.MICRO_ELM IS 'микроэлементы';

COMMENT ON COLUMN BOF.SPECTROTRACE.SSPXSTRING IS 'строка со СпектроЛюкса';

COMMENT ON COLUMN BOF.SPECTROTRACE.SCOMMENT IS 'комментарий';



ALTER TABLE BOF.STATUS_DEF
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.STATUS_DEF CASCADE CONSTRAINTS;

CREATE TABLE BOF.STATUS_DEF
(
  STATUS_NO     VARCHAR2(4 BYTE)                NOT NULL,
  TYPE          VARCHAR2(4 BYTE)                NOT NULL,
  NAME_ENGLISH  VARCHAR2(20 BYTE),
  NAME_OTHER    VARCHAR2(20 BYTE),
  DESCRIPTION   VARCHAR2(50 BYTE),
  UPDATETIME    DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.STATUS_DEF IS 'Таблица НСИ событий Oracle';

COMMENT ON COLUMN BOF.STATUS_DEF.STATUS_NO IS 'код статуса';

COMMENT ON COLUMN BOF.STATUS_DEF.TYPE IS 'тип';

COMMENT ON COLUMN BOF.STATUS_DEF.NAME_ENGLISH IS 'наименование международное';

COMMENT ON COLUMN BOF.STATUS_DEF.NAME_OTHER IS 'наименование локализованное';

COMMENT ON COLUMN BOF.STATUS_DEF.DESCRIPTION IS 'описание';

COMMENT ON COLUMN BOF.STATUS_DEF.UPDATETIME IS 'момент обновления';



ALTER TABLE BOF.STEEL_LADLES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.STEEL_LADLES CASCADE CONSTRAINTS;

CREATE TABLE BOF.STEEL_LADLES
(
  STEELLADLE_NO    VARCHAR2(2 BYTE),
  STATUS           VARCHAR2(4 BYTE),
  HEAT_NO          VARCHAR2(7 BYTE),
  STEEL_LADLES_ID  NUMBER,
  STATUS1          VARCHAR2(30 BYTE),
  STATUS2          VARCHAR2(30 BYTE),
  STATUS3          VARCHAR2(30 BYTE),
  LADLES_WGT       NUMBER(6),
  PLAN_STATUS      NUMBER(1)                    DEFAULT 0
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          5M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.STEEL_LADLES IS 'Таблица данных состояния стальковшей на плавке';

COMMENT ON COLUMN BOF.STEEL_LADLES.STEELLADLE_NO IS 'номер сталевозного ковша';

COMMENT ON COLUMN BOF.STEEL_LADLES.STATUS IS 'статус';

COMMENT ON COLUMN BOF.STEEL_LADLES.HEAT_NO IS 'номер плавки';

COMMENT ON COLUMN BOF.STEEL_LADLES.STEEL_LADLES_ID IS 'Id сталевозного ковша';

COMMENT ON COLUMN BOF.STEEL_LADLES.STATUS1 IS 'статус 1';

COMMENT ON COLUMN BOF.STEEL_LADLES.STATUS2 IS 'статус 2';

COMMENT ON COLUMN BOF.STEEL_LADLES.STATUS3 IS 'статус 3';

COMMENT ON COLUMN BOF.STEEL_LADLES.LADLES_WGT IS 'вес ковша';

COMMENT ON COLUMN BOF.STEEL_LADLES.PLAN_STATUS IS 'рабочий план: 1-рабочий план 44';



DROP TABLE BOF.TARGET_EVENTS CASCADE CONSTRAINTS;

CREATE TABLE BOF.TARGET_EVENTS
(
  HEAT_ID      NUMBER                           NOT NULL,
  C            NUMBER,
  P            NUMBER,
  CU           NUMBER,
  MGO          NUMBER,
  FEO          NUMBER,
  CAO          NUMBER,
  T            NUMBER,
  CAOSIO2      NUMBER,
  INSERTTIME   DATE                             DEFAULT sysdate,
  STEEL_GROUP  INTEGER                          DEFAULT 0                     NOT NULL,
  STEELGROUP   NUMBER                           DEFAULT 0                     NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TARGET_EVENTS IS 'Целевые показатели на плавку';

COMMENT ON COLUMN BOF.TARGET_EVENTS.HEAT_ID IS 'Идентификатор плавки';

COMMENT ON COLUMN BOF.TARGET_EVENTS.STEEL_GROUP IS 'Группа стали';



ALTER TABLE BOF.TB_SHIFT
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TB_SHIFT CASCADE CONSTRAINTS;

CREATE TABLE BOF.TB_SHIFT
(
  SHIFT_ID    NUMBER                            NOT NULL,
  START_TIME  DATE                              NOT NULL,
  TEAM_NAME   CHAR(1 BYTE),
  NOTE        VARCHAR2(240 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TB_SHIFT IS 'Таблицы учета сменного персонала (смены)';

COMMENT ON COLUMN BOF.TB_SHIFT.SHIFT_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.TB_SHIFT.START_TIME IS 'момент начала';

COMMENT ON COLUMN BOF.TB_SHIFT.TEAM_NAME IS 'номер бригады';

COMMENT ON COLUMN BOF.TB_SHIFT.NOTE IS 'примечания';



ALTER TABLE BOF.TB_SHIFT_JOB
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TB_SHIFT_JOB CASCADE CONSTRAINTS;

CREATE TABLE BOF.TB_SHIFT_JOB
(
  JOB_ID            NUMBER                      NOT NULL,
  JOB_NAME_ENGLISH  VARCHAR2(20 BYTE)           NOT NULL,
  JOB_NAME_OTHER    VARCHAR2(20 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TB_SHIFT_JOB IS 'Таблицы учета сменного персонала';

COMMENT ON COLUMN BOF.TB_SHIFT_JOB.JOB_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.TB_SHIFT_JOB.JOB_NAME_ENGLISH IS 'наименование международное';

COMMENT ON COLUMN BOF.TB_SHIFT_JOB.JOB_NAME_OTHER IS 'наименование локализованное';



DROP TABLE BOF.TB_SHIFT_PERSONAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.TB_SHIFT_PERSONAL
(
  SHIFT_ID     NUMBER                           NOT NULL,
  JOB_ID       NUMBER                           NOT NULL,
  PERSONAL_ID  NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          512K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TB_SHIFT_PERSONAL IS 'Таблицы учета сменного персонала';

COMMENT ON COLUMN BOF.TB_SHIFT_PERSONAL.SHIFT_ID IS 'Id смены';

COMMENT ON COLUMN BOF.TB_SHIFT_PERSONAL.JOB_ID IS 'Id профессии';

COMMENT ON COLUMN BOF.TB_SHIFT_PERSONAL.PERSONAL_ID IS 'Id персонала';



DROP TABLE BOF.TB_SHIFT_SETUP CASCADE CONSTRAINTS;

CREATE TABLE BOF.TB_SHIFT_SETUP
(
  SHIFTS_PER_DAY            NUMBER(1)           NOT NULL,
  FIRST_SHIFT_START_OFFSET  NUMBER(2)           NOT NULL,
  REPORT_DAY_START_OFFSET   NUMBER(2)           NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.TB_SHIFT_SETUP.SHIFTS_PER_DAY IS 'смен в день';

COMMENT ON COLUMN BOF.TB_SHIFT_SETUP.FIRST_SHIFT_START_OFFSET IS 'отн.начало первой смены';

COMMENT ON COLUMN BOF.TB_SHIFT_SETUP.REPORT_DAY_START_OFFSET IS 'отн.начало отчетного дня';



ALTER TABLE BOF.TB_SHIFT_TEAM
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TB_SHIFT_TEAM CASCADE CONSTRAINTS;

CREATE TABLE BOF.TB_SHIFT_TEAM
(
  TEAM_NAME  CHAR(1 BYTE)                       NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TB_SHIFT_TEAM IS 'Таблицы учета сменного персонала (бригады)';

COMMENT ON COLUMN BOF.TB_SHIFT_TEAM.TEAM_NAME IS 'номер бригады';



ALTER TABLE BOF.TECHTROUBLE
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TECHTROUBLE CASCADE CONSTRAINTS;

CREATE TABLE BOF.TECHTROUBLE
(
  TROUBLE_ID         NUMBER                     NOT NULL,
  HEAT_ID            NUMBER                     NOT NULL,
  LANCELOW           INTEGER,
  WATERFLOW          INTEGER,
  WATERDIFF          INTEGER,
  OXPRESSURE         INTEGER,
  WATERTEMP          INTEGER,
  MESLANERR          INTEGER,
  O2BLOW             INTEGER,
  H2BLOW             INTEGER,
  MARKA_WAS_CHANGED  VARCHAR2(16 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TECHTROUBLE IS 'Таблицы учета нарушений хода плавки';

COMMENT ON COLUMN BOF.TECHTROUBLE.TROUBLE_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.TECHTROUBLE.HEAT_ID IS 'Id плавки';

COMMENT ON COLUMN BOF.TECHTROUBLE.LANCELOW IS 'низ фурмы';

COMMENT ON COLUMN BOF.TECHTROUBLE.WATERFLOW IS 'расход воды';

COMMENT ON COLUMN BOF.TECHTROUBLE.WATERDIFF IS 'течь фурмы';

COMMENT ON COLUMN BOF.TECHTROUBLE.OXPRESSURE IS 'давление О2';

COMMENT ON COLUMN BOF.TECHTROUBLE.WATERTEMP IS 'температура воды';

COMMENT ON COLUMN BOF.TECHTROUBLE.MESLANERR IS 'сбой измерительной фурмы';

COMMENT ON COLUMN BOF.TECHTROUBLE.O2BLOW IS 'О2 на продувке';

COMMENT ON COLUMN BOF.TECHTROUBLE.H2BLOW IS 'Н2 на продувке';

COMMENT ON COLUMN BOF.TECHTROUBLE.MARKA_WAS_CHANGED IS 'была смена марки';



DROP TABLE BOF.TMP_HEAT_ANALYTIC CASCADE CONSTRAINTS;

CREATE TABLE BOF.TMP_HEAT_ANALYTIC
(
  HEAT_ID   NUMBER,
  HEAT_NO   NUMBER,
  DT_BEGIN  DATE,
  QUALITET  VARCHAR2(200 BYTE),
  HOTMETAL  NUMBER,
  SCRAP     NUMBER,
  SUMMO2    NUMBER,
  TAP_TEMP  NUMBER,
  GEW1      NUMBER,
  GEW2      NUMBER,
  GEW3      NUMBER,
  GEW4      NUMBER,
  GEW5      NUMBER,
  GEW6      NUMBER,
  GEW7      NUMBER,
  GEW8      NUMBER,
  GEW9      NUMBER,
  GEW10     NUMBER,
  GEW11     NUMBER,
  GEW12     NUMBER,
  GEW13     NUMBER,
  GEW14     NUMBER,
  GEW15     NUMBER,
  GEW16     NUMBER,
  GEW17     NUMBER,
  GEW18     NUMBER,
  GEW19     NUMBER,
  GEW20     NUMBER,
  GEW21     NUMBER,
  GEW22     NUMBER,
  GEW23     NUMBER,
  GEW24     NUMBER,
  GEW25     NUMBER,
  GEW26     NUMBER,
  GEW27     NUMBER,
  GEW28     NUMBER,
  GEW29     NUMBER,
  GEW30     NUMBER,
  NAME1     VARCHAR2(16 BYTE),
  NAME2     VARCHAR2(16 BYTE),
  NAME3     VARCHAR2(16 BYTE),
  NAME4     VARCHAR2(16 BYTE),
  NAME5     VARCHAR2(16 BYTE),
  NAME6     VARCHAR2(16 BYTE),
  NAME7     VARCHAR2(16 BYTE),
  NAME8     VARCHAR2(16 BYTE),
  NAME9     VARCHAR2(16 BYTE),
  NAME10    VARCHAR2(16 BYTE),
  NAME11    VARCHAR2(16 BYTE),
  NAME12    VARCHAR2(16 BYTE),
  NAME13    VARCHAR2(16 BYTE),
  NAME14    VARCHAR2(16 BYTE),
  NAME15    VARCHAR2(16 BYTE),
  NAME16    VARCHAR2(16 BYTE),
  NAME17    VARCHAR2(16 BYTE),
  NAME18    VARCHAR2(16 BYTE),
  NAME19    VARCHAR2(16 BYTE),
  NAME20    VARCHAR2(16 BYTE),
  NAME21    VARCHAR2(16 BYTE),
  NAME22    VARCHAR2(16 BYTE),
  NAME23    VARCHAR2(16 BYTE),
  NAME24    VARCHAR2(16 BYTE),
  NAME25    VARCHAR2(16 BYTE),
  NAME26    VARCHAR2(16 BYTE),
  NAME27    VARCHAR2(16 BYTE),
  NAME28    VARCHAR2(16 BYTE),
  NAME29    VARCHAR2(16 BYTE),
  NAME30    VARCHAR2(16 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


DROP TABLE BOF.TMPL_MATERIALS_ASSIGNMENT CASCADE CONSTRAINTS;

CREATE TABLE BOF.TMPL_MATERIALS_ASSIGNMENT
(
  MAT_ID     NUMBER                             NOT NULL,
  BUNKER     NUMBER                             NOT NULL,
  WEIGHTER   NUMBER                             NOT NULL,
  CONFIG_ID  NUMBER                             NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TMPL_MATERIALS_ASSIGNMENT IS 'Соответствие материалов на бункера и весы для конкретной конфигурации визухи';

COMMENT ON COLUMN BOF.TMPL_MATERIALS_ASSIGNMENT.MAT_ID IS 'из MATERIAL_SPEC';

COMMENT ON COLUMN BOF.TMPL_MATERIALS_ASSIGNMENT.BUNKER IS 'номер бункера 5, 6, 7...';

COMMENT ON COLUMN BOF.TMPL_MATERIALS_ASSIGNMENT.WEIGHTER IS 'номер весов';

COMMENT ON COLUMN BOF.TMPL_MATERIALS_ASSIGNMENT.CONFIG_ID IS 'из VIS_Config';



ALTER TABLE BOF.TMPL_PERIODS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TMPL_PERIODS CASCADE CONSTRAINTS;

CREATE TABLE BOF.TMPL_PERIODS
(
  PERIOD_ID    NUMBER,
  INDEXS       NUMBER                           NOT NULL,
  NAME         VARCHAR2(30 BYTE)                NOT NULL,
  TEMPLATE_ID  NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TMPL_PERIODS IS 'представляет период плавки';

COMMENT ON COLUMN BOF.TMPL_PERIODS.INDEXS IS 'номер по порядку в рамках шаблона';



ALTER TABLE BOF.TMPL_PORTIONS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TMPL_PORTIONS CASCADE CONSTRAINTS;

CREATE TABLE BOF.TMPL_PORTIONS
(
  PORTION_ID          NUMBER,
  MAT_ID              NUMBER,
  WEIGHT              NUMBER                    NOT NULL,
  ALLOWTOADD          NUMBER                    NOT NULL,
  KEEP                NUMBER                    NOT NULL,
  ISCORRECTIONTARGET  NUMBER                    NOT NULL,
  STEP_ID             NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TMPL_PORTIONS IS 'представляет навески в шаге';

COMMENT ON COLUMN BOF.TMPL_PORTIONS.ALLOWTOADD IS 'флаг разрешить догрузку (вместо boolean и если null или 0 = false, если 1 = true)';

COMMENT ON COLUMN BOF.TMPL_PORTIONS.KEEP IS 'флаг не отдавать (вместо boolean и если null или 0 = false, если 1 = true)';

COMMENT ON COLUMN BOF.TMPL_PORTIONS.ISCORRECTIONTARGET IS 'распределять коррекции в эту порцию (вместо boolean и если null или 0 = false, если 1 = true)';



ALTER TABLE BOF.TMPL_STAGES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TMPL_STAGES CASCADE CONSTRAINTS;

CREATE TABLE BOF.TMPL_STAGES
(
  STAGE_ID   NUMBER                             NOT NULL,
  INDEXS     NUMBER                             NOT NULL,
  NAME       VARCHAR2(30 BYTE)                  NOT NULL,
  PERIOD_ID  NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE BOF.TMPL_STEPS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TMPL_STEPS CASCADE CONSTRAINTS;

CREATE TABLE BOF.TMPL_STEPS
(
  STEP_ID      NUMBER,
  INDEXS       NUMBER                           NOT NULL,
  LANCEHEIGHT  NUMBER,
  O2FLOW       NUMBER,
  O2TOTAL      NUMBER,
  STAGE_ID     NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE BOF.TMPL_TEMPLATE
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TMPL_TEMPLATE CASCADE CONSTRAINTS;

CREATE TABLE BOF.TMPL_TEMPLATE
(
  TEMPLATE_ID  NUMBER,
  NAME         VARCHAR2(30 BYTE)                NOT NULL,
  TYPE         NUMBER                           NOT NULL,
  GROUPS       NUMBER,
  READONLY     NUMBER                           NOT NULL,
  CONFIG_ID    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TMPL_TEMPLATE IS 'представляет "шаблон" плавки';

COMMENT ON COLUMN BOF.TMPL_TEMPLATE.TEMPLATE_ID IS 'Ключ - идентификатор шаблона';

COMMENT ON COLUMN BOF.TMPL_TEMPLATE.NAME IS 'имя шаблона';

COMMENT ON COLUMN BOF.TMPL_TEMPLATE.TYPE IS '1-старый, 2- средний, 3 - новый конвертер';

COMMENT ON COLUMN BOF.TMPL_TEMPLATE.GROUPS IS 'номер группы';

COMMENT ON COLUMN BOF.TMPL_TEMPLATE.READONLY IS 'вместо boolean и если null или 0 = false, если 1 = true ';

COMMENT ON COLUMN BOF.TMPL_TEMPLATE.CONFIG_ID IS 'из VIS_Config';



ALTER TABLE BOF.TORKRETIEREN
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TORKRETIEREN CASCADE CONSTRAINTS;

CREATE TABLE BOF.TORKRETIEREN
(
  CV_NO      NUMBER(1)                          NOT NULL,
  STARTTIME  DATE                               NOT NULL,
  ENDTIME    DATE,
  VALUE      NUMBER(6),
  HEAT_ID    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          512K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TORKRETIEREN IS 'Таблица данных проведенных факельных торкретированиях конвертеров';

COMMENT ON COLUMN BOF.TORKRETIEREN.CV_NO IS 'номер конвертера';

COMMENT ON COLUMN BOF.TORKRETIEREN.STARTTIME IS 'момент начала';

COMMENT ON COLUMN BOF.TORKRETIEREN.ENDTIME IS 'момент завершения';

COMMENT ON COLUMN BOF.TORKRETIEREN.VALUE IS 'величина';

COMMENT ON COLUMN BOF.TORKRETIEREN.HEAT_ID IS 'Id плавки';



ALTER TABLE BOF.TORPEDOS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TORPEDOS CASCADE CONSTRAINTS;

CREATE TABLE BOF.TORPEDOS
(
  TLC_ID            NUMBER                      NOT NULL,
  TLC_NO            VARCHAR2(2 BYTE)            NOT NULL,
  STATUS            VARCHAR2(4 BYTE)            NOT NULL,
  INSERTTIME        DATE                        NOT NULL,
  DATA_SOURCE       VARCHAR2(4 BYTE),
  ANA_C             FLOAT(126),
  ANA_SI            FLOAT(126),
  ANA_MN            FLOAT(126),
  ANA_P             FLOAT(126),
  ANA_S             FLOAT(126),
  ANA_TI            FLOAT(126),
  SAMPLE_NO         NUMBER,
  SAMPLE_PLACE      VARCHAR2(4 BYTE),
  LAST_POURINGWGT   NUMBER(6),
  LAST_POURINGTIME  DATE,
  TOTAL_POURINGWGT  NUMBER(6)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          4M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TORPEDOS IS 'Таблица данных чугуновозных миксеров (данные СП)';

COMMENT ON COLUMN BOF.TORPEDOS.TLC_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.TORPEDOS.TLC_NO IS 'номер миксера';

COMMENT ON COLUMN BOF.TORPEDOS.STATUS IS 'статус';

COMMENT ON COLUMN BOF.TORPEDOS.INSERTTIME IS 'момент ввода данных';

COMMENT ON COLUMN BOF.TORPEDOS.DATA_SOURCE IS 'источник данных';

COMMENT ON COLUMN BOF.TORPEDOS.ANA_C IS 'химанализ';

COMMENT ON COLUMN BOF.TORPEDOS.ANA_SI IS 'химанализ';

COMMENT ON COLUMN BOF.TORPEDOS.ANA_MN IS 'химанализ';

COMMENT ON COLUMN BOF.TORPEDOS.ANA_P IS 'химанализ';

COMMENT ON COLUMN BOF.TORPEDOS.ANA_S IS 'химанализ';

COMMENT ON COLUMN BOF.TORPEDOS.ANA_TI IS 'химанализ';

COMMENT ON COLUMN BOF.TORPEDOS.SAMPLE_NO IS 'номер пробы';

COMMENT ON COLUMN BOF.TORPEDOS.SAMPLE_PLACE IS 'место взятия пробы';

COMMENT ON COLUMN BOF.TORPEDOS.LAST_POURINGWGT IS 'вес последней порции';

COMMENT ON COLUMN BOF.TORPEDOS.LAST_POURINGTIME IS 'момент последнего слива';

COMMENT ON COLUMN BOF.TORPEDOS.TOTAL_POURINGWGT IS 'общий слитый вес';



ALTER TABLE BOF.TORP_IN_KOMMEN
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TORP_IN_KOMMEN CASCADE CONSTRAINTS;

CREATE TABLE BOF.TORP_IN_KOMMEN
(
  TRP_ID           NUMBER                       NOT NULL,
  HO_ID            NUMBER,
  DTFROMHO         DATE,
  DT1STPOURING     DATE,
  DTANALYSE        DATE,
  DTLASTPOURING    DATE,
  DTTOHO           DATE,
  TRP_NO           INTEGER,
  HO_GES_GEW       NUMBER,
  POURING_GES_GEW  NUMBER,
  HO_SI            FLOAT(126),
  HO_S             FLOAT(126),
  HO_P             FLOAT(126),
  HO_MN            FLOAT(126),
  C                FLOAT(126),
  SI               FLOAT(126),
  S                FLOAT(126),
  P                FLOAT(126),
  MN               FLOAT(126),
  TI               NUMBER,
  DTHOANALYSE      DATE,
  DOMNA            NUMBER                       DEFAULT 4
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          6M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TORP_IN_KOMMEN IS 'Таблица данных чугуновозных миксеров (данные с домны)';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.TRP_ID IS 'Id durch TORP_IN_KOMMEN_SEQ';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.HO_ID IS 'Id ведущееся на домне';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.DTFROMHO IS 'Время отхода с домны';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.DT1STPOURING IS 'Время 1 слива';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.DTANALYSE IS 'Время анализа';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.DTLASTPOURING IS 'Время последнего слива';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.DTTOHO IS 'Время возврата на домну';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.TRP_NO IS 'Номер миксера';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.HO_GES_GEW IS 'Вес общий, тонны';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.POURING_GES_GEW IS 'Вес слитый, тонны';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.HO_SI IS 'химанализ домны';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.HO_S IS 'химанализ домны';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.HO_P IS 'химанализ домны';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.HO_MN IS 'химанализ домны';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.C IS 'химанализ';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.SI IS 'химанализ';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.S IS 'химанализ';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.P IS 'химанализ';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.MN IS 'химанализ';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.TI IS 'химанализ';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.DTHOANALYSE IS 'дата химанализа домны';

COMMENT ON COLUMN BOF.TORP_IN_KOMMEN.DOMNA IS 'Номер домны';



ALTER TABLE BOF.TRACE_OFFGAS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TRACE_OFFGAS CASCADE CONSTRAINTS;

CREATE TABLE BOF.TRACE_OFFGAS
(
  OFFGAS_ID   NUMBER                            NOT NULL,
  HEAT_ID     NUMBER                            NOT NULL,
  INSERTTIME  DATE                              NOT NULL,
  TEMP        NUMBER(4),
  FLOW        FLOAT(126),
  ANA_CO      FLOAT(126),
  ANA_CO2     FLOAT(126),
  ANA_O2      FLOAT(126),
  ANA_N2      FLOAT(126),
  ANA_H2      FLOAT(126),
  ANA_AR      FLOAT(126),
  HOOD_POS    NUMBER(1),
  PHASE_NO    VARCHAR2(4 BYTE),
  CNV_NO      NUMBER(1)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          112M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TRACE_OFFGAS IS 'Таблица данных газового анализа на плавке';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.OFFGAS_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.TEMP IS 'температура';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.FLOW IS 'расход';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.ANA_CO IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.ANA_CO2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.ANA_O2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.ANA_N2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.ANA_H2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.ANA_AR IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.HOOD_POS IS 'положение юбки';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.PHASE_NO IS 'имя фазы';

COMMENT ON COLUMN BOF.TRACE_OFFGAS.CNV_NO IS '№ конвертера';



DROP TABLE BOF.TRACE_TBL CASCADE CONSTRAINTS;

CREATE TABLE BOF.TRACE_TBL
(
  DATE_MES    DATE                              DEFAULT sysdate,
  NAME_MODUL  VARCHAR2(50 BYTE),
  SESSIYA     VARCHAR2(100 BYTE),
  MESSAGE     VARCHAR2(4000 BYTE),
  TYPE_MES    VARCHAR2(3 BYTE),
  SEQ_FIELD   NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          22M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.TRACE_TBL.DATE_MES IS 'момент времени';

COMMENT ON COLUMN BOF.TRACE_TBL.NAME_MODUL IS 'имя модуля';

COMMENT ON COLUMN BOF.TRACE_TBL.SESSIYA IS 'сессия';

COMMENT ON COLUMN BOF.TRACE_TBL.MESSAGE IS 'сообщение';

COMMENT ON COLUMN BOF.TRACE_TBL.TYPE_MES IS 'тип сообщения';

COMMENT ON COLUMN BOF.TRACE_TBL.SEQ_FIELD IS 'уникальный Id';



ALTER TABLE BOF.TREND_BALANCE
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TREND_BALANCE CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_BALANCE
(
  CNV_NO      NUMBER(1),
  INSERTTIME  DATE                              NOT NULL,
  C           NUMBER,
  T           NUMBER,
  SI          NUMBER,
  MN          NUMBER,
  AL          NUMBER,
  CR          NUMBER,
  P           NUMBER,
  TI          NUMBER,
  V           NUMBER,
  FE          NUMBER,
  CAO         NUMBER,
  FEO         NUMBER,
  SIO2        NUMBER,
  MNO         NUMBER,
  MGO         NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TREND_BALANCE IS 'Таблица расчета параметров модели баланса';

COMMENT ON COLUMN BOF.TREND_BALANCE.CNV_NO IS '№ конвертера';

COMMENT ON COLUMN BOF.TREND_BALANCE.INSERTTIME IS 'момент занесения';



ALTER TABLE BOF.TREND_GASFLOW
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TREND_GASFLOW CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_GASFLOW
(
  CNV_NO          NUMBER                        NOT NULL,
  INSERTTIME      DATE                          NOT NULL,
  O2FLOW          NUMBER,
  O2PRESSURE      NUMBER,
  O2DROP          NUMBER,
  O2TEMP          NUMBER,
  LANCE           NVARCHAR2(1),
  N2FLOWWND       NUMBER,
  N2PRESSUREWND   NUMBER,
  N2DROPWND       NUMBER,
  N2TEMPWND       NUMBER,
  N2FLOWBLR       NUMBER,
  N2PRESSUREBLR   NUMBER,
  N2DROPBLR       NUMBER,
  N2TEMPBLR       NUMBER,
  N2FLOWLEAK      NUMBER,
  N2PRESSURELEAK  NUMBER,
  N2DROPLEAK      NUMBER,
  N2TEMPLEAK      NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.TREND_GASFLOW.CNV_NO IS 'Номер конвертера';

COMMENT ON COLUMN BOF.TREND_GASFLOW.INSERTTIME IS 'Момент занесения';

COMMENT ON COLUMN BOF.TREND_GASFLOW.O2FLOW IS 'Расход кислорода на рабочей ветке';

COMMENT ON COLUMN BOF.TREND_GASFLOW.O2PRESSURE IS 'Давление кислорода на рабочей ветке';

COMMENT ON COLUMN BOF.TREND_GASFLOW.O2DROP IS 'перепад кислорода на рабочей ветке  ';

COMMENT ON COLUMN BOF.TREND_GASFLOW.O2TEMP IS 'температура кислорода на рабочей ветке';

COMMENT ON COLUMN BOF.TREND_GASFLOW.LANCE IS 'фурма левая/правая (L/R)';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2FLOWWND IS 'расход азота на уплотнение фурменного окна';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2PRESSUREWND IS 'давление азота на уплотнение фурменного окна';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2DROPWND IS 'перепад давления азота на уплотнение фурменного окна';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2TEMPWND IS 'температура азота на уплотнение фурменного окна';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2FLOWBLR IS 'расход азота на уплотнение котла';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2PRESSUREBLR IS 'давление азота на уплотнение котла';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2DROPBLR IS 'перепад давления азота на уплотнение котла';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2TEMPBLR IS 'температура азота на уплотнение котла';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2FLOWLEAK IS 'расход азота на уплотнение течек';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2PRESSURELEAK IS 'давление азота на уплотнение течек';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2DROPLEAK IS 'перепад давления  азота на уплотнение течек';

COMMENT ON COLUMN BOF.TREND_GASFLOW.N2TEMPLEAK IS 'температура азота на уплотнение течек';



ALTER TABLE BOF.TREND_HOTMETAL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TREND_HOTMETAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_HOTMETAL
(
  HEAT_NO       VARCHAR2(7 BYTE),
  INSERTTIME    DATE,
  CHGL_NO       NUMBER,
  HM_WEIGHT     NUMBER,
  HM_TEMP       NUMBER,
  FINAL_WEIGHT  NUMBER,
  FINAL_TEMP    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.TREND_HOTMETAL.HEAT_NO IS 'Номер плавки';

COMMENT ON COLUMN BOF.TREND_HOTMETAL.INSERTTIME IS 'Время вставки';

COMMENT ON COLUMN BOF.TREND_HOTMETAL.CHGL_NO IS 'Номер ковша';

COMMENT ON COLUMN BOF.TREND_HOTMETAL.HM_WEIGHT IS 'Вес';

COMMENT ON COLUMN BOF.TREND_HOTMETAL.HM_TEMP IS 'Температура';

COMMENT ON COLUMN BOF.TREND_HOTMETAL.FINAL_WEIGHT IS 'Уточненный вес';

COMMENT ON COLUMN BOF.TREND_HOTMETAL.FINAL_TEMP IS 'Уточненая температура';



ALTER TABLE BOF.TREND_LANCE
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TREND_LANCE CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_LANCE
(
  CNV_NO              NUMBER(1),
  INSERTTIME          DATE                      NOT NULL,
  O2TOTALVOL          NUMBER,
  O2FLOW              NUMBER,
  O2PRESSURE          NUMBER,
  LANCEHEIGHT         NUMBER,
  LANCEMODE           NUMBER,
  O2FLOWMODE          NUMBER,
  LEFTWATERINP        NUMBER,
  LEFTWATEROUT        NUMBER,
  LEFTWATERTEMPINP    NUMBER,
  LEFTWATERTEMPOUTP   NUMBER,
  LEFTLECK            NUMBER,
  RIGHTLECK           NUMBER,
  LEFTWATERPRESS      NUMBER,
  RIGHTWATERPRESS     NUMBER,
  RIGHTWATERINP       NUMBER,
  RIGHTWATEROUT       NUMBER,
  RIGHTWATERTEMPINP   NUMBER,
  RIGHTWATERTEMPOUTP  NUMBER,
  LEFTWEIGHT          NUMBER,
  LEFTGOAT            NUMBER,
  RIGHTWEIGHT         NUMBER,
  RIGHTGOAT           NUMBER,
  BATHLEVEL           NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          72M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TREND_LANCE IS 'Таблица параметров продувки';

COMMENT ON COLUMN BOF.TREND_LANCE.CNV_NO IS '№ конвертера';

COMMENT ON COLUMN BOF.TREND_LANCE.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.TREND_LANCE.O2TOTALVOL IS 'Общий расход О2';

COMMENT ON COLUMN BOF.TREND_LANCE.O2FLOW IS 'Интенсивность продувки';

COMMENT ON COLUMN BOF.TREND_LANCE.O2PRESSURE IS 'Давление О2';

COMMENT ON COLUMN BOF.TREND_LANCE.LANCEHEIGHT IS 'Положение фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.LANCEMODE IS 'Режим работы управления фурмой';

COMMENT ON COLUMN BOF.TREND_LANCE.O2FLOWMODE IS 'Режим работы регулирования O2';

COMMENT ON COLUMN BOF.TREND_LANCE.LEFTWATERINP IS 'Расход воды на входе в левую фурму';

COMMENT ON COLUMN BOF.TREND_LANCE.LEFTWATEROUT IS 'Расход воды на выходе из левой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.LEFTWATERTEMPINP IS 'Температура воды на входе в левую фурму';

COMMENT ON COLUMN BOF.TREND_LANCE.LEFTWATERTEMPOUTP IS 'Температура воды на выходе из левой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.LEFTLECK IS 'Течь левой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.RIGHTLECK IS 'Течь правой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.LEFTWATERPRESS IS 'Давление воды в левой фурме';

COMMENT ON COLUMN BOF.TREND_LANCE.RIGHTWATERPRESS IS 'Давление воды в правой фурме';

COMMENT ON COLUMN BOF.TREND_LANCE.RIGHTWATERINP IS 'Расход воды на входе в правую фурму';

COMMENT ON COLUMN BOF.TREND_LANCE.RIGHTWATEROUT IS 'Расход воды на выходе из правой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.RIGHTWATERTEMPINP IS 'Температура воды на входе в правую фурму';

COMMENT ON COLUMN BOF.TREND_LANCE.RIGHTWATERTEMPOUTP IS 'Температура воды на выходе из правой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.LEFTWEIGHT IS 'Вес левой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.LEFTGOAT IS 'Вес козла левой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.RIGHTWEIGHT IS 'Вес правой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.RIGHTGOAT IS 'Вес козла правой фурмы';

COMMENT ON COLUMN BOF.TREND_LANCE.BATHLEVEL IS 'Уровень ванны';



ALTER TABLE BOF.TREND_MODES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TREND_MODES CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_MODES
(
  CNV_NO      NUMBER(1),
  INSERTTIME  DATE                              NOT NULL,
  IGNITION    NUMBER,
  SLAGOUT     NUMBER,
  LANCE       NUMBER,
  O2FLOW      NUMBER,
  TRACT       NUMBER,
  ANGLE       NUMBER,
  "level"     NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TREND_MODES IS 'Таблица режимов работы';

COMMENT ON COLUMN BOF.TREND_MODES.CNV_NO IS '№ конвертера';

COMMENT ON COLUMN BOF.TREND_MODES.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.TREND_MODES.IGNITION IS 'зажигание плавки';

COMMENT ON COLUMN BOF.TREND_MODES.SLAGOUT IS 'выброс шлака';

COMMENT ON COLUMN BOF.TREND_MODES.LANCE IS 'Режим работы фурмы';

COMMENT ON COLUMN BOF.TREND_MODES.O2FLOW IS 'Режим подачи кислорода';

COMMENT ON COLUMN BOF.TREND_MODES.TRACT IS 'Режим работы тракта сыпучих';

COMMENT ON COLUMN BOF.TREND_MODES.ANGLE IS 'Угол наклона конвертера';



ALTER TABLE BOF.TREND_OFFGAS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TREND_OFFGAS CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_OFFGAS
(
  CNV_NO          NUMBER(1),
  INSERTTIME      DATE                          NOT NULL,
  FLOW            NUMBER,
  TEMP            NUMBER,
  HOODPOS         NUMBER,
  FILTER          NUMBER,
  CNT             NUMBER,
  TEMPONEXIT      NUMBER,
  TEMPPRECOLLING  NUMBER,
  TEMPSTEP1       NUMBER,
  TEMPSTEP2       NUMBER,
  DECOMPRESS      NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TREND_OFFGAS IS 'Таблица параметров газоочистки';

COMMENT ON COLUMN BOF.TREND_OFFGAS.CNV_NO IS '№ конвертера';

COMMENT ON COLUMN BOF.TREND_OFFGAS.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.TREND_OFFGAS.FLOW IS 'Расход отходящих газов';

COMMENT ON COLUMN BOF.TREND_OFFGAS.TEMP IS 'Температура отходящих газов';

COMMENT ON COLUMN BOF.TREND_OFFGAS.HOODPOS IS 'Положение юбки';

COMMENT ON COLUMN BOF.TREND_OFFGAS.FILTER IS 'Позиция регулирующего конуса';

COMMENT ON COLUMN BOF.TREND_OFFGAS.CNT IS 'счетчик расхода отходящих газов(поплавочый)';

COMMENT ON COLUMN BOF.TREND_OFFGAS.TEMPONEXIT IS 'температура газов на выходе из котла-охладителя';

COMMENT ON COLUMN BOF.TREND_OFFGAS.TEMPPRECOLLING IS 'температура отходящих газов после предварительного охлаждения';

COMMENT ON COLUMN BOF.TREND_OFFGAS.TEMPSTEP1 IS 'температура отходящих газов после первой ступени';

COMMENT ON COLUMN BOF.TREND_OFFGAS.TEMPSTEP2 IS 'температура отходящих газов после второй ступени';

COMMENT ON COLUMN BOF.TREND_OFFGAS.DECOMPRESS IS 'давление (разрежение) отходящих газов в месте замера расхода отходящих газов и температуры отходящих газов';



DROP TABLE BOF.TREND_OFFGASANALYSE CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_OFFGASANALYSE
(
  CNV_NO           NUMBER(1),
  INSERTTIME       DATE                         NOT NULL,
  CO               NUMBER,
  CO2              NUMBER,
  O2               NUMBER,
  N2               NUMBER,
  H2               NUMBER,
  AR               NUMBER,
  HOODPOS          NUMBER,
  TRANSPORTDELAY1  NUMBER,
  TRANSPORTDELAY2  NUMBER,
  DIAGBYTE         NUMBER,
  BRANCH           NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          112M
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TREND_OFFGASANALYSE IS 'Таблица данных газового анализа на плавке';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.CNV_NO IS '№ конвертера';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.CO IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.CO2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.O2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.N2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.H2 IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.AR IS 'анализ отходящих газов';

COMMENT ON COLUMN BOF.TREND_OFFGASANALYSE.HOODPOS IS 'Положение юбки';



ALTER TABLE BOF.TREND_STATISTIC
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TREND_STATISTIC CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_STATISTIC
(
  CNV_NO         NUMBER(1),
  INSERTTIME     DATE                           NOT NULL,
  C              NUMBER,
  T              NUMBER,
  TEMPINBOILER   NUMBER,
  DTEMPINBOILER  NUMBER,
  DTEMPINBLOW    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TREND_STATISTIC IS 'Таблица расчетных параметров статистической модели';

COMMENT ON COLUMN BOF.TREND_STATISTIC.CNV_NO IS '№ конвертера';

COMMENT ON COLUMN BOF.TREND_STATISTIC.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.TREND_STATISTIC.C IS 'C, % расчетный';

COMMENT ON COLUMN BOF.TREND_STATISTIC.T IS 'Т расчетная, градусы Цельсия';

COMMENT ON COLUMN BOF.TREND_STATISTIC.TEMPINBOILER IS 'Температура отходящих газов после предварительного охлаждения в котле, град';

COMMENT ON COLUMN BOF.TREND_STATISTIC.DTEMPINBOILER IS 'Нагрев отходящих газов после предварительного охлаждения в котле, град';

COMMENT ON COLUMN BOF.TREND_STATISTIC.DTEMPINBLOW IS 'Нагрев отходящих газов за время продувки, град';



DROP TABLE BOF.TREND_SUBLANCE CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_SUBLANCE
(
  CNV_NO      NUMBER                            NOT NULL,
  INSERTTIME  DATE,
  O2START     NUMBER,
  O2          NUMBER,
  CO          NUMBER,
  HOTMETAL    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.TREND_SUBLANCE.CNV_NO IS 'Номер конвертера';

COMMENT ON COLUMN BOF.TREND_SUBLANCE.INSERTTIME IS 'момент занесения';

COMMENT ON COLUMN BOF.TREND_SUBLANCE.O2START IS 'значение кислорода при котором по расчету пора стартовать замер';

COMMENT ON COLUMN BOF.TREND_SUBLANCE.O2 IS 'текущее значение кислорода';

COMMENT ON COLUMN BOF.TREND_SUBLANCE.CO IS 'текущее значение моно оксида углерода ';

COMMENT ON COLUMN BOF.TREND_SUBLANCE.HOTMETAL IS 'чугун в конвертере в тоннах';



ALTER TABLE BOF.TREND_XIMCALC
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TREND_XIMCALC CASCADE CONSTRAINTS;

CREATE TABLE BOF.TREND_XIMCALC
(
  HEAT_NO     VARCHAR2(7 BYTE)                  NOT NULL,
  INSERTTIME  DATE                              NOT NULL,
  XIM_VID     NUMBER                            NOT NULL,
  CAO         NUMBER,
  SIO2        NUMBER,
  FEO         NUMBER,
  MGO         NUMBER,
  MNO         NUMBER,
  AL2O3       NUMBER,
  P2O5        NUMBER,
  S           NUMBER,
  C           NUMBER,
  SI          NUMBER,
  MN          NUMBER,
  P           NUMBER,
  CR          NUMBER,
  NI          NUMBER,
  CU          NUMBER,
  AL          NUMBER,
  N           NUMBER,
  MO          NUMBER,
  V           NUMBER,
  TI          NUMBER,
  FE          NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.TREND_XIMCALC.HEAT_NO IS 'Номер плавки';

COMMENT ON COLUMN BOF.TREND_XIMCALC.INSERTTIME IS 'Время вставки';

COMMENT ON COLUMN BOF.TREND_XIMCALC.XIM_VID IS 'Вид (1 -сталь, 2-шлак 3- чугун)';



DROP TABLE BOF.UA#CURR_TRK CASCADE CONSTRAINTS;

CREATE TABLE BOF.UA#CURR_TRK
(
  CURR_ID       NUMBER                          NOT NULL,
  ID            NUMBER,
  HEAT_ID       NUMBER,
  CNV_NO        INTEGER,
  INSERTTIME    DATE,
  SOURCETIME    DATE,
  F_O2          FLOAT(63),
  F_IJECTION    FLOAT(63),
  F_AIRATION_1  FLOAT(63),
  F_AIRATION_2  FLOAT(63),
  F_SMES1       FLOAT(63),
  F_SMES2       FLOAT(63),
  P_O2          FLOAT(63),
  P_N2          FLOAT(63),
  P_N2_VAPP1    FLOAT(63),
  N_N2_VAPP2    FLOAT(63),
  ISERROR       INTEGER,
  ERRORTXT      VARCHAR2(64 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.UA#CURR_TRK IS 'Таблицы учета данных факельного торкретирования';

COMMENT ON COLUMN BOF.UA#CURR_TRK.CURR_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.UA#CURR_TRK.ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.UA#CURR_TRK.HEAT_ID IS 'Id плавки';

COMMENT ON COLUMN BOF.UA#CURR_TRK.CNV_NO IS 'номер конвертера';

COMMENT ON COLUMN BOF.UA#CURR_TRK.INSERTTIME IS 'момент ввода';

COMMENT ON COLUMN BOF.UA#CURR_TRK.SOURCETIME IS 'время по источнику';

COMMENT ON COLUMN BOF.UA#CURR_TRK.F_O2 IS 'расход О2';

COMMENT ON COLUMN BOF.UA#CURR_TRK.F_IJECTION IS 'инжекция';

COMMENT ON COLUMN BOF.UA#CURR_TRK.F_AIRATION_1 IS 'аэрация 1';

COMMENT ON COLUMN BOF.UA#CURR_TRK.F_AIRATION_2 IS 'аэрация 2';

COMMENT ON COLUMN BOF.UA#CURR_TRK.F_SMES1 IS 'смесь 1';

COMMENT ON COLUMN BOF.UA#CURR_TRK.F_SMES2 IS 'смесь 2';

COMMENT ON COLUMN BOF.UA#CURR_TRK.P_O2 IS 'давление О2';

COMMENT ON COLUMN BOF.UA#CURR_TRK.P_N2 IS 'давление N2';

COMMENT ON COLUMN BOF.UA#CURR_TRK.P_N2_VAPP1 IS 'давление N2 на ВАПП 1';

COMMENT ON COLUMN BOF.UA#CURR_TRK.N_N2_VAPP2 IS 'N2 на ВАПП 2';

COMMENT ON COLUMN BOF.UA#CURR_TRK.ISERROR IS 'был сбой';

COMMENT ON COLUMN BOF.UA#CURR_TRK.ERRORTXT IS 'текст ошибки';



DROP TABLE BOF.UA#TOTAL_TRK CASCADE CONSTRAINTS;

CREATE TABLE BOF.UA#TOTAL_TRK
(
  CURR_ID           NUMBER                      NOT NULL,
  ID                NUMBER,
  HEAT_ID           NUMBER,
  CNV_NO            INTEGER,
  DTBEGIN           DATE,
  DTEND             DATE,
  SUMM_F_O2         FLOAT(63),
  SUMM_N2_IJECTION  FLOAT(63),
  SUMM_N2_AIRATION  FLOAT(63),
  SUMM_MASS         INTEGER,
  ISERROR           INTEGER,
  ERRORTXT          VARCHAR2(64 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          768K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.UA#TOTAL_TRK IS 'Таблицы учета данных факельного торкретирования (общий учет)';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.CURR_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.ID IS 'уникальный Id,переписан из SQL-Server';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.HEAT_ID IS 'Id плавки';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.CNV_NO IS 'номер конвертера';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.DTBEGIN IS 'момент начала';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.DTEND IS 'момент окончания';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.SUMM_F_O2 IS 'сумма О2';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.SUMM_N2_IJECTION IS 'сумма N2 на инжекцию';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.SUMM_N2_AIRATION IS 'сумма N2 на аэрацию';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.SUMM_MASS IS 'суммарный расход торкретмассы';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.ISERROR IS 'был сбой';

COMMENT ON COLUMN BOF.UA#TOTAL_TRK.ERRORTXT IS 'текст ошибки';



DROP TABLE BOF.VIOLA_BERICHT CASCADE CONSTRAINTS;

CREATE TABLE BOF.VIOLA_BERICHT
(
  STOERUNG_ID  NUMBER,
  INSERTTIME   DATE,
  CHANU        VARCHAR2(7 BYTE),
  ZEIT         DATE,
  QUALIT       VARCHAR2(40 BYTE),
  BLMEISTER    VARCHAR2(20 BYTE),
  BR           VARCHAR2(1 BYTE),
  N_01         VARCHAR2(1 BYTE),
  N_02         VARCHAR2(1 BYTE),
  N_03         VARCHAR2(1 BYTE),
  N_04         VARCHAR2(1 BYTE),
  N_05         VARCHAR2(1 BYTE),
  N_06         VARCHAR2(1 BYTE),
  N_07         VARCHAR2(1 BYTE),
  N_08         VARCHAR2(1 BYTE),
  N_09         VARCHAR2(1 BYTE),
  N_10         VARCHAR2(1 BYTE),
  T_S          NUMBER,
  T_K          NUMBER,
  PR_LA        NUMBER,
  PR_SA        NUMBER,
  PR_WA        NUMBER,
  T_SO         NUMBER,
  M_QUAL       VARCHAR2(4 BYTE),
  D_QUAL       VARCHAR2(16 BYTE),
  BLANF        DATE,
  BLEND        DATE,
  ABSTANF      DATE,
  ABSTEND      DATE,
  ZUZEIT       DATE,
  BUNCK        NUMBER,
  MATART       VARCHAR2(10 BYTE),
  GEWICHT      NUMBER,
  ERKLAER      VARCHAR2(30 BYTE),
  FINI         VARCHAR2(4 BYTE),
  N_11         VARCHAR2(1 BYTE),
  N_12         VARCHAR2(1 BYTE),
  N_13         VARCHAR2(1 BYTE),
  N_14         VARCHAR2(1 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.VIOLA_BERICHT.STOERUNG_ID IS 'master key';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.INSERTTIME IS 'Время занесения данных в таблицу';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.CHANU IS 'Номер плавки';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.ZEIT IS 'Время начала плавки';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.QUALIT IS 'Заданная марка стали';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.BLMEISTER IS 'Фамилия дистрибуторщика';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.BR IS 'Номер бригады';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_01 IS 'Нарушение 1';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_02 IS 'Нарушение 2';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_03 IS 'Нарушение 3';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_04 IS 'Нарушение 3';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_05 IS 'Нарушение 5';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_06 IS 'Нарушение 6';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_07 IS 'Нарушение 7';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_08 IS 'Нарушение 8';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_09 IS 'Нарушение 9';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_10 IS 'Нарушение 10';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.T_S IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.T_K IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.PR_LA IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.PR_SA IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.PR_WA IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.T_SO IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.M_QUAL IS 'марка';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.D_QUAL IS 'марка';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.BLANF IS 'момент начала продувки';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.BLEND IS 'момент окончания продувки';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.ABSTANF IS 'момент начала слива';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.ABSTEND IS 'момент конца слива';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.ZUZEIT IS 'момент отачи сыпучих';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.BUNCK IS 'номер бункера';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.MATART IS 'вид материала';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.GEWICHT IS 'вес';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.ERKLAER IS 'комментарий';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.FINI IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_11 IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_12 IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_13 IS 'признак';

COMMENT ON COLUMN BOF.VIOLA_BERICHT.N_14 IS 'признак';



ALTER TABLE BOF.VIS_ACCESSRULES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.VIS_ACCESSRULES CASCADE CONSTRAINTS;

CREATE TABLE BOF.VIS_ACCESSRULES
(
  RULE_ID  NUMBER,
  TEXT     VARCHAR2(256 BYTE)                   NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.VIS_ACCESSRULES IS 'список возможных правил контроля доступа';



ALTER TABLE BOF.VIS_CONFIG
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.VIS_CONFIG CASCADE CONSTRAINTS;

CREATE TABLE BOF.VIS_CONFIG
(
  CONFIG_ID    NUMBER                           NOT NULL,
  CONFIG_NAME  VARCHAR2(20 BYTE)                NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.VIS_CONFIG IS 'Cписок конфигураций визухи - отделяет шаблоны и маппинги материалов для разных экземпляров визухи для разных конвертеров';



ALTER TABLE BOF.VIS_MESSAGES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.VIS_MESSAGES CASCADE CONSTRAINTS;

CREATE TABLE BOF.VIS_MESSAGES
(
  MESSAGE_ID   NUMBER,
  ISUSERSCOPE  NUMBER                           NOT NULL,
  DATETIME     DATE                             NOT NULL,
  TEXT         VARCHAR2(256 BYTE)               NOT NULL,
  CONFIG_ID    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.VIS_MESSAGES.ISUSERSCOPE IS 'флаг - пользовательское сообщение или системное';



DROP TABLE BOF.VIS_USERACCESSRULES CASCADE CONSTRAINTS;

CREATE TABLE BOF.VIS_USERACCESSRULES
(
  RULE_ID  NUMBER,
  VALUE    NUMBER,
  USER_ID  NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.VIS_USERACCESSRULES IS 'правила доступа конкретных пользователей';



ALTER TABLE BOF.VIS_USERS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.VIS_USERS CASCADE CONSTRAINTS;

CREATE TABLE BOF.VIS_USERS
(
  USER_ID       NUMBER,
  NAME          VARCHAR2(50 BYTE)               NOT NULL,
  LOGIN         VARCHAR2(50 BYTE)               NOT NULL,
  PASSWORDHASH  VARCHAR2(256 BYTE)              NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


DROP TABLE BOF.WATCHDOG CASCADE CONSTRAINTS;

CREATE TABLE BOF.WATCHDOG
(
  SNAME       VARCHAR2(32 BYTE),
  SDESC       VARCHAR2(100 BYTE),
  DTLASTTICK  DATE                              DEFAULT sysdate,
  VALUE       NUMBER                            DEFAULT 0,
  ENABLE      NUMBER                            DEFAULT 0,
  SENDLISTNR  NUMBER                            DEFAULT 0,
  SENDSMS     NUMBER                            DEFAULT 0
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             8K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.WATCHDOG IS 'Актуальные значения тиков';

COMMENT ON COLUMN BOF.WATCHDOG.SNAME IS 'имя тика';

COMMENT ON COLUMN BOF.WATCHDOG.SDESC IS 'описание';

COMMENT ON COLUMN BOF.WATCHDOG.DTLASTTICK IS 'момент последнего тика';

COMMENT ON COLUMN BOF.WATCHDOG.VALUE IS 'значение тика';

COMMENT ON COLUMN BOF.WATCHDOG.ENABLE IS '0: выключен(не надо оценивать)  1: включен(надо оценивать)';

COMMENT ON COLUMN BOF.WATCHDOG.SENDLISTNR IS 'номер списка email-адресов 0: нет  списка';

COMMENT ON COLUMN BOF.WATCHDOG.SENDSMS IS '0:  не надо SMS';



DROP TABLE BOF.WEBCACHEKZ CASCADE CONSTRAINTS;

CREATE TABLE BOF.WEBCACHEKZ
(
  IKZ0        NUMBER                            DEFAULT 1,
  ICNT0       NUMBER,
  DTACT0      DATE,
  ITABLENR    INTEGER,
  DTFULLSCAN  DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.WEBCACHEKZ.IKZ0 IS 'От триггеров:требование на обработку';

COMMENT ON COLUMN BOF.WEBCACHEKZ.ICNT0 IS 'количество необработанных';

COMMENT ON COLUMN BOF.WEBCACHEKZ.DTACT0 IS 'Момент любого прохода VorbShowEvents';

COMMENT ON COLUMN BOF.WEBCACHEKZ.ITABLENR IS 'номер текущей таблицы 0:WebCache0  1:WebCache1';

COMMENT ON COLUMN BOF.WEBCACHEKZ.DTFULLSCAN IS 'Момент полного прохода VorbShowEvents';



DROP TABLE BOF.WEBCACHEREQ CASCADE CONSTRAINTS;

CREATE TABLE BOF.WEBCACHEREQ
(
  LFDNR  NUMBER                                 NOT NULL,
  ZEILE  VARCHAR2(256 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


DROP TABLE BOF.WEBCACHE0 CASCADE CONSTRAINTS;

CREATE TABLE BOF.WEBCACHE0
(
  LFDNR  NUMBER                                 NOT NULL,
  ZEILE  VARCHAR2(256 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


DROP TABLE BOF.WEBCACHE1 CASCADE CONSTRAINTS;

CREATE TABLE BOF.WEBCACHE1
(
  LFDNR  NUMBER                                 NOT NULL,
  ZEILE  VARCHAR2(256 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


ALTER TABLE BOF.WREG_APPLICATIONS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.WREG_APPLICATIONS CASCADE CONSTRAINTS;

CREATE TABLE BOF.WREG_APPLICATIONS
(
  WREG_APPLICATIONS_ID  NUMBER                  NOT NULL,
  APPLICATIONSNAME      VARCHAR2(64 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.WREG_APPLICATIONS.WREG_APPLICATIONS_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.WREG_APPLICATIONS.APPLICATIONSNAME IS 'имя приложения';



ALTER TABLE BOF.WREG_DETAILS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.WREG_DETAILS CASCADE CONSTRAINTS;

CREATE TABLE BOF.WREG_DETAILS
(
  WREG_DETAILS_ID  NUMBER                       NOT NULL,
  TREE_ID          NUMBER,
  WORKDATE         DATE,
  WORKTIME         NUMBER,
  DESCR            VARCHAR2(128 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          320K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.WREG_DETAILS.WREG_DETAILS_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.WREG_DETAILS.TREE_ID IS 'уникальный Id дерева';

COMMENT ON COLUMN BOF.WREG_DETAILS.WORKDATE IS 'дата работы';

COMMENT ON COLUMN BOF.WREG_DETAILS.WORKTIME IS 'время работы';

COMMENT ON COLUMN BOF.WREG_DETAILS.DESCR IS 'описание';



ALTER TABLE BOF.WREG_EXECUTORS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.WREG_EXECUTORS CASCADE CONSTRAINTS;

CREATE TABLE BOF.WREG_EXECUTORS
(
  WREG_EXECUTORS_ID  NUMBER                     NOT NULL,
  EXECUTORSNAME      VARCHAR2(32 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.WREG_EXECUTORS.WREG_EXECUTORS_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.WREG_EXECUTORS.EXECUTORSNAME IS 'имя исполнителя';



ALTER TABLE BOF.WREG_INITIATORS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.WREG_INITIATORS CASCADE CONSTRAINTS;

CREATE TABLE BOF.WREG_INITIATORS
(
  WREG_INITIATORS_ID  NUMBER                    NOT NULL,
  INITIATORSNAME      VARCHAR2(32 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.WREG_INITIATORS.WREG_INITIATORS_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.WREG_INITIATORS.INITIATORSNAME IS 'имя инициатора';



ALTER TABLE BOF.WREG_SECTIONS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.WREG_SECTIONS CASCADE CONSTRAINTS;

CREATE TABLE BOF.WREG_SECTIONS
(
  WREG_SECTIONS_ID  NUMBER                      NOT NULL,
  SECTIONNAME       VARCHAR2(64 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.WREG_SECTIONS.WREG_SECTIONS_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.WREG_SECTIONS.SECTIONNAME IS 'имя секции';



ALTER TABLE BOF.WREG_TREE
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.WREG_TREE CASCADE CONSTRAINTS;

CREATE TABLE BOF.WREG_TREE
(
  WREG_TREE_ID    NUMBER                        NOT NULL,
  ASU             VARCHAR2(32 BYTE),
  ART             NUMBER,
  SECTION_ID      NUMBER,
  APPLICATION_ID  NUMBER,
  INITIATOR_ID    NUMBER,
  INITIALDATE     DATE,
  ENDDATE         DATE,
  EXECUTOR_ID     NUMBER,
  WORKDESCR_ID    NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.WREG_TREE.WREG_TREE_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.WREG_TREE.ASU IS 'наименование АСУ';

COMMENT ON COLUMN BOF.WREG_TREE.ART IS 'вид';

COMMENT ON COLUMN BOF.WREG_TREE.SECTION_ID IS 'Id секции';

COMMENT ON COLUMN BOF.WREG_TREE.APPLICATION_ID IS 'Id приложения';

COMMENT ON COLUMN BOF.WREG_TREE.INITIATOR_ID IS 'Id инициатора';

COMMENT ON COLUMN BOF.WREG_TREE.INITIALDATE IS 'момент начала';

COMMENT ON COLUMN BOF.WREG_TREE.ENDDATE IS 'момент окончания';

COMMENT ON COLUMN BOF.WREG_TREE.EXECUTOR_ID IS 'Id исполнителя';

COMMENT ON COLUMN BOF.WREG_TREE.WORKDESCR_ID IS 'Id описания';



ALTER TABLE BOF.WREG_WORKDESCR
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.WREG_WORKDESCR CASCADE CONSTRAINTS;

CREATE TABLE BOF.WREG_WORKDESCR
(
  WREG_WORKDESCR_ID  NUMBER                     NOT NULL,
  WORKDESCR          VARCHAR2(128 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.WREG_WORKDESCR.WREG_WORKDESCR_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.WREG_WORKDESCR.WORKDESCR IS 'описание';



CREATE INDEX BOF.ACTBUF_TIME_IDX ON BOF.SCHR_ORPHANS
(ACTBUF_TIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          384K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.ADDITION_PK ON BOF.ADDITION
(ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.BOF_TELEGRAMS_PK ON BOF.BOF_TELEGRAMS
(REC_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.CONFIG_ID_PK ON BOF.VIS_CONFIG
(CONFIG_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.ELEMENT_PK ON BOF.ELEMENT
(ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.FETTING_PK ON BOF.FITTING
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.GRANAEL_PK ON BOF.GRADE_ANALYSIS_EL
(ELEMENT, GRADE_ANALYSIS_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.GRANA_PK ON BOF.GRADE_ANALYSIS
(GRADE_ANALYSIS_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.GRANA_UK ON BOF.GRADE_ANALYSIS
(GRADE_ANALYSIS_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.GRSP_PK ON BOF.GRADE_SPEC
(GRADE_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.GRSTA_PK ON BOF.GRADE_STD_ALLOY
(GRADE_ID, MAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HBLO_TIM_I ON BOF.HEAT_BLOWINGS
(INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          80M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HEAT_CALCPARAM_PK ON BOF.HEAT_CALCPARAM
(HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HEAT_FACTPARAM_PK ON BOF.HEAT_FACTPARAM
(HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HEAT_PK ON BOF.HEATS
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HEATS_UK ON BOF.HEATS
(HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HEAT_TARGETVAL_PK ON BOF.HEAT_TARGETVAL
(HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HM_KRAN_TIME ON BOF.HEAT_HOTMETAL_KRAN
(KRAN_TIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HMLDL_PK ON BOF.HOTMETAL_LADLES
(CHGL_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HMPOUR_BY_TLC_ID ON BOF.HOTMETAL_POURINGS
(TLC_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HMPOUR_PK ON BOF.HOTMETAL_POURINGS
(HMPOURING_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HOAIM_PK ON BOF.HEATORDER_AIMDATA
(HO_ID, NAME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          5M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HOANA_PK ON BOF.HEATORDER_ANA
(HO_ID, ELEMENT)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          15M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HO_PK ON BOF.HEATORDERS
(HO_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HO_PTT ON BOF.HEATORDERS
(PLANNED_TAPEND_TIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HOR_PK ON BOF.HEATORDER_RNO
(HO_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HO_UK ON BOF.HEATORDERS
(HO_ID, INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTACT_PK ON BOF.HEAT_ACT
(CV_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTACT_UK1 ON BOF.HEAT_ACT
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTACT_UK2 ON BOF.HEAT_ACT
(HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTADDACT_HT_TIM_MAT_PH_I ON BOF.HEAT_ADDITIONS_ACT
(HEAT_ID, INSERTTIME, MAT_ID, PHASE_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          37M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTADDACT_PK ON BOF.HEAT_ADDITIONS_ACT
(HTADDACT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          11M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTADDACT_TIM_I ON BOF.HEAT_ADDITIONS_ACT
(INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          13M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTADDDOZ_HT_TIM_MAT_PH_I ON BOF.HEAT_ADDITIONS_DOZEN
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTADDDOZ_PK ON BOF.HEAT_ADDITIONS_DOZEN
(HTADDDOZ_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTADDMAN_TIM_I ON BOF.HEAT_ADDITIONS_MAN
(INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTALYTOT_PK ON BOF.HEAT_ALLOYS_TOTAL
(ALYTOT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTBLASENS_PK ON BOF.HEAT_BLASENS
(BLASENS_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTBLEV_PK ON BOF.HEAT_BATHLEVEL
(BATHLEVEL_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTBLOW_HT_TIM_PH_I ON BOF.HEAT_BLOWINGS
(HEAT_ID, INSERTTIME, PHASE_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          159M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTBLOW_PK ON BOF.HEAT_BLOWINGS
(BLOWING_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          80M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTMEAS_HT_FK_I ON BOF.HEAT_MEASUREMENTS
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTMEAS_PK ON BOF.HEAT_MEASUREMENTS
(MEASUREMENT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTOG_PK ON BOF.HEAT_OFFGAS
(OFFGAS_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          15M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTOGTRACE_PK ON BOF.TRACE_OFFGAS
(OFFGAS_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTPB_PK ON BOF.HEAT_POURBACK
(POURBACK_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTPH_PK ON BOF.HEAT_PHASES
(HEATPHASE_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          7M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTPH_STTIM_I ON BOF.HEAT_PHASES
(STARTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          7M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTPH_UK ON BOF.HEAT_PHASES
(HEAT_ID, STARTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          15M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTREGR_PK ON BOF.HEAT_REGRADINGS
(REGR_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          512K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.IDX_BY_DATE ON BOF.MODEL_TELEGRAMS
(EVENTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.IDX_BY_OPERID ON BOF.MODEL_TELEGRAMS
(OPERATION_ID, HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.INDX_HOTMLADLES_DPCHUGID ON BOF.HOTMETAL_LADLES
(DP_KOVSH_CHUG_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.INDX_LADLESOPCH_DATE ON BOF.LADLES_OPCH
(DTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.INDX_PERSONAL ON BOF.HEAT_PERSONAL
(HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.INDX_REMARK ON BOF.HEAT_REMARK
(HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.INDX_SLGBLG_HEATID ON BOF.SLAGBLOWING
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          384K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.INDX_TRACETBL_DT ON BOF.TRACE_TBL
(DATE_MES)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.INDX_TRACETBL_NM ON BOF.TRACE_TBL
(NAME_MODUL, TYPE_MES)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          6M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.I_SHIFT_1 ON BOF.TB_SHIFT
(START_TIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.KRANWEBMAININD ON BOF.KRANWEB
(KRAN_NR, DTBEGIN)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.LADLES_OPCH_PK ON BOF.LADLES_OPCH
(LADLES_OPCH_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.LADL_PK ON BOF.LADLES
(CHGL_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.LANCES_DTINST ON BOF.LANCES
(DTINSTALL)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.LANCES_DTUNINST ON BOF.LANCES
(DTUNINSTALL)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.LOG_PK ON BOF.LOG_UPDATE
(LOG_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          512K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.MESS_LDLLVL_DT ON BOF.MESS_LADLELVL
(INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.MESS_O2_PK ON BOF.MESS_O2INO2
(O2INO2_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          512K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.MESS_O2_UK ON BOF.MESS_O2INO2
(INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.MODEL_TRENDS_IDX ON BOF.MODEL_TRENDS
(OPERATION_ID, EVENTTIME, HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.MSPEC_NAMES ON BOF.MATERIAL_SPEC
(NAME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.MSPEC_PK ON BOF.MATERIAL_SPEC
(MAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.MSPEC_UK3 ON BOF.MATERIAL_SPEC
(MAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.NSI_FETTING_PK ON BOF.NSI_FITTING
(FITTING_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PARGR_PK ON BOF.PARAMETER_GRADES
(GRADE_ID, NAME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_EVENTSSPEC_ID ON BOF.EVENTS_SPEC
(TYPE_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_HEAT_ADDITIONS_MAN ON BOF.HEAT_ADDITIONS_MAN
(HTADDMAN_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_HEAT_PERSONAL ON BOF.HEAT_PERSONAL
(ID_PERSONAL)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_HEATS_ALLERTS ON BOF.HEATS_ALLERTS
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          768K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_HEAT_UNRS ON BOF.HEAT_UNRS
(HEAT_UNRS_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_LANCES ON BOF.LANCES
(LANCES_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_MODELTELEGRAMS_RECID ON BOF.MODEL_TELEGRAMS
(REC_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_MODELTRENDS_RECID ON BOF.MODEL_TRENDS
(REC_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_MONITORING_EVENTS ON BOF.MONITORING_EVENTS
(EVENT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_NSIOPER_ID ON BOF.NSI_OPERATIONS
(OPER_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_PAR_ID ON BOF.BOF_PARAMETERS
(PAR_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_REASONS ON BOF.REASONS
(REASON_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_REMARK ON BOF.HEAT_REMARK
(ID_REMARK)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_SCHR_ORPHANS ON BOF.SCHR_ORPHANS
(ORPHANS_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_SHIFT_CALENDAR ON BOF.TB_SHIFT
(SHIFT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_SHIFT_JOB ON BOF.TB_SHIFT_JOB
(JOB_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_SHIFT_TEAM ON BOF.TB_SHIFT_TEAM
(TEAM_NAME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_STEEL_LADLES ON BOF.STEEL_LADLES
(STEEL_LADLES_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_TORP_IN_KOMMEN ON BOF.TORP_IN_KOMMEN
(TRP_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          768K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PORTION_ID_PK ON BOF.TMPL_PORTIONS
(PORTION_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PRPH_PK ON BOF.PROCESS_PHASES
(PHASE_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.READEF_PK ON BOF.REASON_DEF
(REASON_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.RESULT_TIME_IDX ON BOF.SCHR_ORPHANS
(RESULT_TIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SCRAP_PK ON BOF.SCRAP
(ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SCRAPSH_PK ON BOF.SCRAPSCHEMES
(SCSH_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SCRBUC_KR_PK ON BOF.SCRAP_BUCKETS_KRAN
(BUCKET_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SCRBUC_PK ON BOF.SCRAP_BUCKETS
(BUCKET_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SCRBUC_UK ON BOF.SCRAP_BUCKETS
(BUCKET_NO, LOADINGTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SCRMAT_PK ON BOF.SCRAP_BUCKETMATS
(BUCKET_ID, MAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          4M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SCSHST_PK ON BOF.SCRAPSCHEME_STEPS
(SCSH_NO, MAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SJ_PK ON BOF.SHIFT_JOB
(JOB_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SLBLOW_PK ON BOF.SLAGBLOWING
(CV_NO, STARTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.SPECTROTRACE_IDX ON BOF.SPECTROTRACE
(INSERTTIME, STLGID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.STAGE_ID_PK ON BOF.TMPL_STAGES
(STAGE_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.STDEF_PK ON BOF.STATUS_DEF
(STATUS_NO, TYPE)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.STDEF_UK ON BOF.STATUS_DEF
(TYPE, STATUS_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.STEP_ID_PK ON BOF.TMPL_STEPS
(STEP_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.ST_PK ON BOF.SHIFT_TEAM
(TEAM_NAME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


--  There is no statement for index BOF.SYS_C0011788.
--  The object is created automatically by Oracle when the parent object is created.

--  There is no statement for index BOF.SYS_C0011790.
--  The object is created automatically by Oracle when the parent object is created.

--  There is no statement for index BOF.SYS_C0011792.
--  The object is created automatically by Oracle when the parent object is created.

--  There is no statement for index BOF.SYS_C0011794.
--  The object is created automatically by Oracle when the parent object is created.

--  There is no statement for index BOF.SYS_C0011796.
--  The object is created automatically by Oracle when the parent object is created.

--  There is no statement for index BOF.SYS_C0011798.
--  The object is created automatically by Oracle when the parent object is created.

--  There is no statement for index BOF.SYS_C0011800.
--  The object is created automatically by Oracle when the parent object is created.

CREATE UNIQUE INDEX BOF.TEMPLATE_ID_PK ON BOF.TMPL_TEMPLATE
(TEMPLATE_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TLC_PK ON BOF.TORPEDOS
(TLC_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TLC_UK ON BOF.TORPEDOS
(INSERTTIME, TLC_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TMPL_PERIODS_PK ON BOF.TMPL_PERIODS
(PERIOD_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TORK_PK ON BOF.TORKRETIEREN
(CV_NO, STARTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          512K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.TORP_IK_NUK ON BOF.TORP_IN_KOMMEN
(HO_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_BALANCE_UK ON BOF.TREND_BALANCE
(CNV_NO, INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_GASFLOW_PK ON BOF.TREND_GASFLOW
(CNV_NO, INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_HOTMETAL_PK ON BOF.TREND_HOTMETAL
(HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_LANCE_UK ON BOF.TREND_LANCE
(CNV_NO, INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_MODES_UK ON BOF.TREND_MODES
(CNV_NO, INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_OFFGASANALYSE_PK ON BOF.TREND_OFFGASANALYSE
(INSERTTIME, CNV_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_OFFGAS_UK ON BOF.TREND_OFFGAS
(CNV_NO, INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_STATISTIC_UK ON BOF.TREND_STATISTIC
(CNV_NO, INSERTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TREND_XIMCALC_PK ON BOF.TREND_XIMCALC
(XIM_VID, HEAT_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TROUBLE_PK ON BOF.TECHTROUBLE
(TROUBLE_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.UA#CURR_TRK_CV ON BOF.UA#CURR_TRK
(CNV_NO)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          768K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.UA#CURR_TRK_TM ON BOF.UA#CURR_TRK
(SOURCETIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.UA#TOTAL_TRK_TM ON BOF.UA#TOTAL_TRK
(DTBEGIN)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          384K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.UQ_ADDITION_DESCRIPTION ON BOF.ADDITION
(DESCRIPTION)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.UQ_ADDITION_NAME ON BOF.ADDITION
(NAME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.UQ_ELEMENT_SID_AND_NAME ON BOF.ELEMENT
(SID, NAME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.UQ_SCRAP_CODE ON BOF.SCRAP
(CODE)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.UQ_SCRAP_DESCRIPTION ON BOF.SCRAP
(DESCRIPTION)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.VIS_ACCESSRULES_PK ON BOF.VIS_ACCESSRULES
(RULE_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.VIS_MESSAGES_PK ON BOF.VIS_MESSAGES
(MESSAGE_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.VIS_USERS_PK ON BOF.VIS_USERS
(USER_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.XPKHEATS ON BOF.HEATS_ESPC
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER BOF.TRG_TELEGRAMS
BEFORE INSERT
ON BOF.BOF_TELEGRAMS FOR EACH ROW
DECLARE

BEGIN
  IF :NEW.REC_ID IS NULL THEN
    :NEW.REC_ID := SEQ_TELEGRAMS.NEXTVAL;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END TRG_TELEGRAMS;
/


CREATE OR REPLACE TRIGGER BOF.TR_HEATS_ALLERTS_UPDATE_L3
  BEFORE UPDATE ON heats_allerts  
  FOR EACH ROW
DECLARE 
BEGIN 
  IF :new.heat_id <> 2703 THEN          -- отметка для MnemoWEB время последней синхронизации АСУП (Иван)
     IF :new.heat_status = 1 THEN
        :new.heat_update := SYSDATE;
     END IF;
  END IF;
END TR_HEATS_ALLERTS_UPDATE_L3;
/


CREATE OR REPLACE TRIGGER BOF.TR_Lance_Upd
before update
ON lances
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
declare
   v_ErrCode NUMBER;
   v_ErrText VARCHAR2(150);
   sBlasLanze  varchar2(1);
begin
   TRACE_LOG.LOGGER(' Update LANCES_ID '||:old.LANCES_ID||' No '||:old.LANCE_NO||' Art='||:old.LANCE_ART
                , 'CalcLanceStat.LOG');

   TRACE_LOG.LOGGER(' ACTHEAT_ID CNTCHARGEN CNTSUMMBLASDAUER CNTCHARGENFACKTORKR CNTSUMMFACKTORKRDAUER CNTCHARGENSLAGBLOW CNTSUMMSLAGBLOWDAUER'
                , 'CalcLanceStat.LOG');
   TRACE_LOG.LOGGER(' old '||:old.ACTHEAT_ID||'     '||round(:old.CNTCHARGEN,0)||'          '        
                  ||round(:old.CNTSUMMBLASDAUER,0)||'                 '
                  ||round(:old.CNTCHARGENFACKTORKR,0)||'                 '
                  ||round(:old.CNTSUMMFACKTORKRDAUER,0)||'              '
                  ||round(:old.CNTCHARGENSLAGBLOW,0)||'              '
                  ||round(:old.CNTSUMMSLAGBLOWDAUER,0)
                , 'CalcLanceStat.LOG');
   TRACE_LOG.LOGGER(' new '||:new.ACTHEAT_ID||'     '||round(:new.CNTCHARGEN,0)||'          '        
                  ||round(:new.CNTSUMMBLASDAUER,0)||'                 '
                  ||round(:new.CNTCHARGENFACKTORKR,0)||'                 '
                  ||round(:new.CNTSUMMFACKTORKRDAUER,0)||'              '
                  ||round(:new.CNTCHARGENSLAGBLOW,0)||'              '
                  ||round(:new.CNTSUMMSLAGBLOWDAUER,0)
                , 'CalcLanceStat.LOG');
  Exception
      When others then
      v_ErrCode:=SQLCODE;
       v_ErrText:=SUBSTR(SQLERRM,1,150);
      TRACE_LOG.LOGGER('TR_Lance_Upd: ' ||:new.LANCES_ID||'  '||v_ErrText, 'TRIGGERS.LOG');
end TR_Lance_Upd;
/


CREATE OR REPLACE TRIGGER BOF."TR_NOTIFY_RE_KRAN" AFTER INSERT OR UPDATE or delete  ON "HEAT_HOTMETAL_KRAN" FOR EACH ROW
DECLARE
   iOpArt SMALLINT;
   vmsg  VARCHAR2(64);
   nRetValue    NUMBER;
   intJobNo    NUMBER;
   v_ErrCode NUMBER;
   v_ErrText VARCHAR2(150);
BEGIN
      vmsg:= TO_CHAR(:NEW.Serial);
      dbms_alert.signal ('NOTIFY_KRAN', vmsg);
   
   Exception
      When others then
      v_ErrCode:=SQLCODE;
       v_ErrText:=SUBSTR(SQLERRM,1,150);
      TRACE_LOG.LOGGER('TR_NOTIFY_RE_KRAN error: XIM_ID=' ||:new.Serial ||'  '||v_ErrText, 'TRIGGERS.LOG');
END;
/


CREATE OR REPLACE TRIGGER BOF.TR_SET_CARBON_EVT
  after insert or update OF "CARBON" on heat_measurements
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE
  V_ERRCODE NUMBER;
  V_ERRTEXT VARCHAR2(150);
  INTJOBNO  NUMBER;
BEGIN
  DBMS_JOB.SUBMIT(INTJOBNO
                 ,'mnemo.Set_Carbon_Evt(' || TO_CHAR(:NEW.MEASUREMENT_ID) || ');'
                 ,SYSDATE + 14 / 86400
                 ,NULL
                 ,FALSE);
  DBMS_ALERT.SIGNAL('sendRHI', 'SUBLANCE;');
  --       SYS_TRACE_PCK.TRACE('K'||:old.cv_no||' '||:old.heat_id ||'-->'|| :new.heat_id ||',start Set_TC_Hit for '
  --          ||:old.heat_id
  --          , NULL);
EXCEPTION
  WHEN OTHERS THEN
    V_ERRCODE := SQLCODE;
    V_ERRTEXT := SUBSTR(SQLERRM, 1, 150);
    TRACE_LOG.LOGGER('Exception on TR_SET_Carbon_EVT: ' || :NEW.MEASUREMENT_ID || ' ' || V_ERRTEXT
                    ,'TRIGGERS.LOG');
  
END TR_SAMM_TC_STAT;
/


CREATE OR REPLACE TRIGGER BOF.trg_log_update
   BEFORE INSERT
   ON BOF.LOG_UPDATE    FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.log_id IS NULL
   THEN
      SELECT logup_seq.NEXTVAL
        INTO :NEW.log_id
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.TRG_Delays
BEFORE INSERT ON BOF.DELAYS FOR EACH ROW
DECLARE

BEGIN
  IF :NEW.Id IS NULL THEN
    SELECT HTDELAY_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.tr_New_UA#Tork
  after insert ON BOF.UA#TOTAL_TRK  
     REFERENCING NEW AS NEW OLD AS OLD
  for each row
DECLARE
  ICNT     NUMBER;
  INTJOBNO NUMBER;
BEGIN
  SELECT COUNT(*) INTO ICNT FROM TORKRETIEREN WHERE HEAT_ID = :NEW.HEAT_ID;
  IF ICNT = 0 THEN
    INSERT INTO TORKRETIEREN
      (CV_NO, STARTTIME, ENDTIME, VALUE, HEAT_ID)
    VALUES
      (:NEW.CNV_NO, :NEW.DTBEGIN, :NEW.DTEND, :NEW.SUMM_F_O2, :NEW.HEAT_ID);
    UPDATE WEBCACHEKZ SET IKZ0 = NVL(IKZ0, 0) + 1;
    DBMS_JOB.SUBMIT(INTJOBNO
                   ,'DBMS_APPLICATION_INFO.SET_ACTION (' || CHR(39) || 'tr_New_UA#Tork при ' ||
                    :NEW.HEAT_ID || CHR(39) || ');mnemo.SmartRunVorbShowEvents();'
                   ,SYSDATE
                   ,NULL
                   ,FALSE);
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES('tr_New_UA#Tork: :NEW.heat_id' || :NEW.HEAT_ID || ', ' || ICNT || '  ' ||
                    DBMS_UTILITY.FORMAT_ERROR_STACK
                   ,'TRIGGERS.LOG'
                   ,1);
END;
/


CREATE OR REPLACE TRIGGER BOF.tr_set_n2kuehl_evt
   AFTER INSERT OR UPDATE
   ON BOF.SLAGBLOWING    REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
   v_errcode   NUMBER;
   v_errtext   VARCHAR2 (150);
   intjobno    NUMBER;
   icntblos    NUMBER;
BEGIN
/*
if INSERTING then
   TRACE_LOG.LOGGER('INSERT on slagblowing: heat_id ' ||:new.heat_id
      ||' new '||to_char(:new.starttime,'DD.MM.YYYY HH24:MI:SS')
      ||' '||to_char(:new.endtime,'DD.MM.YYYY HH24:MI:SS')
      ||' '||:new.value
      , 'TRIGGERS.LOG');
else
   TRACE_LOG.LOGGER('UPDATE on slagblowing: old heat_id ' ||:old.heat_id
      ||' old '||to_char(:old.starttime,'DD.MM.YYYY HH24:MI:SS')
      ||' '||to_char(:old.endtime,'DD.MM.YYYY HH24:MI:SS')
      ||' '||:old.value
      ||' new heat_id ' ||:new.heat_id
      ||' new '||to_char(:new.starttime,'DD.MM.YYYY HH24:MI:SS')
      ||' '||to_char(:new.endtime,'DD.MM.YYYY HH24:MI:SS')
      ||' '||:new.value
      , 'TRIGGERS.LOG');
end if;
*/
   SELECT COUNT (*) AS cntblos
     INTO icntblos
     FROM heat_events
    WHERE heat_id = :NEW.heat_id AND TYPE = 'MBLS';
                                                   -- bevor 19.10.07 was: BLOS

/*
   if iCntBLOS>0 then
      DBMS_JOB.SUBMIT (intJobNo,
                    'StatProcs.Set_N2Kuehl_Evt(' || TO_CHAR(:new.heat_id) ||');',
                     SYSDATE+14/86400,
                     NULL,
                     FALSE);
   end if;
*/
   IF icntblos > 0
   THEN
      IF INSERTING
      THEN
         INSERT INTO heat_events
                     (event_id, heat_id, TYPE,
                      eventtime
                     )
              VALUES (htevents_seq.NEXTVAL, :NEW.heat_id, 'N2BS',
                      :NEW.starttime
                     );
      ELSE
         INSERT INTO heat_events
                     (event_id, heat_id, TYPE,
                      eventtime, par_name1, value1
                     )
              VALUES (htevents_seq.NEXTVAL, :NEW.heat_id, 'N2BE',
                      :NEW.endtime, 'N2VOL', :NEW.VALUE
                     );
      END IF;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      TRACE.trace_mes (   'Exception on TR_SET_N2Kuehl_EVT: '
                       || :NEW.heat_id
                       || ' '
                       || DBMS_UTILITY.format_error_stack,
                       'TRIGGERS.LOG',
                       1
                      );
END tr_set_n2kuehl_evt;
/


CREATE OR REPLACE TRIGGER BOF.tr_ctrl_n2kuehl_evt
   BEFORE UPDATE
   ON BOF.SLAGBLOWING    REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DISABLE
DECLARE
   v_errcode   NUMBER;
   v_errtext   VARCHAR2 (150);
BEGIN
   IF :OLD.endtime IS NOT NULL
   THEN
      IF :OLD.VALUE > 0
      THEN
         TRACE.trace_mes (   'TR_ctrl_N2Kuehl_EVT: '
                          || :NEW.heat_id
                          || ' endtime='
                          || TO_CHAR (:OLD.endtime, 'dd.mm.yyyy hh24:mi:ss')
                          || ' new endtime='
                          || TO_CHAR (:NEW.endtime, 'dd.mm.yyyy hh24:mi:ss')
                          || ' is ignored',
                          'TRIGGERS.LOG',
                          1
                         );
         :NEW.endtime := :OLD.endtime;
         :NEW.VALUE := :OLD.VALUE;
      END IF;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      TRACE.trace_mes (   'Exception on TR_ctrl_N2Kuehl_EVT: '
                       || :NEW.heat_id
                       || ' '
                       || DBMS_UTILITY.format_error_stack,
                       'TRIGGERS.LOG',
                       1
                      );
END;
/


CREATE OR REPLACE TRIGGER BOF.TR_Upd_HOTMETAL_POURINGS 
 after update ON BOF.HOTMETAL_POURINGS REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  VCFILENAME VARCHAR2(200) := 'TR_Upd_HOTMETAL_POURINGS';
BEGIN
  TRACE.TRACE_MES_WITHOUT_COMMIT('*** Update HotMetal_Pourings HMPOURING_ID = ' ||
                                 :OLD.HMPOURING_ID || ' terrorist: ' || TRACE.VCGETHEADER
                                ,VCFILENAME
                                ,1);
  TRACE.TRACE_MES_WITHOUT_COMMIT('old ' || :OLD.HMPOURING_ID || ' ' ||
                                 TO_CHAR(:OLD.POURINGTIME, 'DD.MM.YYYY HH24:MI:SS') || ' ' ||
                                 :OLD.TLC_ID || ' ' || :OLD.CHGL_ID || ' ' || :OLD.WEIGHT
                                ,VCFILENAME
                                ,1);
  TRACE.TRACE_MES_WITHOUT_COMMIT('new ' || :NEW.HMPOURING_ID || ' ' ||
                                 TO_CHAR(:NEW.POURINGTIME, 'DD.MM.YYYY HH24:MI:SS') || ' ' ||
                                 :NEW.TLC_ID || ' ' || :NEW.CHGL_ID || ' ' || :NEW.WEIGHT
                                ,VCFILENAME
                                ,1);

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES_WITHOUT_COMMIT('TR_Upd_HOTMETAL_POURINGS: ' || :OLD.HMPOURING_ID || '  ' ||
                                   DBMS_UTILITY.FORMAT_ERROR_STACK
                                  ,VCFILENAME
                                  ,1);
END TR_UPD_HOTMETAL_POURINGS;
/


CREATE OR REPLACE TRIGGER BOF."TR_Ctrl_MESS_LADLELVL_Id" AFTER UPDATE OF "HEAT_ID" ON "MESS_LADLELVL" FOR EACH ROW
DECLARE
   v_ErrCode NUMBER;
   v_ErrText VARCHAR2(150);
BEGIN
   if updating then
      update KRANECTRL set LASTIDENTTOHEAT=sysdate,ROWSWITHOUTIDENTIFIC =0
         where ID=2;
      if :new.Heat_Id is not null then
         if :new.StandWeight>27.3 then
            update heat_hotmetal set StandWeight =:new.StandWeight
               where heat_hotmetal.heat_id=:new.heat_id;
         end if;   
         if :new.netto>27.3 then
            update heat_hotmetal set netto_radar =:new.netto
               where heat_hotmetal.heat_id=:new.heat_id;
         end if;   
      end if;
   end if;
   
   Exception
      When others then
      v_ErrCode:=SQLCODE;
       v_ErrText:=SUBSTR(SQLERRM,1,150);
      TRACE_LOG.LOGGER('TR_Ctrl_MESS_LADLELVL_Id: ' ||v_ErrText, 'TRIGGERS.LOG');
END;
/


CREATE OR REPLACE TRIGGER BOF.TR_NEW_CAMPAIGN_NO before update OF CAMPAIGN_NO ON BOF.HEAT_ACT FOR EACH ROW
DECLARE
BEGIN
  IF :NEW.CAMPAIGN_NO <> :OLD.CAMPAIGN_NO THEN
    :NEW.CAMPAIGN_START := SYSDATE;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES_WITHOUT_COMMIT('TR_NEW_CAMPAIGN_NO: ' || DBMS_UTILITY.FORMAT_ERROR_STACK
                                  ,'TRIGGERS.LOG'
                                  ,1);
END;
/


CREATE OR REPLACE TRIGGER BOF.TR_SET_TEMPER_EVT
  after insert or update OF "TEMP" on heat_measurements
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE
  V_ERRCODE NUMBER;
  V_ERRTEXT VARCHAR2(150);
  INTJOBNO  NUMBER;
BEGIN
  DBMS_JOB.SUBMIT(INTJOBNO
                 ,'mnemo.Set_Temperature_Evt(' || TO_CHAR(:NEW.MEASUREMENT_ID) || ');'
                 ,SYSDATE + 14 / 86400
                 ,NULL
                 ,FALSE);
  --       TRACE_LOG.LOGGER('measurement_id'||:new.measurement_id ||',start TR_SET_TEMPER_EVT for '
  --          ||:new.heat_id
  --          , 'TRIGGERS.LOG');
EXCEPTION
  WHEN OTHERS THEN
    V_ERRCODE := SQLCODE;
    V_ERRTEXT := SUBSTR(SQLERRM, 1, 150);
    TRACE_LOG.LOGGER('Exception on TR_SET_TEMPER_EVT: ' || :NEW.MEASUREMENT_ID || ' ' || V_ERRTEXT
                    ,'TRIGGERS.LOG');
  
END TR_SAMM_TC_STAT;
/


CREATE OR REPLACE TRIGGER BOF.TR_SET_OXYGEN_EVT
  after insert or update OF "OXYGEN" on heat_measurements
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DISABLE
DECLARE
  V_ERRCODE NUMBER;
  V_ERRTEXT VARCHAR2(150);
  INTJOBNO  NUMBER;
BEGIN
  DBMS_JOB.SUBMIT(INTJOBNO
                 ,'mnemo.Set_Oxygen_Evt(' || TO_CHAR(:NEW.MEASUREMENT_ID) || ');'
                 ,SYSDATE + 14 / 86400
                 ,NULL
                 ,FALSE);
  --       SYS_TRACE_PCK.TRACE('K'||:old.cv_no||' '||:old.heat_id ||'-->'|| :new.heat_id ||',start Set_TC_Hit for '
  --          ||:old.heat_id
  --          , NULL);
EXCEPTION
  WHEN OTHERS THEN
    V_ERRCODE := SQLCODE;
    V_ERRTEXT := SUBSTR(SQLERRM, 1, 150);
    TRACE_LOG.LOGGER('Exception on TR_SET_Oxygen_EVT: ' || :NEW.MEASUREMENT_ID || ' ' || V_ERRTEXT
                    ,'TRIGGERS.LOG');
  
END TR_SAMM_TC_STAT;
/


CREATE OR REPLACE TRIGGER BOF.TR_Pours_obsrv
  after insert ON BOF.HOTMETAL_POURINGS   REFERENCING NEW AS NEW OLD AS OLD
  for each row
DECLARE
  INTJOBNO NUMBER;
BEGIN
  DBMS_JOB.SUBMIT(INTJOBNO
                 ,'pck_Torpedos.TorpPoured(' || TO_CHAR(:NEW.HMPOURING_ID) || ',' ||
                  TO_CHAR(:NEW.CHGL_ID) || ');'
                 ,SYSDATE
                 ,NULL
                 ,FALSE);

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES_WITHOUT_COMMIT('TR_Pours_obsrv error: HMPOURING_ID=' || :NEW.HMPOURING_ID ||
                                   ', CHGL_ID=' || :NEW.CHGL_ID || '  ' ||
                                   DBMS_UTILITY.FORMAT_ERROR_STACK
                                  ,'TRG_NEW_LADLES_OPCH'
                                  ,1);
END TR_POURS_OBSRV;
/


CREATE OR REPLACE TRIGGER BOF.TR_SAMM_TC_STAT
  after update OF "HEAT_ID" on heat_act  
  for each row
DECLARE
  VMSG     VARCHAR2(64);
  INTJOBNO NUMBER;
BEGIN
  IF (:OLD.HEAT_ID <> :NEW.HEAT_ID) THEN
    DBMS_JOB.SUBMIT(INTJOBNO
                   ,'StatProcs.Set_TC_Hit(' || TO_CHAR(:OLD.HEAT_ID) || ');' ||
                    'StatProcs.Set_BA_in_Heats(' || TO_CHAR(:OLD.HEAT_ID) || ');'
                   ,SYSDATE + 14 / 86400
                   ,NULL
                   ,FALSE);
    --       TRACE.TRACE_MES('K'||:old.cv_no||' '||:old.heat_id ||'-->'|| :new.heat_id ||',start Set_TC_Hit for '
    --          ||:old.heat_id
    --          ,0);
    -- Добавлена 23.04.2010 для RHI
    IF (:NEW.HEAT_ID <> 2703) THEN
      BEGIN
        -- отдельный блок,чтобы остальное выполнялось всегда!!
        VMSG := 'NEWHEAT;' || TO_CHAR(:NEW.HEAT_ID) || ';';
        DBMS_ALERT.SIGNAL('sendRHI', VMSG);
      
        --('TR_HEATEV by sendRHI CHAW: heat_id=' ||:new.heat_id 
        --                  ||' vmsg '|| vmsg, 'TRIGGERS.LOG',0);
      
      EXCEPTION
        WHEN OTHERS THEN
          TRACE.TRACE_MES('TR_SAMM_TC_STAT error by sendRHI: heat_id=' || :NEW.HEAT_ID || '  ' ||
                          DBMS_UTILITY.FORMAT_ERROR_STACK
                         ,'TRIGGERS.LOG'
                         ,0);
      END;
    END IF;
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES('Exception on TR_SAMM_TC_STAT: ' || :OLD.HEAT_ID || '-->' || :NEW.HEAT_ID || ' ' ||
                    DBMS_UTILITY.FORMAT_ERROR_STACK
                   ,'TRIGGERS.LOG'
                   ,0);
  
END;
/


CREATE OR REPLACE TRIGGER BOF."TR_Ctrl_MESS_LADLELVL" AFTER INSERT ON "MESS_LADLELVL" FOR EACH ROW
DECLARE
  V_ERRCODE NUMBER;
  V_ERRTEXT VARCHAR2(150);
BEGIN
  UPDATE KRANECTRL
     SET LASTDATARECEIVED = SYSDATE, ROWSWITHOUTIDENTIFIC = ROWSWITHOUTIDENTIFIC + 1
   WHERE ID = 2;

EXCEPTION
  WHEN OTHERS THEN
    V_ERRCODE := SQLCODE;
    V_ERRTEXT := SUBSTR(SQLERRM, 1, 150);
    TRACE_LOG.LOGGER('TR_Ctrl_MESS_LADLELVL: ' || V_ERRTEXT, 'TRIGGERS.LOG');
END;
/


CREATE OR REPLACE TRIGGER BOF."TR_Ctrl_SCRAP_KRAN" AFTER INSERT ON "SCRAP_BUCKETS_KRAN" FOR EACH ROW
DECLARE
BEGIN
   update KRANECTRL set LASTDATARECEIVED=sysdate,ROWSWITHOUTIDENTIFIC =ROWSWITHOUTIDENTIFIC+1
      where ID=0;

   Exception
      When others then
      TRACE.TRACE_MES_WITHOUT_COMMIT('TR_Ctrl_SCRAP_KRAN: ' ||DBMS_UTILITY.FORMAT_ERROR_STACK, 'TRIGGERS.LOG',1);
END;
/


CREATE OR REPLACE TRIGGER BOF."TR_Ctrl_SCRAP_KRAN_Upd" AFTER update
OF "NETTO","NETTO_TIME"
ON "SCRAP_BUCKETS_KRAN" FOR EACH ROW
DECLARE
BEGIN
   update KRANECTRL set LASTDATARECEIVED=sysdate
      where ID=0;

   Exception
      When others then
      TRACE.TRACE_MES_WITHOUT_COMMIT('TR_Ctrl_SCRAP_KRAN_Upd: ' ||v_ErrText, 'TRIGGERS.LOG',1);
END;
/


CREATE OR REPLACE TRIGGER BOF.TRG_NSI_Fetting
BEFORE INSERT ON BOF.NSI_FITTING FOR EACH ROW
DECLARE

BEGIN
  IF :NEW.FITTING_ID IS NULL THEN
    SELECT NSI_FITTING_SEQ.NEXTVAL INTO :NEW.FITTING_ID FROM DUAL;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF."TR_Ctrl_SCRAP_KRAN_Id" AFTER UPDATE OF "HEAT_ID" ON "SCRAP_BUCKETS_KRAN" FOR EACH ROW
DECLARE
BEGIN
  UPDATE KRANECTRL SET LASTIDENTTOHEAT = SYSDATE, ROWSWITHOUTIDENTIFIC = 0 WHERE ID = 0;

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES_WITHOUT_COMMIT('TR_Ctrl_SCRAP_KRAN_Id: ' || V_ERRTEXT, 'TRIGGERS.LOG', 1);
END;
/


CREATE OR REPLACE TRIGGER BOF.TRG_LADLES_OPCH_BIU
BEFORE INSERT OR UPDATE ON BOF.LADLES_OPCH REFERENCING NEW AS NEW OLD AS OLD
--    after INSERT or update ON BOF.LADLES_OPCH   REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  TYPE ITEMMIXANALLI IS RECORD(
     DTANAL      DATE
    ,ITLC_NO     NUMBER
    ,ITLC_WEIGHT NUMBER
    ,C           NUMBER
    ,SI          NUMBER
    ,MN          NUMBER
    ,P           NUMBER
    ,S           NUMBER
    ,TI          NUMBER);
  TYPE TBMIXANALLI_TYPE IS TABLE OF ITEMMIXANALLI INDEX BY BINARY_INTEGER;
  TORPSUMM    ITEMMIXANALLI;
  TBMIXANALLI TBMIXANALLI_TYPE;
  RCXIM       TORPEDOS%ROWTYPE;
  ITBCNT      NUMBER := 0;
  NEWCHGL_ID  NUMBER;
  SP          VARCHAR2(128);
  ICNT        NUMBER;
  VISIBLENO   NUMBER;
  VISIBLEID   NUMBER;
  CURSOR CRSGETTORPANAL(IMUSTTLC_NO IN NUMBER) IS
    SELECT *
      FROM TORPEDOS T
     WHERE T.TLC_NO = IMUSTTLC_NO
       AND T.INSERTTIME = (SELECT MAX(INSERTTIME) FROM TORPEDOS UT WHERE UT.TLC_NO = IMUSTTLC_NO);
  CURSOR CURGETVISIBLELADLES IS
    SELECT HM.CHGL_NO
          ,HM.CHGL_ID
      FROM HOTMETAL_LADLES HM
     WHERE HM.VISIBLEONL1 > 0
     ORDER BY HM.LAST_POURINGTIME DESC;
BEGIN
  IF :NEW.LADLES_OPCH_ID IS NULL THEN
    SELECT SEQ_LADLES_OPCH.NEXTVAL INTO :NEW.LADLES_OPCH_ID FROM DUAL;
  END IF;

  IF :NEW.VES_KOVSH > .27 AND -- fool prof такие записи есть, сам видел!
     ((:NEW.MIX1 > 0 AND :NEW.MIX1_VES > .27) OR (:NEW.MIX2 > 0 AND :NEW.MIX2_VES > .27) OR
     (:NEW.MIX3 > 0 AND :NEW.MIX3_VES > .27)) THEN
  
    IF :NEW.TEMP > 9999 THEN
      TRACE.TRACE_MES_WITHOUT_COMMIT('LADLES_OPCH_ID=' || :NEW.LADLES_OPCH_ID ||
                                     ' Данные недостоверны,TEMP ' || :NEW.TEMP
                                    ,'TRG_NEW_LADLES_OPCH'
                                    ,1);
      :NEW.TEMP := 9999;
    END IF;
  
    INSERT INTO HOTMETAL_LADLES
      (CHGL_ID,
       CHGL_NO,
       STATUS,
       HM_TEMP,
       HM_WEIGHT,
       TEMP_SOURCE,
       WEIGHT_SOURCE,
       ANA_SOURCE,
       FIRST_POURINGTIME,
       LAST_POURINGTIME,
       DP_KOVSH_CHUG_ID,
       VISIBLEONL1)
    VALUES
      (HMLADLES_SEQ.NEXTVAL,
       :NEW.KOVSH_NUM,
       'EMPY',
       :NEW.TEMP,
       :NEW.VES_KOVSH * 1000,
       'BAS',
       'BAS',
       'PRC',
       :NEW.DTIME,
       :NEW.DTIME,
       :NEW.DP_KOVSH_CHUG_ID,
       1)
    RETURNING CHGL_ID INTO NEWCHGL_ID;
  
    SP   := '';
    ICNT := 0;
    OPEN CURGETVISIBLELADLES; -- глянем, сколько д.б. в L1
    LOOP
      FETCH CURGETVISIBLELADLES
        INTO VISIBLENO
            ,VISIBLEID;
      EXIT WHEN CURGETVISIBLELADLES%NOTFOUND;
      IF LENGTH(SP) > 0 THEN
        SP := SP || ',';
      END IF;
      SP   := SP || '(' || VISIBLENO || ',' || VISIBLEID || ')';
      ICNT := ICNT + 1;
      EXIT WHEN ICNT > 5;
    END LOOP;
    CLOSE CURGETVISIBLELADLES;
    IF SP IS NULL THEN
      SP := 'нет';
    END IF;
    TRACE.TRACE_MES_WITHOUT_COMMIT('TRG_NEW_LADLES_OPCH: новый ковш ' || :NEW.KOVSH_NUM ||
                                   ' CHGL_ID ' || NEWCHGL_ID || ' налит ' ||
                                   TO_CHAR(:NEW.DTIME, 'dd.mm.yyyy hh24:mi:ss') ||
                                   ' DP_KOVSH_CHUG_ID ' || :NEW.DP_KOVSH_CHUG_ID || ' видимы L1: ' || SP
                                  ,'TRG_NEW_LADLES_OPCH'
                                  ,0);
  
    IF (:NEW.MIX1 > 0 AND :NEW.MIX1_VES > .27) THEN
      OPEN CRSGETTORPANAL(:NEW.MIX1); -- get chemie
      FETCH CRSGETTORPANAL
        INTO RCXIM;
      CLOSE CRSGETTORPANAL;
    
      INSERT INTO HOTMETAL_POURINGS
        (HMPOURING_ID, POURINGTIME, TLC_ID, TLC_NO, CHGL_ID, WEIGHT)
      VALUES
        (HMPOURING_SEQ.NEXTVAL,
         :NEW.DTIME,
         RCXIM.TLC_ID,
         :NEW.MIX1,
         NEWCHGL_ID,
         :NEW.MIX1_VES * 1000);
    
      TBMIXANALLI(ITBCNT).ITLC_NO := :NEW.MIX1;
      TBMIXANALLI(ITBCNT).ITLC_WEIGHT := :NEW.MIX1_VES * 1000;
    
      IF RCXIM.TLC_ID IS NOT NULL THEN
        TBMIXANALLI(ITBCNT).C := RCXIM.ANA_C;
        TBMIXANALLI(ITBCNT).SI := RCXIM.ANA_SI;
        TBMIXANALLI(ITBCNT).MN := RCXIM.ANA_MN;
        TBMIXANALLI(ITBCNT).P := RCXIM.ANA_P;
        TBMIXANALLI(ITBCNT).S := RCXIM.ANA_S;
        TBMIXANALLI(ITBCNT).TI := RCXIM.ANA_TI;
        ITBCNT := ITBCNT + 1;
      END IF;
    END IF;
  
    IF (:NEW.MIX2 > 0 AND :NEW.MIX2_VES > .27) THEN
      OPEN CRSGETTORPANAL(:NEW.MIX2); -- get chemie
      FETCH CRSGETTORPANAL
        INTO RCXIM;
      CLOSE CRSGETTORPANAL;
    
      INSERT INTO HOTMETAL_POURINGS
        (HMPOURING_ID, POURINGTIME, TLC_ID, TLC_NO, CHGL_ID, WEIGHT)
      VALUES
        (HMPOURING_SEQ.NEXTVAL,
         :NEW.DTIME,
         RCXIM.TLC_ID,
         :NEW.MIX2,
         NEWCHGL_ID,
         :NEW.MIX2_VES * 1000);
    
      TBMIXANALLI(ITBCNT).ITLC_NO := :NEW.MIX2;
      TBMIXANALLI(ITBCNT).ITLC_WEIGHT := :NEW.MIX2_VES * 1000;
    
      IF RCXIM.TLC_ID IS NOT NULL THEN
        TBMIXANALLI(ITBCNT).C := RCXIM.ANA_C;
        TBMIXANALLI(ITBCNT).SI := RCXIM.ANA_SI;
        TBMIXANALLI(ITBCNT).MN := RCXIM.ANA_MN;
        TBMIXANALLI(ITBCNT).P := RCXIM.ANA_P;
        TBMIXANALLI(ITBCNT).S := RCXIM.ANA_S;
        TBMIXANALLI(ITBCNT).TI := RCXIM.ANA_TI;
        ITBCNT := ITBCNT + 1;
      END IF;
    END IF;
  
    IF (:NEW.MIX3 > 0 AND :NEW.MIX3_VES > .27) THEN
      OPEN CRSGETTORPANAL(:NEW.MIX3); -- get chemie
      FETCH CRSGETTORPANAL
        INTO RCXIM;
      CLOSE CRSGETTORPANAL;
    
      INSERT INTO HOTMETAL_POURINGS
        (HMPOURING_ID, POURINGTIME, TLC_ID, TLC_NO, CHGL_ID, WEIGHT)
      VALUES
        (HMPOURING_SEQ.NEXTVAL,
         :NEW.DTIME,
         RCXIM.TLC_ID,
         :NEW.MIX3,
         NEWCHGL_ID,
         :NEW.MIX3_VES * 1000);
    
      TBMIXANALLI(ITBCNT).ITLC_NO := :NEW.MIX3;
      TBMIXANALLI(ITBCNT).ITLC_WEIGHT := :NEW.MIX3_VES * 1000;
    
      IF RCXIM.TLC_ID IS NOT NULL THEN
        TBMIXANALLI(ITBCNT).C := RCXIM.ANA_C;
        TBMIXANALLI(ITBCNT).SI := RCXIM.ANA_SI;
        TBMIXANALLI(ITBCNT).MN := RCXIM.ANA_MN;
        TBMIXANALLI(ITBCNT).P := RCXIM.ANA_P;
        TBMIXANALLI(ITBCNT).S := RCXIM.ANA_S;
        TBMIXANALLI(ITBCNT).TI := RCXIM.ANA_TI;
      END IF;
    END IF;
  
    -- Опрделим средневзвешенную по весу химию
    FOR I IN TBMIXANALLI.FIRST .. TBMIXANALLI.LAST
    LOOP
      IF TBMIXANALLI(I).ITLC_NO IS NOT NULL AND NVL(TBMIXANALLI(I).ITLC_WEIGHT, 0) > 0 THEN
        TORPSUMM.ITLC_WEIGHT := NVL(TORPSUMM.ITLC_WEIGHT, 0) + TBMIXANALLI(I).ITLC_WEIGHT;
        TORPSUMM.C           := NVL(TORPSUMM.C, 0) + TBMIXANALLI(I).ITLC_WEIGHT * TBMIXANALLI(I).C;
        TORPSUMM.SI          := NVL(TORPSUMM.SI, 0) + TBMIXANALLI(I)
                               .ITLC_WEIGHT * TBMIXANALLI(I).SI;
        TORPSUMM.MN          := NVL(TORPSUMM.MN, 0) + TBMIXANALLI(I)
                               .ITLC_WEIGHT * TBMIXANALLI(I).MN;
        TORPSUMM.P           := NVL(TORPSUMM.P, 0) + TBMIXANALLI(I).ITLC_WEIGHT * TBMIXANALLI(I).P;
        TORPSUMM.S           := NVL(TORPSUMM.S, 0) + TBMIXANALLI(I).ITLC_WEIGHT * TBMIXANALLI(I).S;
        TORPSUMM.TI          := NVL(TORPSUMM.TI, 0) + TBMIXANALLI(I)
                               .ITLC_WEIGHT * TBMIXANALLI(I).TI;
      END IF;
    END LOOP;
  
    UPDATE HOTMETAL_LADLES L
       SET L.ANA_C  = ROUND(TORPSUMM.C / TORPSUMM.ITLC_WEIGHT, 2),
           L.ANA_SI = ROUND(TORPSUMM.SI / TORPSUMM.ITLC_WEIGHT, 2),
           L.ANA_MN = ROUND(TORPSUMM.MN / TORPSUMM.ITLC_WEIGHT, 3),
           L.ANA_P  = ROUND(TORPSUMM.P / TORPSUMM.ITLC_WEIGHT, 4),
           L.ANA_S  = ROUND(TORPSUMM.S / TORPSUMM.ITLC_WEIGHT, 3),
           L.ANA_TI = ROUND(TORPSUMM.TI / TORPSUMM.ITLC_WEIGHT, 4)
     WHERE L.CHGL_ID = NEWCHGL_ID;
  ELSE
    TRACE.TRACE_MES_WITHOUT_COMMIT('LADLES_OPCH_ID=' || :NEW.LADLES_OPCH_ID ||
                                   ' Данные недостоверны,VES_KOVSH ' || :NEW.VES_KOVSH
                                  ,'TRG_NEW_LADLES_OPCH'
                                  ,1);
  END IF;
  :NEW.PRR := 1;

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES_WITHOUT_COMMIT('LADLES_OPCH_ID=' || :NEW.LADLES_OPCH_ID || ' ERR: ' ||
                                   DBMS_UTILITY.FORMAT_ERROR_STACK
                                  ,'TRG_NEW_LADLES_OPCH'
                                  ,1);
END TRG_LADLES_OPCH_BIU;
/


CREATE OR REPLACE TRIGGER BOF.TRG_SENDTOPIPE2
  AFTER UPDATE OF ANA_C, ANA_SI, ANA_MN, ANA_P, ANA_S, ANA_TI, VISIBLEONL1 ON BOF.HOTMETAL_LADLES  
  FOR EACH ROW
DECLARE
  SHEATNO VARCHAR2(7) := '0000000';
  NJOB    BINARY_INTEGER;
  SSQL    VARCHAR2(500);
BEGIN
  -- Сигнал о налитых ковшах с чугуном
  SSQL := 'DBMS_APPLICATION_INFO.SET_ACTION(''Сигнал о налитых ковшах с чугуном'');' || CHR(10) ||
          'PCK_PIPE.PSEND_MESSAGE(''' || SHEATNO || ''', ' || :NEW.CHGL_ID || ', ' ||
          '''PCK_DATA.PGET_LADLEIRON''' || ');';
  DBMS_JOB.SUBMIT(NJOB, SSQL, SYSDATE + 1 / (24 * 60 * 60), NULL, FALSE);

  -- Последние 8 миксеров
  SSQL := 'DBMS_APPLICATION_INFO.SET_ACTION(''Сигнал о налитых ковшах с чугуном'');' || CHR(10) ||
          'PCK_PIPE.PSEND_MESSAGE(''' || SHEATNO || ''', ' || :NEW.CHGL_ID || ', ' ||
          '''PCK_DATA.PGET_MIXCHEMICAL''' || ');';
  DBMS_JOB.SUBMIT(NJOB, SSQL, SYSDATE + 2 / (24 * 60 * 60), NULL, FALSE);

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES('CHGL_ID=' || :NEW.CHGL_ID || ' ERR=' || DBMS_UTILITY.FORMAT_ERROR_STACK
                   ,'TRG_SENDTOPIPE2'
                   ,1);
  
END TRG_SENDTOPIPE2;
/


CREATE OR REPLACE TRIGGER BOF.TR_HO_GRADEID_CHANGED
  AFTER UPDATE  ON BOF.HEATORDERS   FOR EACH ROW
DECLARE
  VMSG VARCHAR2(128);

  CURSOR CRSSESSIONINFO IS
    SELECT RPAD(REPLACE(SUBSTR(NVL(MACHINE, ' '), 1, 16), CHR(0)), 16) || ' ' ||
           RPAD(REPLACE(SUBSTR(NVL(PROGRAM, ' '), 1, 16), CHR(0)), 13) SESSION_INFO
      FROM SYS.V_$SESSION
     WHERE AUDSID = USERENV('SESSIONID');

BEGIN
  update heats h set h.grade_id = :new.Grade_Id where H.HO_ID = :new.ho_id;
EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES_WITHOUT_COMMIT('TR_HO_GRADEID_CHANGED ho_id=' ||
                                   :new.ho_id || '  ' || DBMS_UTILITY.FORMAT_ERROR_STACK
                                  ,'TRIGGERS.LOG'
                                  ,1);
END;
/


CREATE OR REPLACE TRIGGER BOF.TRG_MOD_TELEGRAMS
  BEFORE INSERT ON BOF.MODEL_TELEGRAMS   FOR EACH ROW
DECLARE

BEGIN
  IF :NEW.REC_ID IS NULL THEN
    SELECT MOD_TELEGRAMS.NEXTVAL INTO :NEW.REC_ID FROM DUAL;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END TRG_MOD_TELEGRAMS;
/


CREATE OR REPLACE TRIGGER BOF.TR_HEATORDERS_SteelGrade
 AFTER UPDATE OF "STEELGRADE" ON BOF.HEATORDERS FOR EACH ROW
DECLARE
   vmsg  VARCHAR2(128);
   iTROUBLE_ID number;
   rcEvent  heat_act%ROWTYPE;
   v_ErrText VARCHAR2(150);

    CURSOR crsSessionInfo IS
    SELECT
       RPAD(REPLACE(SUBSTR(NVL(MACHINE,' '),1,16),CHR(0)),16)
       ||' '
       || RPAD(REPLACE(SUBSTR(NVL(PROGRAM,' '),1,16),CHR(0)),13) SESSION_INFO
    FROM
       SYS.V_$SESSION
    WHERE
       AUDSID = USERENV('SESSIONID');
   CURSOR crTroubles IS
      SELECT TROUBLE_ID FROM techtrouble where techtrouble.heat_id = rcEvent.Heat_Id;
   CURSOR proof IS
      SELECT * FROM heat_act where heat_act.ho_id=:new.ho_id;

BEGIN
-- als block definieren,damit das Weitere unbedingt liefe, selbst wenn Exception
   BEGIN
      Open proof;
      LOOP
         FETCH proof INTO rcEvent;
         EXIT WHEN proof%NOTFOUND;     -- damit nur act-bezogene events geschrieben waehren!
                                       -- trying to retrieve executor-info
         Open crsSessionInfo;
         fetch crsSessionInfo into vmsg;
         if crsSessionInfo%NOTFOUND then
            vmsg :='автор неизвестен!';
         end if;
         Close crsSessionInfo;
/*
         TRACE_LOG.LOGGER('TR_HEATORDERS_SteelGrade: '
         ||' '
         ||vmsg
         ||' Heat_Id,No '||rcEvent.heat_id
         ||','
         ||rcEvent.Heat_No
         ||' '
         ||:old.steelgrade
         ||'-->'
         ||:new.steelgrade
         , 'TRIGGERS.LOG');
*/
-- Set a marker if Steelgrade changed/gesichtet were
      Open crTroubles;
      fetch crTroubles into iTROUBLE_ID;
      if crTroubles%NOTFOUND then
         select TROUBLE_SEQ.nextval into iTROUBLE_ID from dual;
         insert INTO
         TECHTROUBLE (Trouble_ID,HEAT_ID)
                        VALUES (iTROUBLE_ID,rcEvent.Heat_Id);
      end if;
      Close crTroubles;
      update TECHTROUBLE set MARKA_WAS_CHANGED=rcEvent.Phase_No
         where Trouble_ID = iTROUBLE_ID;

      END LOOP;
      Close proof;
-- Добавлена 20.04.2010 для RHI
      begin               -- отдельный блок,чтобы остальное выполнялось всегда!!
         vmsg:= 'GRADEINFO;'||TO_CHAR(rcEvent.heat_id)||';';
         dbms_alert.signal ('sendRHI', vmsg);

--TRACE_LOG.LOGGER('TR_HEATORDERS_SteelGrade by sendRHI: heat_id=' ||rcEvent.heat_id
--                  ||' vmsg '|| vmsg, 'TRIGGERS.LOG');

         Exception
            When others then
               v_ErrText:=SUBSTR(SQLERRM,1,150);
               TRACE.TRACE_MES('TR_HEATORDERS_SteelGrade error by sendRHI: heat_id=' ||rcEvent.heat_id ||'  '||DBMS_UTILITY.FORMAT_ERROR_STACK
                   ,'TRIGGERS.LOG'
                   ,1);
      end;

      EXCEPTION
        WHEN OTHERS THEN NULL;
   END;

   EXCEPTION
     WHEN OTHERS THEN NULL;
/*       -- Consider logging the error and then re-raise
       RAISE;
*/
END;
/


CREATE OR REPLACE TRIGGER BOF.VIS_CONFIG
   BEFORE INSERT
   ON BOF.VIS_CONFIG 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.config_id IS NULL
   THEN
      SELECT VISCONFIG_seq.NEXTVAL
        INTO :NEW.config_id
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.TMPL_PERIODS
   BEFORE INSERT
   ON BOF.TMPL_PERIODS 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.PERIOD_ID IS NULL
   THEN
      SELECT PERIODID_seq.NEXTVAL
        INTO :NEW.PERIOD_ID
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.TMPL_STAGES
   BEFORE INSERT
   ON BOF.TMPL_STAGES 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.STAGE_ID IS NULL
   THEN
      SELECT STAGEID_seq.NEXTVAL
        INTO :NEW.STAGE_ID
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.TMPL_TEMPLATE
   BEFORE INSERT
   ON BOF.TMPL_TEMPLATE 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.TEMPLATE_ID IS NULL
   THEN
      SELECT TEMPLATEID_seq.NEXTVAL
        INTO :NEW.TEMPLATE_ID
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.TMPL_STEPS
   BEFORE INSERT
   ON BOF.TMPL_STEPS 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.STEP_ID IS NULL
   THEN
      SELECT STEPID_seq.NEXTVAL
        INTO :NEW.STEP_ID
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.TMPL_PORTIONS
   BEFORE INSERT
   ON BOF.TMPL_PORTIONS 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.PORTION_ID IS NULL
   THEN
      SELECT PORTIONID_seq.NEXTVAL
        INTO :NEW.PORTION_ID
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.VIS_USERS
   BEFORE INSERT
   ON BOF.VIS_USERS 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.USER_ID IS NULL
   THEN
      SELECT USERID_seq.NEXTVAL
        INTO :NEW.USER_ID
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.VIS_ACCESSRULES
   BEFORE INSERT
   ON BOF.VIS_ACCESSRULES 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.RULE_ID IS NULL
   THEN
      SELECT URULEID_seq.NEXTVAL
        INTO :NEW.RULE_ID
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.VIS_MESSAGES
   BEFORE INSERT
   ON BOF.VIS_MESSAGES 
   FOR EACH ROW
DECLARE
BEGIN
   IF :NEW.MESSAGE_ID IS NULL
   THEN
      SELECT MESSAGEID_seq.NEXTVAL
        INTO :NEW.MESSAGE_ID
        FROM DUAL;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/


CREATE OR REPLACE TRIGGER BOF.TR_Heats_GRADEID_CHANGED
  AFTER UPDATE  OF "GRADE_ID" ON BOF.heats    FOR EACH ROW
DECLARE
  VMSG VARCHAR2(128);

  CURSOR CRSSESSIONINFO IS
    SELECT RPAD(REPLACE(SUBSTR(NVL(MACHINE, ' '), 1, 16), CHR(0)), 16) || ' ' ||
           RPAD(REPLACE(SUBSTR(NVL(PROGRAM, ' '), 1, 16), CHR(0)), 13) SESSION_INFO
      FROM SYS.V_$SESSION
     WHERE AUDSID = USERENV('SESSIONID');

BEGIN
    TRACE.TRACE_MES_WITHOUT_COMMIT('TR_Heats_GRADEID_CHANGED heat_id=' ||
                                   :new.heat_id || ' HEAT_NO ' || :new.HEAT_NO|| ' GRADE_ID ' || :old.GRADE_ID|| ' -> ' || :new.GRADE_ID
                                  ,'TR_Heats_GRADEID_CHANGED'
                                  ,0);

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES_WITHOUT_COMMIT('TR_Heats_GRADEID_CHANGED heat_id=' ||
                                   :new.heat_id || '  ' || DBMS_UTILITY.FORMAT_ERROR_STACK
                                  ,'TRIGGERS.LOG'
                                  ,1);
END;
/


CREATE OR REPLACE TRIGGER BOF.TRG_MOD_TRENDS
  BEFORE INSERT ON BOF.MODEL_TRENDS   FOR EACH ROW
DECLARE

BEGIN
  IF :NEW.REC_ID IS NULL THEN
    SELECT MODEL_TRENDS_SEQ.NEXTVAL INTO :NEW.REC_ID FROM DUAL;
  END IF;
  

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END;
/


DROP SYNONYM IDB07.GRADE_SPEC;

CREATE OR REPLACE SYNONYM IDB07.GRADE_SPEC FOR BOF.GRADE_SPEC;


DROP SYNONYM IDB07.HEATORDERS;

CREATE OR REPLACE SYNONYM IDB07.HEATORDERS FOR BOF.HEATORDERS;


DROP SYNONYM IDB07.HEATS;

CREATE OR REPLACE SYNONYM IDB07.HEATS FOR BOF.HEATS;


DROP SYNONYM IDB07.HEATS_ALLERTS;

CREATE OR REPLACE SYNONYM IDB07.HEATS_ALLERTS FOR BOF.HEATS_ALLERTS;


DROP SYNONYM IDB07.HEAT_ACT;

CREATE OR REPLACE SYNONYM IDB07.HEAT_ACT FOR BOF.HEAT_ACT;


DROP SYNONYM IDB07.HEAT_ADDITIONS_ACT;

CREATE OR REPLACE SYNONYM IDB07.HEAT_ADDITIONS_ACT FOR BOF.HEAT_ADDITIONS_ACT;


DROP SYNONYM IDB07.HEAT_ADDITIONS_DOZEN;

CREATE OR REPLACE SYNONYM IDB07.HEAT_ADDITIONS_DOZEN FOR BOF.HEAT_ADDITIONS_DOZEN;


DROP SYNONYM IDB07.HEAT_BATHLEVEL;

CREATE OR REPLACE SYNONYM IDB07.HEAT_BATHLEVEL FOR BOF.HEAT_BATHLEVEL;


DROP SYNONYM IDB07.HEAT_MEASUREMENTS;

CREATE OR REPLACE SYNONYM IDB07.HEAT_MEASUREMENTS FOR BOF.HEAT_MEASUREMENTS;


DROP SYNONYM IDB07.HEAT_PERSONAL;

CREATE OR REPLACE SYNONYM IDB07.HEAT_PERSONAL FOR BOF.HEAT_PERSONAL;


DROP SYNONYM IDB07.HEAT_PHASES;

CREATE OR REPLACE SYNONYM IDB07.HEAT_PHASES FOR BOF.HEAT_PHASES;


DROP SYNONYM IDB07.HEAT_REMARK;

CREATE OR REPLACE SYNONYM IDB07.HEAT_REMARK FOR BOF.HEAT_REMARK;


DROP SYNONYM IDB07.HOTMETAL_LADLES;

CREATE OR REPLACE SYNONYM IDB07.HOTMETAL_LADLES FOR BOF.HOTMETAL_LADLES;


DROP SYNONYM IDB07.HOTMETAL_POURINGS;

CREATE OR REPLACE SYNONYM IDB07.HOTMETAL_POURINGS FOR BOF.HOTMETAL_POURINGS;


DROP SYNONYM IDB07.LADLES_OPCH;

CREATE OR REPLACE SYNONYM IDB07.LADLES_OPCH FOR BOF.LADLES_OPCH;


DROP SYNONYM IDB07.MATERIAL_SPEC;

CREATE OR REPLACE SYNONYM IDB07.MATERIAL_SPEC FOR BOF.MATERIAL_SPEC;


DROP SYNONYM IDB07.MESS_O2INO2;

CREATE OR REPLACE SYNONYM IDB07.MESS_O2INO2 FOR BOF.MESS_O2INO2;


DROP SYNONYM IDB07.PARAMETER_GRADES;

CREATE OR REPLACE SYNONYM IDB07.PARAMETER_GRADES FOR BOF.PARAMETER_GRADES;


DROP SYNONYM IDB07.SCRAP_BUCKETMATS;

CREATE OR REPLACE SYNONYM IDB07.SCRAP_BUCKETMATS FOR BOF.SCRAP_BUCKETMATS;


DROP SYNONYM IDB07.SCRAP_BUCKETS;

CREATE OR REPLACE SYNONYM IDB07.SCRAP_BUCKETS FOR BOF.SCRAP_BUCKETS;


DROP SYNONYM IDB07.STEEL_LADLES;

CREATE OR REPLACE SYNONYM IDB07.STEEL_LADLES FOR BOF.STEEL_LADLES;


DROP SYNONYM IDB07.TORPEDOS;

CREATE OR REPLACE SYNONYM IDB07.TORPEDOS FOR BOF.TORPEDOS;


ALTER TABLE BOF.HEAT_EVENTS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_EVENTS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_EVENTS
(
  EVENT_ID   NUMBER                             NOT NULL,
  HEAT_ID    NUMBER                             NOT NULL,
  TYPE       VARCHAR2(4 BYTE)                   NOT NULL,
  EVENTTIME  DATE                               NOT NULL,
  PAR_NAME1  VARCHAR2(32 BYTE),
  VALUE1     NUMBER,
  PAR_NAME2  VARCHAR2(32 BYTE),
  VALUE2     NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          50M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.HEAT_EVENTS.EVENT_ID IS 'Id';

COMMENT ON COLUMN BOF.HEAT_EVENTS.HEAT_ID IS 'Id плавки';

COMMENT ON COLUMN BOF.HEAT_EVENTS.TYPE IS 'Тип события';

COMMENT ON COLUMN BOF.HEAT_EVENTS.EVENTTIME IS 'Дата события';

COMMENT ON COLUMN BOF.HEAT_EVENTS.PAR_NAME1 IS 'Имя параметра №1';

COMMENT ON COLUMN BOF.HEAT_EVENTS.VALUE1 IS 'Значение параметра №1';

COMMENT ON COLUMN BOF.HEAT_EVENTS.PAR_NAME2 IS 'Имя параметра №2';

COMMENT ON COLUMN BOF.HEAT_EVENTS.VALUE2 IS 'Значение параметра №2';



ALTER TABLE BOF.HEAT_HOTMETAL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEAT_HOTMETAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEAT_HOTMETAL
(
  HEATHM_ID         NUMBER                      NOT NULL,
  HEAT_ID           NUMBER                      NOT NULL,
  CHGL_ID           NUMBER                      NOT NULL,
  UPDATETIME        DATE,
  WEIGHT            NUMBER(6),
  TEMP              NUMBER(4),
  CHGTIME           DATE,
  KRAN_TIME         DATE,
  T_CRANE           NUMBER(3),
  NETTO             NUMBER,
  KRANE_COMMENT     VARCHAR2(255 BYTE),
  DTDESULFSTART     DATE,
  DESULFDURATION    NUMBER,
  S_BEFORE          NUMBER,
  S_AFTER           NUMBER,
  USED_ID_ROW       NUMBER,
  IDKOVSH           NUMBER,
  RTARE             NUMBER,
  T_FIX             VARCHAR2(1 BYTE),
  T_TARE            NUMBER,
  B_CRANE           INTEGER,
  B_BRUT            NUMBER,
  B_DATE            DATE,
  PHASE             INTEGER,
  VESSEL            INTEGER,
  LADLE             INTEGER,
  TARA_TIME         DATE,
  SERIAL            NUMBER,
  KZWEIGHTFROMKRAN  INTEGER                     DEFAULT 1,
  WEIGHT_MAN        NUMBER(6),
  STANDWEIGHT       NUMBER,
  NETTO_RADAR       NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          7M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEAT_HOTMETAL IS 'Таблица данных по чугуну на плавку';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.HEATHM_ID IS 'Уникальный Id';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.HEAT_ID IS 'HEAT_ID';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.CHGL_ID IS 'Id чугуновозного ковша';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.UPDATETIME IS 'момент обновления';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.WEIGHT IS 'вес';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.TEMP IS 'температура';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.CHGTIME IS 'момент заливки';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.KRAN_TIME IS 'Время взвешивания по часам наземной станции';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.T_CRANE IS 'Номер крана';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.NETTO IS 'Вес слитого чугуна';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.KRANE_COMMENT IS 'Замечания по качеству данных';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.DTDESULFSTART IS 'Момент начала десульфурации';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.DESULFDURATION IS 'Время, сек';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.S_BEFORE IS '[S] до обессеривания';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.S_AFTER IS '[S] после обессеривания';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.USED_ID_ROW IS 'использованный номер строки для АСУП';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.IDKOVSH IS 'Берется из Ladles IdKovsh при INSERT = DP_KOVSH_CHUG_ID из ds_main@texno';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.RTARE IS 'тара';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.T_FIX IS 'Признак принудительного замера с фиксированной тарой (*или blank)';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.T_TARE IS 'тара';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.B_CRANE IS 'кран';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.B_BRUT IS 'брутто';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.B_DATE IS 'момент взвешивания';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.PHASE IS 'фаза';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.VESSEL IS 'номер конвертера с крана';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.LADLE IS 'номер ковша с крана';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.TARA_TIME IS 'момент тарирования';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.SERIAL IS 'Из DBF наземной станции';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.KZWEIGHTFROMKRAN IS '0: вес с крана, NULL/1: придумано на переливе';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.WEIGHT_MAN IS 'Вес с перелива,если был переписан весом с крана';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.STANDWEIGHT IS 'Вес чугуна по радару НТЦ';

COMMENT ON COLUMN BOF.HEAT_HOTMETAL.NETTO_RADAR IS 'параметр с радара перелива';



ALTER TABLE BOF.HEATS_LADLES
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATS_LADLES CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATS_LADLES
(
  HM_ID    NUMBER                               NOT NULL,
  CHGL_ID  NUMBER,
  CHGTIME  DATE,
  HEAT_NO  VARCHAR2(7 BYTE),
  CHGL_NO  VARCHAR2(2 BYTE)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEATS_LADLES IS 'Таблица используемых чугуновозных ковшей на плавку';

COMMENT ON COLUMN BOF.HEATS_LADLES.HM_ID IS 'sequence HM_SEQ';

COMMENT ON COLUMN BOF.HEATS_LADLES.CHGL_ID IS 'Id чугуновозного ковша';

COMMENT ON COLUMN BOF.HEATS_LADLES.CHGTIME IS 'момент заливки';

COMMENT ON COLUMN BOF.HEATS_LADLES.HEAT_NO IS 'номер плавки';

COMMENT ON COLUMN BOF.HEATS_LADLES.CHGL_NO IS 'номер ковша';



ALTER TABLE BOF.HEATS_TORPEDOS
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.HEATS_TORPEDOS CASCADE CONSTRAINTS;

CREATE TABLE BOF.HEATS_TORPEDOS
(
  TLC_ID       NUMBER                           NOT NULL,
  TLC_NO       VARCHAR2(2 BYTE),
  CHGL_ID      NUMBER,
  ANA_C        FLOAT(126),
  ANA_SI       FLOAT(126),
  ANA_MN       FLOAT(126),
  ANA_P        FLOAT(126),
  ANA_S        FLOAT(126),
  WEIGHT       NUMBER(6),
  POURINGTIME  DATE
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          3M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.HEATS_TORPEDOS IS 'Таблица используемых миксеров в чугуновозный ковш ("наливки" в ковш)';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.TLC_ID IS 'sequence TORP_SEQ';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.TLC_NO IS 'номер миксера';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.CHGL_ID IS 'Id ковша';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.ANA_C IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.ANA_SI IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.ANA_MN IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.ANA_P IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.ANA_S IS 'анализ чугуна';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.WEIGHT IS 'вес';

COMMENT ON COLUMN BOF.HEATS_TORPEDOS.POURINGTIME IS 'момент наливки';



ALTER TABLE BOF.PERSONAL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.PERSONAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.PERSONAL
(
  PERSONAL_ID  NUMBER                           NOT NULL,
  NAME         VARCHAR2(30 BYTE)                NOT NULL,
  TEAM_NAME    VARCHAR2(1 BYTE)                 NOT NULL,
  JOB_ID       NUMBER                           NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.PERSONAL.PERSONAL_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.PERSONAL.NAME IS 'наименование';

COMMENT ON COLUMN BOF.PERSONAL.TEAM_NAME IS 'номер бригады';

COMMENT ON COLUMN BOF.PERSONAL.JOB_ID IS 'номер специальности';



ALTER TABLE BOF.SHIFT_CALENDAR
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.SHIFT_CALENDAR CASCADE CONSTRAINTS;

CREATE TABLE BOF.SHIFT_CALENDAR
(
  SHIFT_ID    NUMBER(1)                         NOT NULL,
  START_TIME  DATE                              NOT NULL,
  END_TIME    DATE                              NOT NULL,
  SHIFT_NAME  VARCHAR2(20 BYTE)                 NOT NULL,
  TEAM_NAME   VARCHAR2(1 BYTE)                  NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.SHIFT_CALENDAR.SHIFT_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SHIFT_CALENDAR.START_TIME IS 'момент начала';

COMMENT ON COLUMN BOF.SHIFT_CALENDAR.END_TIME IS 'момент конца';

COMMENT ON COLUMN BOF.SHIFT_CALENDAR.SHIFT_NAME IS 'наименование смены';

COMMENT ON COLUMN BOF.SHIFT_CALENDAR.TEAM_NAME IS 'номер бригады';



DROP TABLE BOF.SHIFT_PERSONAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.SHIFT_PERSONAL
(
  SHIFT_ID     NUMBER(1)                        NOT NULL,
  JOB_ID       NUMBER                           NOT NULL,
  PERSONAL_ID  NUMBER                           NOT NULL
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          256K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN BOF.SHIFT_PERSONAL.SHIFT_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.SHIFT_PERSONAL.JOB_ID IS 'номер бригады';

COMMENT ON COLUMN BOF.SHIFT_PERSONAL.PERSONAL_ID IS 'Id персонала';



ALTER TABLE BOF.TB_PERSONAL
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TB_PERSONAL CASCADE CONSTRAINTS;

CREATE TABLE BOF.TB_PERSONAL
(
  PERSONAL_ID  NUMBER                           NOT NULL,
  NAME         VARCHAR2(30 BYTE)                NOT NULL,
  TEAM_NAME    CHAR(1 BYTE),
  JOB_ID       NUMBER
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TB_PERSONAL IS 'Таблицы учета сменного персонала (ФИО по бригадам)';

COMMENT ON COLUMN BOF.TB_PERSONAL.PERSONAL_ID IS 'уникальный Id';

COMMENT ON COLUMN BOF.TB_PERSONAL.NAME IS 'наименования';

COMMENT ON COLUMN BOF.TB_PERSONAL.TEAM_NAME IS 'номер бригады';

COMMENT ON COLUMN BOF.TB_PERSONAL.JOB_ID IS 'Id профессии';



ALTER TABLE BOF.TB_SHIFT_ROTATION
 DROP PRIMARY KEY CASCADE;

DROP TABLE BOF.TB_SHIFT_ROTATION CASCADE CONSTRAINTS;

CREATE TABLE BOF.TB_SHIFT_ROTATION
(
  SEQUENCE   NUMBER                             NOT NULL,
  TEAM_NAME  CHAR(1 BYTE)                       NOT NULL,
  NEXT       NUMBER(1)
)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE BOF.TB_SHIFT_ROTATION IS 'Таблицы учета сменного персонала (порядок смен)';

COMMENT ON COLUMN BOF.TB_SHIFT_ROTATION.SEQUENCE IS 'уникальный Id';

COMMENT ON COLUMN BOF.TB_SHIFT_ROTATION.TEAM_NAME IS 'наименование';

COMMENT ON COLUMN BOF.TB_SHIFT_ROTATION.NEXT IS 'признак следующей смены';



CREATE INDEX BOF.HTEVE_EVT ON BOF.HEAT_EVENTS
(EVENTTIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          50M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTEVE_HEATID ON BOF.HEAT_EVENTS
(HEAT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          62M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTEVE_PK ON BOF.HEAT_EVENTS
(EVENT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          23M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX BOF.HTHM_BY_CHGL ON BOF.HEAT_HOTMETAL
(CHGL_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          2M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTHM_PK ON BOF.HEAT_HOTMETAL
(HEATHM_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.HTLADLES_PK ON BOF.HEATS_LADLES
(HM_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          640K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PERSONAL_PK ON BOF.PERSONAL
(PERSONAL_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_PERSONAL ON BOF.TB_PERSONAL
(PERSONAL_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.PK_SHIFT_ROTATION ON BOF.TB_SHIFT_ROTATION
(SEQUENCE)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.SC_PK ON BOF.SHIFT_CALENDAR
(SHIFT_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          128K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX BOF.TRP_PK ON BOF.HEATS_TORPEDOS
(TLC_ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          896K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER BOF.tr_heatev
   AFTER INSERT OR UPDATE
   ON BOF.HEAT_EVENTS    REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
  -- local variables here
  V_OP         VARCHAR2(8);
  VMSG         VARCHAR2(64);
  IHEATID      NUMBER;
  IBLASENSID   NUMBER;
  SHEAT_NO     VARCHAR2(8);
  ISHIFTID     NUMBER;
  SBRIGSOLL    VARCHAR2(1);
  SBRIGIST     VARCHAR2(1);
  ISTD         NUMBER;
  IMIN         NUMBER;
  V_SHIFT      VARCHAR2(128);
  SJOBBODY     VARCHAR2(128);
  INTJOBNO     NUMBER;
  IHEAT_FROM   NUMBER;
  IO2VOL       NUMBER;
  COUNT_HEAT   NUMBER;
  DTLFD        DATE;
  BERG         BOOLEAN;
  BFORCEUPDATE BOOLEAN := FALSE;
BEGIN
  IF :NEW.HEAT_ID <> 2703 THEN
    IF INSERTING THEN
      V_OP := 'insert';
    END IF;
  
    IF UPDATING THEN
      V_OP := 'update';
    END IF;
  
    BEGIN
      -- оформим блоком со своей обработкой exceptions
      IHEAT_FROM := 0;
    
      IF (:NEW.TYPE = 'TAPE') THEN
        IHEAT_FROM   := 3;
        BFORCEUPDATE := TRUE;
      END IF;
    
      IF (:NEW.TYPE = 'MBLS') THEN
        IHEAT_FROM   := 2;
        BFORCEUPDATE := TRUE;
      END IF;
    
      IF (:NEW.TYPE = 'SMZE') THEN
        IHEAT_FROM   := 4;
        BFORCEUPDATE := TRUE;
      END IF;
    
      IF (:NEW.TYPE = 'DSLE') THEN
        IHEAT_FROM   := 5;
        BFORCEUPDATE := TRUE;
      END IF;
    
      IF (:NEW.TYPE = 'SUBE') THEN
        IHEAT_FROM   := 7;
        BFORCEUPDATE := TRUE;
      END IF;
    
      IF IHEAT_FROM > 0 AND :NEW.HEAT_ID <> 2703 THEN
        --  TRACE.TRACE_MES('Event SMZE ' ||:new.heat_id||', '||:new.type, 'TRIGGERS.LOG');
        UPDATE HEATS_ALLERTS
           SET HEAT_STATUS = 0, HEAT_FROM = IHEAT_FROM, HEAT_DATE = SYSDATE
         WHERE HEAT_ID = :NEW.HEAT_ID;
      
        IF SQL%NOTFOUND THEN
          -- отметки в 'heats_allerts' нет
          BERG := FALSE;
        
          IF (SYSDATE - :NEW.EVENTTIME) <= 3 THEN
            BERG := TRUE;
            -- для НЕ ТЕКУЩИХ: обновление далее 3х дней не бывает !
          ELSE
            -- разрешаем отметку ТЕУЩИХ плавок
            SELECT COUNT(*)
              INTO COUNT_HEAT
              FROM HEAT_ACT
             WHERE :NEW.HEAT_ID IN (SELECT HEAT_ID FROM HEAT_ACT);
          
            IF COUNT_HEAT > 0 THEN
              BERG := TRUE;
            END IF;
          END IF;
        
          IF BERG THEN
            -- отметку делать можно и нужно
            --  sys_trace_pck.trace('Event INSERT INTO HEATS' ||:new.heat_id||','||:new.heat_no, 'TRIGGERS.LOG');
            SELECT HEAT_NO INTO SHEAT_NO FROM HEATS WHERE :NEW.HEAT_ID = HEAT_ID;
          
            INSERT INTO HEATS_ALLERTS
              (HEAT_ID, HEAT_NO, HEAT_STATUS, HEAT_FROM)
            VALUES
              (:NEW.HEAT_ID, SHEAT_NO, 0, IHEAT_FROM);
          END IF;
        END IF;
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        TRACE.TRACE_MES('trig_heatev: ' || :NEW.HEAT_ID || ', ' || :NEW.TYPE || '  ' ||
                        DBMS_UTILITY.FORMAT_ERROR_STACK
                       ,'TRIGGERS.LOG'
                       ,1);
    END;
  
    -- Добавлена 06.06.2003 для коррекции № бригады на переходных плавках
    IF (:NEW.TYPE = 'MBLS' AND :NEW.HEAT_ID <> 2703) THEN
      SELECT TEAM_NAME INTO SBRIGIST FROM HEATS WHERE HEAT_ID = :NEW.HEAT_ID;
    
      SELECT TO_NUMBER(TO_CHAR(:NEW.EVENTTIME - 7 / 1440, 'HH24')) INTO ISTD FROM DUAL;
    
      SELECT TO_NUMBER(TO_CHAR(:NEW.EVENTTIME - 7 / 1440, 'MI')) INTO IMIN FROM DUAL;
    
      V_SHIFT := 'dt_begin ' || TO_CHAR((:NEW.EVENTTIME - 7 / 1440), 'dd.mm.yy hh24.mi.ss');
    
      IF (ISTD = 15) AND (IMIN < 30) THEN
        SELECT SHIFT_ID
              ,TEAM_NAME
          INTO ISHIFTID
              ,SBRIGSOLL
          FROM TB_SHIFT
         WHERE START_TIME =
               (SELECT MAX(START_TIME)
                  FROM TB_SHIFT
                 WHERE START_TIME <= ((:NEW.EVENTTIME - 7 / 1440) - 1 / 24));
      
        V_SHIFT := V_SHIFT || ' (по предидущей смене) ';
      ELSE
        IF (ISTD = 22) AND (IMIN >= 30) THEN
          ISHIFTID := 0;
        
          SELECT TEAM_NAME INTO SBRIGSOLL FROM TB_SHIFT_ROTATION WHERE NEXT = 1;
        
          V_SHIFT := V_SHIFT || ' (по следующей смене) ';
        ELSE
          SELECT SHIFT_ID
                ,TEAM_NAME
            INTO ISHIFTID
                ,SBRIGSOLL
            FROM TB_SHIFT
           WHERE START_TIME = (SELECT MAX(START_TIME)
                                 FROM TB_SHIFT
                                WHERE START_TIME <= (:NEW.EVENTTIME - 7 / 1440));
        END IF;
      END IF;
    
      IF (SBRIGIST > '0' AND SBRIGSOLL > '0') THEN
        IF (SBRIGIST != SBRIGSOLL) THEN
          /*
                      SYS_TRACE_PCK.TRACE('iShiftId='||iShiftId||' heat_id='||:new.heat_id||' sBrigSoll=sBrigIst='||sBrigIst
                         ||' нет замены! '
                         , NULL);
                   else
          */
          /*TRACE.TRACE_MES('iShiftId=' || ISHIFTID || ' heat_id=' || :NEW.HEAT_ID || ' sBrigSoll=' ||
           SBRIGSOLL || ' sBrigIst=' || SBRIGIST || ' меняю на новый ' || V_SHIFT ||
           ' sBrigSoll=' || SBRIGSOLL || ' !'
          ,'TRIGGERS.LOG'
          ,0);*/
        
          UPDATE HEATS SET TEAM_NAME = SBRIGSOLL WHERE HEAT_ID = :NEW.HEAT_ID;
        END IF;
        /* ELSE
        TRACE.TRACE_MES('iShiftId=' || ISHIFTID || ' heat_id=' || :NEW.HEAT_ID || ' sBrigSoll=' ||
                        SBRIGSOLL || ' sBrigIst=' || SBRIGIST || ' контроль бригады невозможен !'
                       ,'TRIGGERS.LOG'
                       ,1);*/
      END IF;
    END IF;
  
    -- Добавлена 17.07.2003 для контроля режима работы фурмы и О2 на главной продувке
    IF (:NEW.TYPE = 'MBLS' AND :NEW.HEAT_ID <> 2703) THEN
      --      TRACE.TRACE_MES('trig_heatev: started Job: ' ||'StatProcs.Set_BA_On_MBLS(' || TO_CHAR(:new.EVENT_ID) ||');', 'TRIGGERS.LOG');
      DBMS_JOB.SUBMIT(INTJOBNO
                     ,'StatProcs.Set_BA_On_MBLS(' || TO_CHAR(:NEW.EVENT_ID) || ');'
                     ,SYSDATE + 14 / 86400
                     ,NULL
                     ,FALSE);
    END IF;
  
    -- Добавлена 20.04.2010 для RHI
    IF (:NEW.TYPE = 'MBLS' AND :NEW.HEAT_ID <> 2703) THEN
      BEGIN
        -- отдельный блок,чтобы остальное выполнялось всегда!!
        VMSG := 'MBLOW;' || TO_CHAR(:NEW.HEAT_ID) || ';';
        DBMS_ALERT.SIGNAL('sendRHI', VMSG);
      
        --TRACE.TRACE_MES('TR_HEATEV by sendRHI MBLS: heat_id=' ||:new.heat_id
        --                  ||' vmsg '|| vmsg, 'TRIGGERS.LOG');
      
      EXCEPTION
        WHEN OTHERS THEN
          TRACE.TRACE_MES('TR_HeatEv error by sendRHI: heat_id=' || :NEW.HEAT_ID || '  ' ||
                          DBMS_UTILITY.FORMAT_ERROR_STACK
                         ,'TRIGGERS.LOG'
                         ,1);
      END;
    
    END IF;
  
    -- Добавлена 22.12.2003 для подсчёта времени сушки
    IF (:NEW.TYPE = 'SCCE' AND :NEW.HEAT_ID <> 2703) THEN
      BFORCEUPDATE := TRUE;
      --      TRACE.TRACE_MES('trig_heatev: started Job: ' ||'StatProcs.Set_BA_On_MBLS(' || TO_CHAR(:new.EVENT_ID) ||');', 'TRIGGERS.LOG');
      DBMS_JOB.SUBMIT(INTJOBNO
                     ,'StatProcs.Set_SCR_Heating(' || TO_CHAR(:NEW.EVENT_ID) || ',3);'
                     ,SYSDATE
                     ,NULL
                     ,FALSE);
    END IF;
    -- Добавлена 20.04.2010 для RHI
    IF (:NEW.TYPE = 'SCCS' AND :NEW.HEAT_ID <> 2703) THEN
      BEGIN
        -- отдельный блок,чтобы остальное выполнялось всегда!!
        VMSG := 'CHARGE;' || TO_CHAR(:NEW.HEAT_ID) || ';';
        DBMS_ALERT.SIGNAL('sendRHI', VMSG);
      
        --TRACE.TRACE_MES('TR_HEATEV by sendRHI SCCS: heat_id=' ||:new.heat_id
        --                  ||' vmsg '|| vmsg, 'TRIGGERS.LOG');
      
      EXCEPTION
        WHEN OTHERS THEN
          TRACE.TRACE_MES('TR_HeatEv error by sendRHI: heat_id=' || :NEW.HEAT_ID || '  ' ||
                          DBMS_UTILITY.FORMAT_ERROR_STACK
                         ,'TRIGGERS.LOG'
                         ,1);
      END;
    END IF;
  
    IF (:NEW.TYPE = 'HMCS' AND :NEW.HEAT_ID <> 2703) THEN
      BFORCEUPDATE := TRUE;
      --      TRACE.TRACE_MES('trig_heatev: started Job: ' ||'StatProcs.Set_BA_On_MBLS(' || TO_CHAR(:new.EVENT_ID) ||');', 'TRIGGERS.LOG');
      DBMS_JOB.SUBMIT(INTJOBNO
                     ,'StatProcs.Set_SCR_Heating(' || TO_CHAR(:NEW.EVENT_ID) || ',4);'
                     ,SYSDATE + 14 / 86400
                     ,NULL
                     ,FALSE);
    END IF;
  
    IF (:NEW.TYPE = 'MBLS' AND :NEW.HEAT_ID <> 2703) THEN
      --      TRACE.TRACE_MES('trig_heatev: started Job: ' ||'StatProcs.Set_BA_On_MBLS(' || TO_CHAR(:new.EVENT_ID) ||');', 'TRIGGERS.LOG');
      DBMS_JOB.SUBMIT(INTJOBNO
                     ,'StatProcs.Set_SCR_Heating(' || TO_CHAR(:NEW.EVENT_ID) || ',6);'
                     ,SYSDATE + 14 / 86400
                     ,NULL
                     ,FALSE);
    END IF;
  
    -- Added 16.01.2004 Poritski
    IF (:NEW.TYPE = 'MBLS' AND :NEW.HEAT_ID <> 2703) THEN
      --      TRACE.TRACE_MES('trig_heatev: update set DT_BEGIN heat_id=' || TO_CHAR(:new.heat_id), 'TRIGGERS.LOG');
      UPDATE HEATS
         SET DT_BEGIN =
             (:NEW.EVENTTIME - 7 / (60 * 24))
       WHERE HEAT_ID = :NEW.HEAT_ID
         AND (DT_BEGIN IS NULL OR DT_BEGIN < TO_DATE('02.02.1984', 'dd.mm.yyyy'));
      --          SendRDT(10,:new.heat_id,(:NEW.eventtime - 7 / (60 * 24)),null);
      SJOBBODY := 'SendRDT(10,' || TO_CHAR(:NEW.HEAT_ID) || ',to_date(' || CHR(39) ||
                  TO_CHAR((:NEW.EVENTTIME - 7 / (60 * 24)), 'dd.mm.yyyy hh24:mi:ss') || CHR(39) || ',' ||
                  CHR(39) || 'dd.mm.yyyy hh24:mi:ss' || CHR(39) || ')' || ',null);';
      --          TRACE.TRACE_MES('sJobBody on trig_heatev: {' ||sJobBody ||'}', 'TRIGGERS.LOG');
      DBMS_JOB.SUBMIT(INTJOBNO, SJOBBODY, SYSDATE, NULL, FALSE);
    END IF;
    -- Добавлена 20.04.2010 для RHI
    IF (:NEW.TYPE = 'TAPS' AND :NEW.HEAT_ID <> 2703) THEN
      BEGIN
        -- отдельный блок,чтобы остальное выполнялось всегда!!
        VMSG := 'ENDHEAT;' || TO_CHAR(:NEW.HEAT_ID) || ';';
        DBMS_ALERT.SIGNAL('sendRHI', VMSG);
      
        --TRACE.TRACE_MES('TR_HEATEV by sendRHI TAPS: heat_id=' ||:new.heat_id
        --                  ||' vmsg '|| vmsg, 'TRIGGERS.LOG');
      
      EXCEPTION
        WHEN OTHERS THEN
          TRACE.TRACE_MES('TR_HeatEv error by sendRHI: heat_id=' || :NEW.HEAT_ID || '  ' ||
                          DBMS_UTILITY.FORMAT_ERROR_STACK
                         ,'TRIGGERS.LOG'
                         ,1);
      END;
    END IF;
  
    IF (:NEW.TYPE = 'TAPE' AND :NEW.HEAT_ID <> 2703) THEN
      --      TRACE.TRACE_MES('trig_heatev: update set DT_END heat_id=' || TO_CHAR(:new.heat_id), 'TRIGGERS.LOG');
      UPDATE HEATS
         SET DT_END =
             (:NEW.EVENTTIME)
       WHERE HEAT_ID = :NEW.HEAT_ID;
      --          SendRDT(0,:new.heat_id,:new.eventtime,null);
      SJOBBODY := 'SendRDT(0,' || TO_CHAR(:NEW.HEAT_ID) || ',to_date(' || CHR(39) ||
                  TO_CHAR(:NEW.EVENTTIME, 'dd.mm.yyyy hh24:mi:ss') || CHR(39) || ',' || CHR(39) ||
                  'dd.mm.yyyy hh24:mi:ss' || CHR(39) || ')' || ',null);';
      --          TRACE.TRACE_MES('sJobBody on trig_heatev: {' ||sJobBody ||'}', 'TRIGGERS.LOG');
      DBMS_JOB.SUBMIT(INTJOBNO, SJOBBODY, SYSDATE, NULL, FALSE);
    END IF;
  
    IF (:NEW.TYPE = 'CHAW' AND :NEW.HEAT_ID <> 2703) THEN
    
      /*
            select  count(*) into count_heat from heat_events
            where heat_id = :new.heat_id and (type like 'BLO%' or type like 'MBL%');
            if count_heat>0 then
      */
      SELECT DT_RE_CHARGED INTO DTLFD FROM HEATS WHERE HEAT_ID = :NEW.HEAT_ID;
    
      IF DTLFD IS NOT NULL THEN
        SELECT DT_END INTO DTLFD FROM HEATS WHERE HEAT_ID = :NEW.HEAT_ID;
      
        IF DTLFD IS NULL THEN
          BFORCEUPDATE := TRUE;
        
          UPDATE HEATS
             SET DT_END =
                 (:NEW.EVENTTIME)
           WHERE HEAT_ID = :NEW.HEAT_ID
             AND DT_END IS NULL;
        END IF;
      END IF;
    END IF;
  
    -- Добавлена 22.8.2010 для саперов
    IF ((:NEW.TYPE = 'MBLS' OR :NEW.TYPE = 'SCCE' OR :NEW.TYPE = 'HMCE') AND :NEW.HEAT_ID <> 2703) THEN
      --      TRACE.TRACE_MES('trig_heatev: started Job: ' ||'StatProcs.Set_BA_On_MBLS(' || TO_CHAR(:new.EVENT_ID) ||');', 'TRIGGERS.LOG');
      DBMS_JOB.SUBMIT(INTJOBNO
                     ,'SapLegir.pCalc(' || TO_CHAR(:NEW.HEAT_ID) || ',1);'
                     ,SYSDATE + 14 / 86400
                     ,NULL
                     ,FALSE);
      /*         DBMS_JOB.submit (intjobno,
          'SapLegir.pCalc('
       || TO_CHAR (:NEW.Heat_id)
       || ',2);',
       SYSDATE + 14 / 86400,
       NULL,
       FALSE
      ); */
    END IF;
    -- Added 08.07.2005 Poritski
    IF NOT BFORCEUPDATE THEN
      IF (:NEW.TYPE = 'MBLE') OR (:NEW.TYPE LIKE 'BLO%') OR (:NEW.TYPE LIKE 'N2B%') OR
         (:NEW.TYPE LIKE 'SCC%') OR (:NEW.TYPE LIKE 'SUB%') OR (:NEW.TYPE LIKE 'TAP%') OR
         (:NEW.TYPE LIKE 'KR%') THEN
        BFORCEUPDATE := TRUE;
      END IF;
    END IF;
    -- Added 05.09.2005 Poritski
    IF (:NEW.TYPE = 'BLOS' AND :NEW.HEAT_ID <> 2703) THEN
      DBMS_JOB.SUBMIT(INTJOBNO
                     ,'StatProcs.ProofPourBack(' || TO_CHAR(:NEW.EVENT_ID) || ');'
                     ,SYSDATE
                     ,NULL
                     ,FALSE);
    END IF;
  END IF;
  -- Added 17.11.2008 Poritski для ускорения реакции мнемосхемы на критические события
  IF (:NEW.TYPE = 'MBLE') OR (:NEW.TYPE LIKE 'BLO%') OR (:NEW.TYPE LIKE 'N2B%') OR
     (:NEW.TYPE LIKE 'SCC%') OR (:NEW.TYPE LIKE 'SUB%') OR (:NEW.TYPE LIKE 'TAP%') OR
     (:NEW.TYPE LIKE 'KR%') THEN
    BFORCEUPDATE := TRUE;
  END IF;
  -- Added 14.08.2010 Poritski для записи DT_SR_CHARGED текущей и DTNSCCE =SCCE предыдущей плавки на этом конвертере
  IF (:NEW.TYPE = 'SCCE') THEN
    DBMS_JOB.SUBMIT(INTJOBNO
                   ,'StatProcs.setDtNSCCE(' || TO_CHAR(:NEW.HEAT_ID) || ',' || CHR(39) ||
                    TO_CHAR(:NEW.EVENTTIME, 'dd.mm.yyyy hh24.mi.ss') || CHR(39) || ');'
                   ,SYSDATE /* + 14 / 86400*/
                   ,NULL
                   ,FALSE);
    /*      Client := system.sys_trace_pck.vcGetClientId;
          TRACE.TRACE_MES(' changed SCCE ' || client.sKurzClientId  ||' heat_Id ' || :new.Heat_Id
                   ||' param '||chr(39)||:new.par_name1||chr(39)
                   ||' old '||chr(39)||to_char(:old.eventtime,'dd.mm.yyyy hh24.mi.ss')||chr(39)
                   ||' new '||chr(39)||to_char(:new.eventtime,'dd.mm.yyyy hh24.mi.ss')||chr(39)
             , 'TRIGGERS.LOG');
    */
  END IF;

  IF BFORCEUPDATE AND :NEW.HEAT_ID <> 2703 THEN
    UPDATE WEBCACHEKZ SET IKZ0 = NVL(IKZ0, 0) + 1;
    DBMS_JOB.SUBMIT(INTJOBNO
                   ,'DBMS_APPLICATION_INFO.SET_ACTION (' || CHR(39) || 'TR_HEATEV при ' ||
                    :NEW.TYPE || CHR(39) || ');mnemo.SmartRunVorbShowEvents();'
                   ,SYSDATE
                   ,NULL
                   ,FALSE);
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES('trig_heatev: :NEW.heat_id' || :NEW.HEAT_ID || ', ' || :NEW.TYPE || '  ' ||
                    DBMS_UTILITY.FORMAT_ERROR_STACK
                   ,'TRIGGERS.LOG'
                   ,1);
END TR_HEATEV;
/


CREATE OR REPLACE TRIGGER BOF.TR_CTRL_HMKR_ID
   AFTER UPDATE OF kran_time  ON BOF.HEAT_HOTMETAL 
   FOR EACH ROW
DECLARE
BEGIN
  IF UPDATING THEN
    UPDATE KRANECTRL SET LASTIDENTTOHEAT = SYSDATE, ROWSWITHOUTIDENTIFIC = 0 WHERE ID = 1;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    TRACE_LOG.LOGGER('TR_Ctrl_HMKR_Id: ' || DBMS_UTILITY.FORMAT_ERROR_STACK, 'TRIGGERS.LOG');
END TR_CTRL_HMKR_ID;
/


CREATE OR REPLACE TRIGGER BOF.TR_LADLES
  before insert ON BOF.HEATS_LADLES  
  for each row
declare
  -- local variables here
  count_heat number;
  chgl_id_new number;
  v_ErrCode NUMBER;
  v_ErrText VARCHAR2(150);
begin
  select count (*) into count_heat from heats
   where heat_no=:new.heat_no;
  select count (chgl_id) into chgl_id_new from ladles where
     pouringtime=(select max(pouringtime)from ladles
                    where chgl_no=:new.chgl_no);
 if ((count_heat<>0) and (chgl_id_new<>0)) then
   select chgl_id into chgl_id_new from ladles where
     pouringtime=(select max(pouringtime)from ladles
                    where chgl_no=:new.chgl_no);
   :new.chgl_id:=chgl_id_new;        
 end if; 

  EXCEPTION
      When others then
      v_ErrCode:=SQLCODE;
       v_ErrText:=SUBSTR(SQLERRM,1,150);
      TRACE_LOG.LOGGER('trig_ladles_error: ' ||chgl_id_new||', '||:new.heat_no||'  '||v_ErrText, 'TRIGGERS.LOG');
--       WHEN OTHERS THEN NULL;
end TR_LADLES;
/


CREATE OR REPLACE TRIGGER BOF.TRG_SENDTOPIPE1
  AFTER INSERT ON BOF.HEAT_HOTMETAL  
  FOR EACH ROW
DECLARE
  SHEATNO VARCHAR2(7);
  NJOB    BINARY_INTEGER;
  SSQL    VARCHAR2(500);
BEGIN

  SELECT H.HEAT_NO INTO SHEATNO FROM HEATS H WHERE H.HEAT_ID = :NEW.HEAT_ID;

  SSQL := 'DBMS_APPLICATION_INFO.SET_ACTION(''Передача сигнала о химии чугуна'');' || CHR(10) ||
          'PCK_PIPE.PSEND_MESSAGE(''' || SHEATNO || ''', ' || :NEW.HEATHM_ID || ', ' ||
          '''PCK_DATA.PGET_XIMIRON''' || ');';

  --PCK_PIPE.PSEND_MESSAGE(SHEATNO, :NEW.HEATHM_ID, PCK_PIPE.SPCK_XIMIRON);
  DBMS_JOB.SUBMIT(NJOB, SSQL, SYSDATE + 1 / (24 * 60 * 60), NULL, FALSE);

EXCEPTION
  WHEN OTHERS THEN
    TRACE.TRACE_MES('HEATHM_ID=' || :NEW.HEATHM_ID || ' ERR=' || DBMS_UTILITY.FORMAT_ERROR_STACK
                   ,'TRG_SENDTOPIPE1'
                   ,1);
  
END TRG_SENDTOPIPE1;
/


CREATE OR REPLACE TRIGGER BOF.tr_heatev_lance
   BEFORE INSERT
   ON BOF.HEAT_EVENTS    REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
   inewheat_id   NUMBER;
   snewheat_no   VARCHAR2 (7);
   v_errcode     NUMBER;
   v_errtext     VARCHAR2 (150);
   sblaslanze    VARCHAR2 (1);
   ioldo2        NUMBER;
BEGIN
   inewheat_id := checkcnvoffline (:NEW.heat_id);

   IF inewheat_id = :NEW.heat_id
   THEN
      IF (:NEW.TYPE = 'BLOS') OR (:NEW.TYPE = 'MBLS')
      THEN
         SELECT lancesel
           INTO sblaslanze
           FROM heat_act
          WHERE cv_no IN (SELECT cv_no
                            FROM heats
                           WHERE heat_id = :NEW.heat_id);

         :NEW.par_name2 := sblaslanze;
      END IF;

      IF    (:NEW.TYPE LIKE 'BLO%')
         OR (:NEW.TYPE LIKE 'RBL%')
         OR (:NEW.TYPE LIKE 'RBL%')
         OR (:NEW.TYPE = 'SCCS')
         OR (:NEW.TYPE = 'SUBE')
      THEN
         IF :NEW.value1 < 0
         THEN
            ioldo2 := :NEW.value1;
            :NEW.value1 := :NEW.value1 + 65536 + 1;

            SELECT cv_no
              INTO snewheat_no
              FROM heats
             WHERE heat_id = :NEW.heat_id;

            INSERT INTO log_update
                        (date_update, OPERATOR, heat_n,
                         field_update, old_data,
                         new_data, log_id,
                         reason
                        )
                 VALUES (SYSDATE, 'Oracle', snewheat_no,
                         'Скорректирован отрицательный O2', ioldo2,
                         :NEW.value1, logup_seq.NEXTVAL,
                         'Сбой сброса счетчика L1'
                        );
         END IF;
      END IF;
   ELSE
---      TRACE_LOG.LOGGER('TR_HEATEV_Lance: heat' ||:new.heat_id||' Cnv offLine ','TRIGGERS.LOG');
      :NEW.heat_id := inewheat_id;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      TRACE.trace_mes (   'TR_HEATEV_Lance: '
                       || :NEW.heat_id
                       || ', '
                       || :NEW.TYPE
                       || '  '
                       || DBMS_UTILITY.format_error_stack,
                       'TRIGGERS.LOG',
                       1
                      );
END;
/


DROP SYNONYM IDB07.HEAT_EVENTS;

CREATE OR REPLACE SYNONYM IDB07.HEAT_EVENTS FOR BOF.HEAT_EVENTS;


DROP SYNONYM IDB07.HEAT_HOTMETAL;

CREATE OR REPLACE SYNONYM IDB07.HEAT_HOTMETAL FOR BOF.HEAT_HOTMETAL;


ALTER TABLE BOF.ADDITION ADD (
  CONSTRAINT ADDITION_PK
  PRIMARY KEY
  (ID)
  USING INDEX BOF.ADDITION_PK);

ALTER TABLE BOF.BOF_PARAMETERS ADD (
  CONSTRAINT C_GROUP_YN
  CHECK (PAR_GROUP_YN IN ('Y','N')),
  CONSTRAINT PK_PAR_ID
  PRIMARY KEY
  (PAR_ID)
  USING INDEX BOF.PK_PAR_ID);

ALTER TABLE BOF.BOF_TELEGRAMS ADD (
  CONSTRAINT BOF_TELEGRAMS_PK
  PRIMARY KEY
  (REC_ID)
  USING INDEX BOF.BOF_TELEGRAMS_PK);

ALTER TABLE BOF.ELEMENT ADD (
  CONSTRAINT ELEMENT_PK
  PRIMARY KEY
  (ID)
  USING INDEX BOF.ELEMENT_PK);

ALTER TABLE BOF.EVENTS_SPEC ADD (
  CONSTRAINT PK_EVENTSSPEC_ID
  PRIMARY KEY
  (TYPE_ID)
  USING INDEX BOF.PK_EVENTSSPEC_ID);

ALTER TABLE BOF.FITTING ADD (
  CONSTRAINT FETTING_PK
  PRIMARY KEY
  (HEAT_ID)
  USING INDEX BOF.FETTING_PK);

ALTER TABLE BOF.GRADE_ANALYSIS ADD (
  CONSTRAINT GRANA_PK
  PRIMARY KEY
  (GRADE_ANALYSIS_ID)
  USING INDEX BOF.GRANA_PK,
  CONSTRAINT GRANA_UK
  UNIQUE (GRADE_ANALYSIS_NO)
  USING INDEX BOF.GRANA_UK);

ALTER TABLE BOF.GRADE_ANALYSIS_EL ADD (
  CONSTRAINT GRANAEL_PK
  PRIMARY KEY
  (ELEMENT, GRADE_ANALYSIS_ID)
  USING INDEX BOF.GRANAEL_PK);

ALTER TABLE BOF.GRADE_SPEC ADD (
  CONSTRAINT GRSP_PK
  PRIMARY KEY
  (GRADE_ID)
  USING INDEX BOF.GRSP_PK);

ALTER TABLE BOF.GRADE_STD_ALLOY ADD (
  CONSTRAINT GRSTA_PK
  PRIMARY KEY
  (GRADE_ID, MAT_ID)
  USING INDEX BOF.GRSTA_PK);

ALTER TABLE BOF.HEAT_ACT ADD (
  CONSTRAINT HTACT_PK
  PRIMARY KEY
  (CV_NO)
  USING INDEX BOF.HTACT_PK,
  CONSTRAINT HTACT_UK1
  UNIQUE (HEAT_ID)
  USING INDEX BOF.HTACT_UK1,
  CONSTRAINT HTACT_UK2
  UNIQUE (HEAT_NO)
  USING INDEX BOF.HTACT_UK2);

ALTER TABLE BOF.HEAT_ADDITIONS_ACT ADD (
  CONSTRAINT HTADDACT_PK
  PRIMARY KEY
  (HTADDACT_ID)
  USING INDEX BOF.HTADDACT_PK);

ALTER TABLE BOF.HEAT_ADDITIONS_DOZEN ADD (
  CONSTRAINT HTADDDOZ_PK
  PRIMARY KEY
  (HTADDDOZ_ID)
  USING INDEX BOF.HTADDDOZ_PK);

ALTER TABLE BOF.HEAT_ADDITIONS_MAN ADD (
  CONSTRAINT PK_HEAT_ADDITIONS_MAN
  PRIMARY KEY
  (HTADDMAN_ID)
  USING INDEX BOF.PK_HEAT_ADDITIONS_MAN);

ALTER TABLE BOF.HEAT_ALLOYS_TOTAL ADD (
  CONSTRAINT HTALYTOT_PK
  PRIMARY KEY
  (ALYTOT_ID)
  USING INDEX BOF.HTALYTOT_PK);

ALTER TABLE BOF.HEAT_BATHLEVEL ADD (
  CONSTRAINT HTBLEV_PK
  PRIMARY KEY
  (BATHLEVEL_ID)
  USING INDEX BOF.HTBLEV_PK);

ALTER TABLE BOF.HEAT_BLASENS ADD (
  CONSTRAINT HTBLASENS_PK
  PRIMARY KEY
  (BLASENS_ID)
  USING INDEX BOF.HTBLASENS_PK);

ALTER TABLE BOF.HEAT_BLOWINGS ADD (
  CONSTRAINT HTBLOW_PK
  PRIMARY KEY
  (BLOWING_ID)
  USING INDEX BOF.HTBLOW_PK);

ALTER TABLE BOF.HEAT_CALCPARAM ADD (
  CONSTRAINT HEAT_CALCPARAM_PK
  PRIMARY KEY
  (HEAT_NO)
  USING INDEX BOF.HEAT_CALCPARAM_PK);

ALTER TABLE BOF.HEAT_FACTPARAM ADD (
  CONSTRAINT HEAT_FACTPARAM_PK
  PRIMARY KEY
  (HEAT_NO)
  USING INDEX BOF.HEAT_FACTPARAM_PK);

ALTER TABLE BOF.HEAT_MEASUREMENTS ADD (
  CONSTRAINT HK_TEMP_NOT_NULL
  CHECK ("TEMP" IS NOT NULL),
  CONSTRAINT HTMEAS_PK
  PRIMARY KEY
  (MEASUREMENT_ID)
  USING INDEX BOF.HTMEAS_PK);

ALTER TABLE BOF.HEAT_OFFGAS ADD (
  CONSTRAINT HTOG_PK
  PRIMARY KEY
  (OFFGAS_ID)
  USING INDEX BOF.HTOG_PK);

ALTER TABLE BOF.HEATORDER_AIMDATA ADD (
  CONSTRAINT HOAIM_PK
  PRIMARY KEY
  (HO_ID, NAME)
  USING INDEX BOF.HOAIM_PK);

ALTER TABLE BOF.HEATORDER_ANA ADD (
  CONSTRAINT HOANA_PK
  PRIMARY KEY
  (HO_ID, ELEMENT)
  USING INDEX BOF.HOANA_PK);

ALTER TABLE BOF.HEATORDER_RNO ADD (
  CONSTRAINT HOR_PK
  PRIMARY KEY
  (HO_ID)
  USING INDEX BOF.HOR_PK);

ALTER TABLE BOF.HEATORDERS ADD (
  CONSTRAINT HO_PK
  PRIMARY KEY
  (HO_ID)
  USING INDEX BOF.HO_PK,
  CONSTRAINT HO_UK
  UNIQUE (HO_ID, INSERTTIME)
  USING INDEX BOF.HO_UK);

ALTER TABLE BOF.HEAT_PERSONAL ADD (
  CONSTRAINT PK_HEAT_PERSONAL
  PRIMARY KEY
  (ID_PERSONAL)
  USING INDEX BOF.PK_HEAT_PERSONAL);

ALTER TABLE BOF.HEAT_PHASES ADD (
  CONSTRAINT HTPH_PK
  PRIMARY KEY
  (HEATPHASE_ID)
  USING INDEX BOF.HTPH_PK);

ALTER TABLE BOF.HEAT_POURBACK ADD (
  CONSTRAINT HTPB_PK
  PRIMARY KEY
  (POURBACK_ID)
  USING INDEX BOF.HTPB_PK);

ALTER TABLE BOF.HEAT_REGRADINGS ADD (
  CONSTRAINT HTREGR_PK
  PRIMARY KEY
  (REGR_ID)
  USING INDEX BOF.HTREGR_PK);

ALTER TABLE BOF.HEAT_REMARK ADD (
  CONSTRAINT PK_REMARK
  PRIMARY KEY
  (ID_REMARK)
  USING INDEX BOF.PK_REMARK);

ALTER TABLE BOF.HEATS ADD (
  CONSTRAINT HEAT_PK
  PRIMARY KEY
  (HEAT_ID)
  USING INDEX BOF.HEAT_PK,
  CONSTRAINT HEATS_UK
  UNIQUE (HEAT_NO)
  USING INDEX BOF.HEATS_UK);

ALTER TABLE BOF.HEATS_ALLERTS ADD (
  CONSTRAINT PK_HEATS_ALLERTS
  PRIMARY KEY
  (HEAT_ID)
  USING INDEX BOF.PK_HEATS_ALLERTS);

ALTER TABLE BOF.HEATS_ESPC ADD (
  CONSTRAINT XPKHEATS
  PRIMARY KEY
  (HEAT_ID)
  USING INDEX BOF.XPKHEATS);

ALTER TABLE BOF.HEAT_TARGETVAL ADD (
  CONSTRAINT HEAT_TARGETVAL_PK
  PRIMARY KEY
  (HEAT_NO)
  USING INDEX BOF.HEAT_TARGETVAL_PK);

ALTER TABLE BOF.HEAT_UNRS ADD (
  CONSTRAINT PK_HEAT_UNRS
  PRIMARY KEY
  (HEAT_UNRS_ID)
  USING INDEX BOF.PK_HEAT_UNRS);

ALTER TABLE BOF.HOTMETAL_LADLES ADD (
  CONSTRAINT HMLDL_PK
  PRIMARY KEY
  (CHGL_ID)
  USING INDEX BOF.HMLDL_PK);

ALTER TABLE BOF.HOTMETAL_POURINGS ADD (
  CONSTRAINT HMPOUR_PK
  PRIMARY KEY
  (HMPOURING_ID)
  USING INDEX BOF.HMPOUR_PK);

ALTER TABLE BOF.LADLES ADD (
  CONSTRAINT LADL_PK
  PRIMARY KEY
  (CHGL_ID)
  USING INDEX BOF.LADL_PK);

ALTER TABLE BOF.LADLES_OPCH ADD (
  CONSTRAINT LADLES_OPCH_PK
  PRIMARY KEY
  (LADLES_OPCH_ID)
  USING INDEX BOF.LADLES_OPCH_PK);

ALTER TABLE BOF.LANCES ADD (
  CONSTRAINT PK_LANCES
  PRIMARY KEY
  (LANCES_ID)
  USING INDEX BOF.PK_LANCES);

ALTER TABLE BOF.LOG_UPDATE ADD (
  CONSTRAINT LOG_UP_PK
  PRIMARY KEY
  (LOG_ID)
  USING INDEX BOF.LOG_PK);

ALTER TABLE BOF.MATERIAL_SPEC ADD (
  CONSTRAINT MSPEC_PK
  PRIMARY KEY
  (MAT_ID)
  USING INDEX BOF.MSPEC_PK,
  CONSTRAINT MSPEC_UK3
  UNIQUE (MAT_NO)
  USING INDEX BOF.MSPEC_UK3);

ALTER TABLE BOF.MESS_O2INO2 ADD (
  CONSTRAINT MESS_O2_PK
  PRIMARY KEY
  (O2INO2_ID)
  USING INDEX BOF.MESS_O2_PK,
  CONSTRAINT MESS_O2_UK
  UNIQUE (INSERTTIME)
  USING INDEX BOF.MESS_O2_UK);

ALTER TABLE BOF.MODEL_TELEGRAMS ADD (
  CONSTRAINT PK_MODELTELEGRAMS_RECID
  PRIMARY KEY
  (REC_ID)
  USING INDEX BOF.PK_MODELTELEGRAMS_RECID);

ALTER TABLE BOF.MODEL_TRENDS ADD (
  CONSTRAINT PK_MODELTRENDS_RECID
  PRIMARY KEY
  (REC_ID)
  USING INDEX BOF.PK_MODELTRENDS_RECID);

ALTER TABLE BOF.MONITORING_EVENTS ADD (
  CONSTRAINT PK_MONITORING_EVENTS
  PRIMARY KEY
  (EVENT_ID)
  USING INDEX BOF.PK_MONITORING_EVENTS);

ALTER TABLE BOF.NSI_FITTING ADD (
  CONSTRAINT NSI_FITTING_PK
  PRIMARY KEY
  (FITTING_ID)
  USING INDEX BOF.NSI_FETTING_PK);

ALTER TABLE BOF.NSI_OPERATIONS ADD (
  CONSTRAINT PK_NSIOPER_ID
  PRIMARY KEY
  (OPER_ID)
  USING INDEX BOF.PK_NSIOPER_ID);

ALTER TABLE BOF.PARAMETER_GRADES ADD (
  CONSTRAINT PARGR_PK
  PRIMARY KEY
  (GRADE_ID, NAME)
  USING INDEX BOF.PARGR_PK);

ALTER TABLE BOF.PROCESS_PHASES ADD (
  CONSTRAINT PRPH_PK
  PRIMARY KEY
  (PHASE_NO)
  USING INDEX BOF.PRPH_PK);

ALTER TABLE BOF.REASON_DEF ADD (
  CONSTRAINT READEF_PK
  PRIMARY KEY
  (REASON_NO)
  USING INDEX BOF.READEF_PK);

ALTER TABLE BOF.REASONS ADD (
  CONSTRAINT PK_REASONS
  PRIMARY KEY
  (REASON_ID)
  USING INDEX BOF.PK_REASONS);

ALTER TABLE BOF.SCHR_ORPHANS ADD (
  CONSTRAINT PK_SCHR_ORPHANS
  PRIMARY KEY
  (ORPHANS_ID)
  USING INDEX BOF.PK_SCHR_ORPHANS);

ALTER TABLE BOF.SCRAP ADD (
  CONSTRAINT SCRAP_PK
  PRIMARY KEY
  (ID)
  USING INDEX BOF.SCRAP_PK);

ALTER TABLE BOF.SCRAP_BUCKETMATS ADD (
  CONSTRAINT SCRMAT_PK
  PRIMARY KEY
  (BUCKET_ID, MAT_ID)
  USING INDEX BOF.SCRMAT_PK);

ALTER TABLE BOF.SCRAP_BUCKETS ADD (
  CONSTRAINT SCRBUC_PK
  PRIMARY KEY
  (BUCKET_ID)
  USING INDEX BOF.SCRBUC_PK,
  CONSTRAINT SCRBUC_UK
  UNIQUE (BUCKET_NO, LOADINGTIME)
  USING INDEX BOF.SCRBUC_UK);

ALTER TABLE BOF.SCRAP_BUCKETS_KRAN ADD (
  CONSTRAINT SCRBUC_KR_PK
  PRIMARY KEY
  (BUCKET_ID)
  USING INDEX BOF.SCRBUC_KR_PK);

ALTER TABLE BOF.SCRAPSCHEMES ADD (
  CONSTRAINT SCRAPSH_PK
  PRIMARY KEY
  (SCSH_NO)
  USING INDEX BOF.SCRAPSH_PK);

ALTER TABLE BOF.SCRAPSCHEME_STEPS ADD (
  CONSTRAINT AVCON_164264_PERC__000
  CHECK (PERC_VAL BETWEEN 0 AND 100),
  CONSTRAINT SCSHST_PK
  PRIMARY KEY
  (SCSH_NO, MAT_ID)
  USING INDEX BOF.SCSHST_PK);

ALTER TABLE BOF.SHIFT_JOB ADD (
  CONSTRAINT SJ_PK
  PRIMARY KEY
  (JOB_ID)
  USING INDEX BOF.SJ_PK);

ALTER TABLE BOF.SHIFT_TEAM ADD (
  CONSTRAINT ST_PK
  PRIMARY KEY
  (TEAM_NAME)
  USING INDEX BOF.ST_PK);

ALTER TABLE BOF.SLAGBLOWING ADD (
  CONSTRAINT SLBLOW_PK
  PRIMARY KEY
  (CV_NO, STARTTIME)
  USING INDEX BOF.SLBLOW_PK);

ALTER TABLE BOF.STATUS_DEF ADD (
  CONSTRAINT STDEF_PK
  PRIMARY KEY
  (STATUS_NO, TYPE)
  USING INDEX BOF.STDEF_PK);

ALTER TABLE BOF.STEEL_LADLES ADD (
  CONSTRAINT PK_STEEL_LADLES
  PRIMARY KEY
  (STEEL_LADLES_ID)
  USING INDEX BOF.PK_STEEL_LADLES);

ALTER TABLE BOF.TB_SHIFT ADD (
  CONSTRAINT PK_SHIFT_CALENDAR
  PRIMARY KEY
  (SHIFT_ID)
  USING INDEX BOF.PK_SHIFT_CALENDAR);

ALTER TABLE BOF.TB_SHIFT_JOB ADD (
  CONSTRAINT PK_SHIFT_JOB
  PRIMARY KEY
  (JOB_ID)
  USING INDEX BOF.PK_SHIFT_JOB);

ALTER TABLE BOF.TB_SHIFT_TEAM ADD (
  CONSTRAINT PK_SHIFT_TEAM
  PRIMARY KEY
  (TEAM_NAME)
  USING INDEX BOF.PK_SHIFT_TEAM);

ALTER TABLE BOF.TECHTROUBLE ADD (
  CONSTRAINT TROUBLE_PK
  PRIMARY KEY
  (TROUBLE_ID)
  USING INDEX BOF.TROUBLE_PK);

ALTER TABLE BOF.TMPL_PERIODS ADD (
  CONSTRAINT TMPL_PERIODS_PK
  PRIMARY KEY
  (PERIOD_ID)
  USING INDEX BOF.TMPL_PERIODS_PK);

ALTER TABLE BOF.TMPL_PORTIONS ADD (
  CONSTRAINT PORTION_ID_PK
  PRIMARY KEY
  (PORTION_ID)
  USING INDEX BOF.PORTION_ID_PK);

ALTER TABLE BOF.TMPL_STAGES ADD (
  CONSTRAINT STAGE_ID_PK
  PRIMARY KEY
  (STAGE_ID)
  USING INDEX BOF.STAGE_ID_PK);

ALTER TABLE BOF.TMPL_STEPS ADD (
  CONSTRAINT STEP_ID_PK
  PRIMARY KEY
  (STEP_ID)
  USING INDEX BOF.STEP_ID_PK);

ALTER TABLE BOF.TMPL_TEMPLATE ADD (
  CONSTRAINT TEMPLATE_ID_PK
  PRIMARY KEY
  (TEMPLATE_ID)
  USING INDEX BOF.TEMPLATE_ID_PK);

ALTER TABLE BOF.TORKRETIEREN ADD (
  CONSTRAINT TORK_PK
  PRIMARY KEY
  (CV_NO, STARTTIME)
  USING INDEX BOF.TORK_PK);

ALTER TABLE BOF.TORPEDOS ADD (
  CONSTRAINT TLC_PK
  PRIMARY KEY
  (TLC_ID)
  USING INDEX BOF.TLC_PK);

ALTER TABLE BOF.TORP_IN_KOMMEN ADD (
  CONSTRAINT PK_TORP_IN_KOMMEN
  PRIMARY KEY
  (TRP_ID)
  USING INDEX BOF.PK_TORP_IN_KOMMEN);

ALTER TABLE BOF.TRACE_OFFGAS ADD (
  CONSTRAINT HTOGTRACE_PK
  PRIMARY KEY
  (OFFGAS_ID)
  USING INDEX BOF.HTOGTRACE_PK);

ALTER TABLE BOF.TREND_BALANCE ADD (
  CONSTRAINT TREND_BALANCE_UK
  PRIMARY KEY
  (CNV_NO, INSERTTIME)
  USING INDEX BOF.TREND_BALANCE_UK);

ALTER TABLE BOF.TREND_GASFLOW ADD (
  CONSTRAINT TREND_GASFLOW_PK
  PRIMARY KEY
  (CNV_NO, INSERTTIME)
  USING INDEX BOF.TREND_GASFLOW_PK);

ALTER TABLE BOF.TREND_HOTMETAL ADD (
  CONSTRAINT TREND_HOTMETAL_PK
  PRIMARY KEY
  (HEAT_NO)
  USING INDEX BOF.TREND_HOTMETAL_PK);

ALTER TABLE BOF.TREND_LANCE ADD (
  CONSTRAINT TREND_LANCE_UK
  PRIMARY KEY
  (CNV_NO, INSERTTIME)
  USING INDEX BOF.TREND_LANCE_UK);

ALTER TABLE BOF.TREND_MODES ADD (
  CONSTRAINT TREND_MODES_UK
  PRIMARY KEY
  (CNV_NO, INSERTTIME)
  USING INDEX BOF.TREND_MODES_UK);

ALTER TABLE BOF.TREND_OFFGAS ADD (
  CONSTRAINT TREND_OFFGAS_UK
  PRIMARY KEY
  (CNV_NO, INSERTTIME)
  USING INDEX BOF.TREND_OFFGAS_UK);

ALTER TABLE BOF.TREND_STATISTIC ADD (
  CONSTRAINT TREND_STATISTIC_UK
  PRIMARY KEY
  (CNV_NO, INSERTTIME)
  USING INDEX BOF.TREND_STATISTIC_UK);

ALTER TABLE BOF.TREND_XIMCALC ADD (
  CONSTRAINT TREND_XIMCALC_PK
  PRIMARY KEY
  (XIM_VID, HEAT_NO)
  USING INDEX BOF.TREND_XIMCALC_PK);

ALTER TABLE BOF.VIS_ACCESSRULES ADD (
  CONSTRAINT VIS_ACCESSRULES_PK
  PRIMARY KEY
  (RULE_ID)
  USING INDEX BOF.VIS_ACCESSRULES_PK);

ALTER TABLE BOF.VIS_CONFIG ADD (
  CONSTRAINT CONFIG_ID_PK
  PRIMARY KEY
  (CONFIG_ID)
  USING INDEX BOF.CONFIG_ID_PK);

ALTER TABLE BOF.VIS_MESSAGES ADD (
  CONSTRAINT VIS_MESSAGES_PK
  PRIMARY KEY
  (MESSAGE_ID)
  USING INDEX BOF.VIS_MESSAGES_PK);

ALTER TABLE BOF.VIS_USERS ADD (
  CONSTRAINT VIS_USERS_PK
  PRIMARY KEY
  (USER_ID)
  USING INDEX BOF.VIS_USERS_PK);

ALTER TABLE BOF.WREG_APPLICATIONS ADD (
  PRIMARY KEY
  (WREG_APPLICATIONS_ID)
  USING INDEX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          128K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
               ));

ALTER TABLE BOF.WREG_DETAILS ADD (
  PRIMARY KEY
  (WREG_DETAILS_ID)
  USING INDEX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          128K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
               ));

ALTER TABLE BOF.WREG_EXECUTORS ADD (
  PRIMARY KEY
  (WREG_EXECUTORS_ID)
  USING INDEX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          128K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
               ));

ALTER TABLE BOF.WREG_INITIATORS ADD (
  PRIMARY KEY
  (WREG_INITIATORS_ID)
  USING INDEX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          128K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
               ));

ALTER TABLE BOF.WREG_SECTIONS ADD (
  PRIMARY KEY
  (WREG_SECTIONS_ID)
  USING INDEX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          128K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
               ));

ALTER TABLE BOF.WREG_TREE ADD (
  PRIMARY KEY
  (WREG_TREE_ID)
  USING INDEX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          128K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
               ));

ALTER TABLE BOF.WREG_WORKDESCR ADD (
  PRIMARY KEY
  (WREG_WORKDESCR_ID)
  USING INDEX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          128K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
               ));

ALTER TABLE BOF.HEAT_EVENTS ADD (
  CONSTRAINT HTEVE_PK
  PRIMARY KEY
  (EVENT_ID)
  USING INDEX BOF.HTEVE_PK);

ALTER TABLE BOF.HEAT_HOTMETAL ADD (
  CONSTRAINT HTHM_PK
  PRIMARY KEY
  (HEATHM_ID)
  USING INDEX BOF.HTHM_PK);

ALTER TABLE BOF.HEATS_LADLES ADD (
  CONSTRAINT HTLADLES_PK
  PRIMARY KEY
  (HM_ID)
  USING INDEX BOF.HTLADLES_PK);

ALTER TABLE BOF.HEATS_TORPEDOS ADD (
  CONSTRAINT TRP_PK
  PRIMARY KEY
  (TLC_ID)
  USING INDEX BOF.TRP_PK);

ALTER TABLE BOF.PERSONAL ADD (
  CONSTRAINT PERSONAL_PK
  PRIMARY KEY
  (PERSONAL_ID)
  USING INDEX BOF.PERSONAL_PK);

ALTER TABLE BOF.SHIFT_CALENDAR ADD (
  CONSTRAINT SC_PK
  PRIMARY KEY
  (SHIFT_ID)
  USING INDEX BOF.SC_PK);

ALTER TABLE BOF.TB_PERSONAL ADD (
  CONSTRAINT PK_PERSONAL
  PRIMARY KEY
  (PERSONAL_ID)
  USING INDEX BOF.PK_PERSONAL);

ALTER TABLE BOF.TB_SHIFT_ROTATION ADD (
  CONSTRAINT PK_SHIFT_ROTATION
  PRIMARY KEY
  (SEQUENCE)
  USING INDEX BOF.PK_SHIFT_ROTATION);

ALTER TABLE BOF.BOF_PARAMETERS ADD (
  CONSTRAINT FK_GROUP_ID 
  FOREIGN KEY (PAR_GROUP_ID) 
  REFERENCES BOF.BOF_PARAMETERS (PAR_ID));

ALTER TABLE BOF.GRADE_SPEC ADD (
  CONSTRAINT GRSP_GRANA_FK 
  FOREIGN KEY (GRADE_ANALYSIS_ID) 
  REFERENCES BOF.GRADE_ANALYSIS (GRADE_ANALYSIS_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.GRADE_STD_ALLOY ADD (
  CONSTRAINT GRSTA_GRSP_FK 
  FOREIGN KEY (GRADE_ID) 
  REFERENCES BOF.GRADE_SPEC (GRADE_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.HOTMETAL_POURINGS ADD (
  CONSTRAINT HMPOUR_HMLDL_FK 
  FOREIGN KEY (CHGL_ID) 
  REFERENCES BOF.HOTMETAL_LADLES (CHGL_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.PARAMETER_GRADES ADD (
  CONSTRAINT PARGR_GRSP_FK 
  FOREIGN KEY (GRADE_ID) 
  REFERENCES BOF.GRADE_SPEC (GRADE_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.HEAT_EVENTS ADD (
  CONSTRAINT HEAT_HTEVE_FK 
  FOREIGN KEY (HEAT_ID) 
  REFERENCES BOF.HEATS (HEAT_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.HEAT_HOTMETAL ADD (
  CONSTRAINT HTHM_HMLDL_FK 
  FOREIGN KEY (CHGL_ID) 
  REFERENCES BOF.HOTMETAL_LADLES (CHGL_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.HEATS_LADLES ADD (
  CONSTRAINT LADLE_FK 
  FOREIGN KEY (CHGL_ID) 
  REFERENCES BOF.LADLES (CHGL_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.HEATS_TORPEDOS ADD (
  CONSTRAINT HTTORP_FK 
  FOREIGN KEY (CHGL_ID) 
  REFERENCES BOF.LADLES (CHGL_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.PERSONAL ADD (
  CONSTRAINT PERSONAL_SJ_FK 
  FOREIGN KEY (JOB_ID) 
  REFERENCES BOF.SHIFT_JOB (JOB_ID)
  ON DELETE CASCADE,
  CONSTRAINT PERSONAL_ST_FK 
  FOREIGN KEY (TEAM_NAME) 
  REFERENCES BOF.SHIFT_TEAM (TEAM_NAME)
  ON DELETE CASCADE);

ALTER TABLE BOF.SHIFT_CALENDAR ADD (
  CONSTRAINT SC_ST_FK 
  FOREIGN KEY (TEAM_NAME) 
  REFERENCES BOF.SHIFT_TEAM (TEAM_NAME)
  ON DELETE CASCADE);

ALTER TABLE BOF.SHIFT_PERSONAL ADD (
  CONSTRAINT SP_PERSONAL_FK 
  FOREIGN KEY (PERSONAL_ID) 
  REFERENCES BOF.PERSONAL (PERSONAL_ID)
  ON DELETE CASCADE,
  CONSTRAINT SP_SC_FK 
  FOREIGN KEY (SHIFT_ID) 
  REFERENCES BOF.SHIFT_CALENDAR (SHIFT_ID)
  ON DELETE CASCADE,
  CONSTRAINT SP_SJ_FK 
  FOREIGN KEY (JOB_ID) 
  REFERENCES BOF.SHIFT_JOB (JOB_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.TB_PERSONAL ADD (
  CONSTRAINT FK_PERSONAL_1 
  FOREIGN KEY (TEAM_NAME) 
  REFERENCES BOF.TB_SHIFT_TEAM (TEAM_NAME)
  ON DELETE CASCADE,
  CONSTRAINT FK_PERSONAL_2 
  FOREIGN KEY (JOB_ID) 
  REFERENCES BOF.TB_SHIFT_JOB (JOB_ID)
  ON DELETE CASCADE);

ALTER TABLE BOF.TB_SHIFT_ROTATION ADD (
  CONSTRAINT FK_SHIFT_ROTATION_1 
  FOREIGN KEY (TEAM_NAME) 
  REFERENCES BOF.TB_SHIFT_TEAM (TEAM_NAME)
  ON DELETE CASCADE);

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.GRADE_SPEC TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_ACT TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_ADDITIONS_ACT TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_ADDITIONS_DOZEN TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_BATHLEVEL TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_MEASUREMENTS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEATORDERS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_PERSONAL TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_PHASES TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_REMARK TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEATS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEATS_ALLERTS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HOTMETAL_LADLES TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HOTMETAL_POURINGS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.LADLES_OPCH TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.MATERIAL_SPEC TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.MESS_O2INO2 TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.PARAMETER_GRADES TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.SCRAP_BUCKETMATS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.SCRAP_BUCKETS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.STEEL_LADLES TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.TORPEDOS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_ACT TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_BLOWINGS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_HOTMETAL_KRAN TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEATS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HOTMETAL_LADLES TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HOTMETAL_POURINGS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.MESS_O2INO2 TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.TORPEDOS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_EVENTS TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_HOTMETAL TO BOF;

GRANT DELETE, INSERT, SELECT, UPDATE ON BOF.HEAT_EVENTS TO BOF;
