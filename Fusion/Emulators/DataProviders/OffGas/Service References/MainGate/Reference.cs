//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.MainGate {
    using System.Runtime.Serialization;
    using System;
    using CommonTypes;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterBaseEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.CastIronTemperatureEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.HeatStartEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.HeatChangeNumberEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.GivenO2FlowRateEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.ConverterAngleEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.SteelAnalysisEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.LadlePotEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.ScrapEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.OffGasEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.GivenCastIronWeightEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.MixerAnalysisEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.LanceEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainGate.CastIronWeightEvent))]
    public partial class ConverterBaseEvent : BaseEvent, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CastIronTemperatureEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class CastIronTemperatureEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LadlePotNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TemperatureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LadlePotNumber {
            get {
                return this.LadlePotNumberField;
            }
            set {
                if ((this.LadlePotNumberField.Equals(value) != true)) {
                    this.LadlePotNumberField = value;
                    this.RaisePropertyChanged("LadlePotNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeatStartEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class HeatStartEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeatNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeatNumber {
            get {
                return this.HeatNumberField;
            }
            set {
                if ((this.HeatNumberField.Equals(value) != true)) {
                    this.HeatNumberField = value;
                    this.RaisePropertyChanged("HeatNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeatChangeNumberEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class HeatChangeNumberEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeatNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeatNumber {
            get {
                return this.HeatNumberField;
            }
            set {
                if ((this.HeatNumberField.Equals(value) != true)) {
                    this.HeatNumberField = value;
                    this.RaisePropertyChanged("HeatNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GivenO2FlowRateEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class GivenO2FlowRateEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2FlowForLanceAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2TotalFlowField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2FlowForLanceAnalysis {
            get {
                return this.O2FlowForLanceAnalysisField;
            }
            set {
                if ((this.O2FlowForLanceAnalysisField.Equals(value) != true)) {
                    this.O2FlowForLanceAnalysisField = value;
                    this.RaisePropertyChanged("O2FlowForLanceAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2TotalFlow {
            get {
                return this.O2TotalFlowField;
            }
            set {
                if ((this.O2TotalFlowField.Equals(value) != true)) {
                    this.O2TotalFlowField = value;
                    this.RaisePropertyChanged("O2TotalFlow");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterAngleEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class ConverterAngleEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AngleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Angle {
            get {
                return this.AngleField;
            }
            set {
                if ((this.AngleField.Equals(value) != true)) {
                    this.AngleField = value;
                    this.RaisePropertyChanged("Angle");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SteelAnalysisEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class SteelAnalysisEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeatNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Time1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeatNumber {
            get {
                return this.HeatNumberField;
            }
            set {
                if ((this.HeatNumberField.Equals(value) != true)) {
                    this.HeatNumberField = value;
                    this.RaisePropertyChanged("HeatNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Time")]
        public System.DateTime Time1 {
            get {
                return this.Time1Field;
            }
            set {
                if ((this.Time1Field.Equals(value) != true)) {
                    this.Time1Field = value;
                    this.RaisePropertyChanged("Time1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LadlePotEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class LadlePotEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CastIronTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CastIronTotalWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LadlePotNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MixerNumberPortion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MixerNumberPortion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MixerNumberPortion3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightPortion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightPortion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightPortion3Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CastIronTemperature {
            get {
                return this.CastIronTemperatureField;
            }
            set {
                if ((this.CastIronTemperatureField.Equals(value) != true)) {
                    this.CastIronTemperatureField = value;
                    this.RaisePropertyChanged("CastIronTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CastIronTotalWeight {
            get {
                return this.CastIronTotalWeightField;
            }
            set {
                if ((this.CastIronTotalWeightField.Equals(value) != true)) {
                    this.CastIronTotalWeightField = value;
                    this.RaisePropertyChanged("CastIronTotalWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LadlePotNumber {
            get {
                return this.LadlePotNumberField;
            }
            set {
                if ((this.LadlePotNumberField.Equals(value) != true)) {
                    this.LadlePotNumberField = value;
                    this.RaisePropertyChanged("LadlePotNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MixerNumberPortion1 {
            get {
                return this.MixerNumberPortion1Field;
            }
            set {
                if ((this.MixerNumberPortion1Field.Equals(value) != true)) {
                    this.MixerNumberPortion1Field = value;
                    this.RaisePropertyChanged("MixerNumberPortion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MixerNumberPortion2 {
            get {
                return this.MixerNumberPortion2Field;
            }
            set {
                if ((this.MixerNumberPortion2Field.Equals(value) != true)) {
                    this.MixerNumberPortion2Field = value;
                    this.RaisePropertyChanged("MixerNumberPortion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MixerNumberPortion3 {
            get {
                return this.MixerNumberPortion3Field;
            }
            set {
                if ((this.MixerNumberPortion3Field.Equals(value) != true)) {
                    this.MixerNumberPortion3Field = value;
                    this.RaisePropertyChanged("MixerNumberPortion3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeightPortion1 {
            get {
                return this.WeightPortion1Field;
            }
            set {
                if ((this.WeightPortion1Field.Equals(value) != true)) {
                    this.WeightPortion1Field = value;
                    this.RaisePropertyChanged("WeightPortion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeightPortion2 {
            get {
                return this.WeightPortion2Field;
            }
            set {
                if ((this.WeightPortion2Field.Equals(value) != true)) {
                    this.WeightPortion2Field = value;
                    this.RaisePropertyChanged("WeightPortion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeightPortion3 {
            get {
                return this.WeightPortion3Field;
            }
            set {
                if ((this.WeightPortion3Field.Equals(value) != true)) {
                    this.WeightPortion3Field = value;
                    this.RaisePropertyChanged("WeightPortion3");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScrapEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class ScrapEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BucketNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ConverterNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ScrapType1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ScrapType2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ScrapType3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ScrapType4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ScrapType5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ScrapType6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ScrapType7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ScrapType8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Weight1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Weight2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Weight3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Weight4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Weight5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Weight6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Weight7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Weight8Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BucketNumber {
            get {
                return this.BucketNumberField;
            }
            set {
                if ((this.BucketNumberField.Equals(value) != true)) {
                    this.BucketNumberField = value;
                    this.RaisePropertyChanged("BucketNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ConverterNumber {
            get {
                return this.ConverterNumberField;
            }
            set {
                if ((this.ConverterNumberField.Equals(value) != true)) {
                    this.ConverterNumberField = value;
                    this.RaisePropertyChanged("ConverterNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ScrapType1 {
            get {
                return this.ScrapType1Field;
            }
            set {
                if ((this.ScrapType1Field.Equals(value) != true)) {
                    this.ScrapType1Field = value;
                    this.RaisePropertyChanged("ScrapType1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ScrapType2 {
            get {
                return this.ScrapType2Field;
            }
            set {
                if ((this.ScrapType2Field.Equals(value) != true)) {
                    this.ScrapType2Field = value;
                    this.RaisePropertyChanged("ScrapType2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ScrapType3 {
            get {
                return this.ScrapType3Field;
            }
            set {
                if ((this.ScrapType3Field.Equals(value) != true)) {
                    this.ScrapType3Field = value;
                    this.RaisePropertyChanged("ScrapType3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ScrapType4 {
            get {
                return this.ScrapType4Field;
            }
            set {
                if ((this.ScrapType4Field.Equals(value) != true)) {
                    this.ScrapType4Field = value;
                    this.RaisePropertyChanged("ScrapType4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ScrapType5 {
            get {
                return this.ScrapType5Field;
            }
            set {
                if ((this.ScrapType5Field.Equals(value) != true)) {
                    this.ScrapType5Field = value;
                    this.RaisePropertyChanged("ScrapType5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ScrapType6 {
            get {
                return this.ScrapType6Field;
            }
            set {
                if ((this.ScrapType6Field.Equals(value) != true)) {
                    this.ScrapType6Field = value;
                    this.RaisePropertyChanged("ScrapType6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ScrapType7 {
            get {
                return this.ScrapType7Field;
            }
            set {
                if ((this.ScrapType7Field.Equals(value) != true)) {
                    this.ScrapType7Field = value;
                    this.RaisePropertyChanged("ScrapType7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ScrapType8 {
            get {
                return this.ScrapType8Field;
            }
            set {
                if ((this.ScrapType8Field.Equals(value) != true)) {
                    this.ScrapType8Field = value;
                    this.RaisePropertyChanged("ScrapType8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalWeight {
            get {
                return this.TotalWeightField;
            }
            set {
                if ((this.TotalWeightField.Equals(value) != true)) {
                    this.TotalWeightField = value;
                    this.RaisePropertyChanged("TotalWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight1 {
            get {
                return this.Weight1Field;
            }
            set {
                if ((this.Weight1Field.Equals(value) != true)) {
                    this.Weight1Field = value;
                    this.RaisePropertyChanged("Weight1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight2 {
            get {
                return this.Weight2Field;
            }
            set {
                if ((this.Weight2Field.Equals(value) != true)) {
                    this.Weight2Field = value;
                    this.RaisePropertyChanged("Weight2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight3 {
            get {
                return this.Weight3Field;
            }
            set {
                if ((this.Weight3Field.Equals(value) != true)) {
                    this.Weight3Field = value;
                    this.RaisePropertyChanged("Weight3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight4 {
            get {
                return this.Weight4Field;
            }
            set {
                if ((this.Weight4Field.Equals(value) != true)) {
                    this.Weight4Field = value;
                    this.RaisePropertyChanged("Weight4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight5 {
            get {
                return this.Weight5Field;
            }
            set {
                if ((this.Weight5Field.Equals(value) != true)) {
                    this.Weight5Field = value;
                    this.RaisePropertyChanged("Weight5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight6 {
            get {
                return this.Weight6Field;
            }
            set {
                if ((this.Weight6Field.Equals(value) != true)) {
                    this.Weight6Field = value;
                    this.RaisePropertyChanged("Weight6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight7 {
            get {
                return this.Weight7Field;
            }
            set {
                if ((this.Weight7Field.Equals(value) != true)) {
                    this.Weight7Field = value;
                    this.RaisePropertyChanged("Weight7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight8 {
            get {
                return this.Weight8Field;
            }
            set {
                if ((this.Weight8Field.Equals(value) != true)) {
                    this.Weight8Field = value;
                    this.RaisePropertyChanged("Weight8");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OffGasEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class OffGasEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double COField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double H2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double N2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Ar {
            get {
                return this.ArField;
            }
            set {
                if ((this.ArField.Equals(value) != true)) {
                    this.ArField = value;
                    this.RaisePropertyChanged("Ar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CO {
            get {
                return this.COField;
            }
            set {
                if ((this.COField.Equals(value) != true)) {
                    this.COField = value;
                    this.RaisePropertyChanged("CO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CO2 {
            get {
                return this.CO2Field;
            }
            set {
                if ((this.CO2Field.Equals(value) != true)) {
                    this.CO2Field = value;
                    this.RaisePropertyChanged("CO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double H2 {
            get {
                return this.H2Field;
            }
            set {
                if ((this.H2Field.Equals(value) != true)) {
                    this.H2Field = value;
                    this.RaisePropertyChanged("H2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double N2 {
            get {
                return this.N2Field;
            }
            set {
                if ((this.N2Field.Equals(value) != true)) {
                    this.N2Field = value;
                    this.RaisePropertyChanged("N2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2 {
            get {
                return this.O2Field;
            }
            set {
                if ((this.O2Field.Equals(value) != true)) {
                    this.O2Field = value;
                    this.RaisePropertyChanged("O2");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GivenCastIronWeightEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class GivenCastIronWeightEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ConverterNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GivenWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GivenWeightByDefaultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ConverterNumber {
            get {
                return this.ConverterNumberField;
            }
            set {
                if ((this.ConverterNumberField.Equals(value) != true)) {
                    this.ConverterNumberField = value;
                    this.RaisePropertyChanged("ConverterNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GivenWeight {
            get {
                return this.GivenWeightField;
            }
            set {
                if ((this.GivenWeightField.Equals(value) != true)) {
                    this.GivenWeightField = value;
                    this.RaisePropertyChanged("GivenWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GivenWeightByDefault {
            get {
                return this.GivenWeightByDefaultField;
            }
            set {
                if ((this.GivenWeightByDefaultField.Equals(value) != true)) {
                    this.GivenWeightByDefaultField = value;
                    this.RaisePropertyChanged("GivenWeightByDefault");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MixerAnalysisEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class MixerAnalysisEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MixerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SiField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double C {
            get {
                return this.CField;
            }
            set {
                if ((this.CField.Equals(value) != true)) {
                    this.CField = value;
                    this.RaisePropertyChanged("C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MixerNumber {
            get {
                return this.MixerNumberField;
            }
            set {
                if ((this.MixerNumberField.Equals(value) != true)) {
                    this.MixerNumberField = value;
                    this.RaisePropertyChanged("MixerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mn {
            get {
                return this.MnField;
            }
            set {
                if ((this.MnField.Equals(value) != true)) {
                    this.MnField = value;
                    this.RaisePropertyChanged("Mn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double P {
            get {
                return this.PField;
            }
            set {
                if ((this.PField.Equals(value) != true)) {
                    this.PField = value;
                    this.RaisePropertyChanged("P");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double S {
            get {
                return this.SField;
            }
            set {
                if ((this.SField.Equals(value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Si {
            get {
                return this.SiField;
            }
            set {
                if ((this.SiField.Equals(value) != true)) {
                    this.SiField = value;
                    this.RaisePropertyChanged("Si");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanceEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class LanceEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BathLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BlowingFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BlowingInterruptFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short HeatingScrapFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LanceHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LanceModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LanceSelectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short NVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2FlowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2FlowModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2IgnitionVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2LeftLanceGewBaerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2LeftLanceGewWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2LeftLanceLeckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2LeftLanceWaterInputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2LeftLanceWaterOutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2LeftLanceWaterPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2LeftLanceWaterTempInputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2LeftLanceWaterTempOutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2RightLanceGewBaerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2RightLanceGewWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2RightLanceLeckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2RightLanceWaterInputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2RightLanceWaterOutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double O2RightLanceWaterPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2RightLanceWaterTempInputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2RightLanceWaterTempOutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2TorkVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short O2TotalVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ReblowingFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SkullCuttingFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SlagBlowingFlagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BathLevel {
            get {
                return this.BathLevelField;
            }
            set {
                if ((this.BathLevelField.Equals(value) != true)) {
                    this.BathLevelField = value;
                    this.RaisePropertyChanged("BathLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BlowingFlag {
            get {
                return this.BlowingFlagField;
            }
            set {
                if ((this.BlowingFlagField.Equals(value) != true)) {
                    this.BlowingFlagField = value;
                    this.RaisePropertyChanged("BlowingFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BlowingInterruptFlag {
            get {
                return this.BlowingInterruptFlagField;
            }
            set {
                if ((this.BlowingInterruptFlagField.Equals(value) != true)) {
                    this.BlowingInterruptFlagField = value;
                    this.RaisePropertyChanged("BlowingInterruptFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short HeatingScrapFlag {
            get {
                return this.HeatingScrapFlagField;
            }
            set {
                if ((this.HeatingScrapFlagField.Equals(value) != true)) {
                    this.HeatingScrapFlagField = value;
                    this.RaisePropertyChanged("HeatingScrapFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LanceHeight {
            get {
                return this.LanceHeightField;
            }
            set {
                if ((this.LanceHeightField.Equals(value) != true)) {
                    this.LanceHeightField = value;
                    this.RaisePropertyChanged("LanceHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LanceMode {
            get {
                return this.LanceModeField;
            }
            set {
                if ((this.LanceModeField.Equals(value) != true)) {
                    this.LanceModeField = value;
                    this.RaisePropertyChanged("LanceMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LanceSelection {
            get {
                return this.LanceSelectionField;
            }
            set {
                if ((this.LanceSelectionField.Equals(value) != true)) {
                    this.LanceSelectionField = value;
                    this.RaisePropertyChanged("LanceSelection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short NVol {
            get {
                return this.NVolField;
            }
            set {
                if ((this.NVolField.Equals(value) != true)) {
                    this.NVolField = value;
                    this.RaisePropertyChanged("NVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2Flow {
            get {
                return this.O2FlowField;
            }
            set {
                if ((this.O2FlowField.Equals(value) != true)) {
                    this.O2FlowField = value;
                    this.RaisePropertyChanged("O2Flow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2FlowMode {
            get {
                return this.O2FlowModeField;
            }
            set {
                if ((this.O2FlowModeField.Equals(value) != true)) {
                    this.O2FlowModeField = value;
                    this.RaisePropertyChanged("O2FlowMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2IgnitionVol {
            get {
                return this.O2IgnitionVolField;
            }
            set {
                if ((this.O2IgnitionVolField.Equals(value) != true)) {
                    this.O2IgnitionVolField = value;
                    this.RaisePropertyChanged("O2IgnitionVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2LeftLanceGewBaer {
            get {
                return this.O2LeftLanceGewBaerField;
            }
            set {
                if ((this.O2LeftLanceGewBaerField.Equals(value) != true)) {
                    this.O2LeftLanceGewBaerField = value;
                    this.RaisePropertyChanged("O2LeftLanceGewBaer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2LeftLanceGewWeight {
            get {
                return this.O2LeftLanceGewWeightField;
            }
            set {
                if ((this.O2LeftLanceGewWeightField.Equals(value) != true)) {
                    this.O2LeftLanceGewWeightField = value;
                    this.RaisePropertyChanged("O2LeftLanceGewWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2LeftLanceLeck {
            get {
                return this.O2LeftLanceLeckField;
            }
            set {
                if ((this.O2LeftLanceLeckField.Equals(value) != true)) {
                    this.O2LeftLanceLeckField = value;
                    this.RaisePropertyChanged("O2LeftLanceLeck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2LeftLanceWaterInput {
            get {
                return this.O2LeftLanceWaterInputField;
            }
            set {
                if ((this.O2LeftLanceWaterInputField.Equals(value) != true)) {
                    this.O2LeftLanceWaterInputField = value;
                    this.RaisePropertyChanged("O2LeftLanceWaterInput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2LeftLanceWaterOutput {
            get {
                return this.O2LeftLanceWaterOutputField;
            }
            set {
                if ((this.O2LeftLanceWaterOutputField.Equals(value) != true)) {
                    this.O2LeftLanceWaterOutputField = value;
                    this.RaisePropertyChanged("O2LeftLanceWaterOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2LeftLanceWaterPressure {
            get {
                return this.O2LeftLanceWaterPressureField;
            }
            set {
                if ((this.O2LeftLanceWaterPressureField.Equals(value) != true)) {
                    this.O2LeftLanceWaterPressureField = value;
                    this.RaisePropertyChanged("O2LeftLanceWaterPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2LeftLanceWaterTempInput {
            get {
                return this.O2LeftLanceWaterTempInputField;
            }
            set {
                if ((this.O2LeftLanceWaterTempInputField.Equals(value) != true)) {
                    this.O2LeftLanceWaterTempInputField = value;
                    this.RaisePropertyChanged("O2LeftLanceWaterTempInput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2LeftLanceWaterTempOutput {
            get {
                return this.O2LeftLanceWaterTempOutputField;
            }
            set {
                if ((this.O2LeftLanceWaterTempOutputField.Equals(value) != true)) {
                    this.O2LeftLanceWaterTempOutputField = value;
                    this.RaisePropertyChanged("O2LeftLanceWaterTempOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2Pressure {
            get {
                return this.O2PressureField;
            }
            set {
                if ((this.O2PressureField.Equals(value) != true)) {
                    this.O2PressureField = value;
                    this.RaisePropertyChanged("O2Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2RightLanceGewBaer {
            get {
                return this.O2RightLanceGewBaerField;
            }
            set {
                if ((this.O2RightLanceGewBaerField.Equals(value) != true)) {
                    this.O2RightLanceGewBaerField = value;
                    this.RaisePropertyChanged("O2RightLanceGewBaer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2RightLanceGewWeight {
            get {
                return this.O2RightLanceGewWeightField;
            }
            set {
                if ((this.O2RightLanceGewWeightField.Equals(value) != true)) {
                    this.O2RightLanceGewWeightField = value;
                    this.RaisePropertyChanged("O2RightLanceGewWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2RightLanceLeck {
            get {
                return this.O2RightLanceLeckField;
            }
            set {
                if ((this.O2RightLanceLeckField.Equals(value) != true)) {
                    this.O2RightLanceLeckField = value;
                    this.RaisePropertyChanged("O2RightLanceLeck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2RightLanceWaterInput {
            get {
                return this.O2RightLanceWaterInputField;
            }
            set {
                if ((this.O2RightLanceWaterInputField.Equals(value) != true)) {
                    this.O2RightLanceWaterInputField = value;
                    this.RaisePropertyChanged("O2RightLanceWaterInput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2RightLanceWaterOutput {
            get {
                return this.O2RightLanceWaterOutputField;
            }
            set {
                if ((this.O2RightLanceWaterOutputField.Equals(value) != true)) {
                    this.O2RightLanceWaterOutputField = value;
                    this.RaisePropertyChanged("O2RightLanceWaterOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double O2RightLanceWaterPressure {
            get {
                return this.O2RightLanceWaterPressureField;
            }
            set {
                if ((this.O2RightLanceWaterPressureField.Equals(value) != true)) {
                    this.O2RightLanceWaterPressureField = value;
                    this.RaisePropertyChanged("O2RightLanceWaterPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2RightLanceWaterTempInput {
            get {
                return this.O2RightLanceWaterTempInputField;
            }
            set {
                if ((this.O2RightLanceWaterTempInputField.Equals(value) != true)) {
                    this.O2RightLanceWaterTempInputField = value;
                    this.RaisePropertyChanged("O2RightLanceWaterTempInput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2RightLanceWaterTempOutput {
            get {
                return this.O2RightLanceWaterTempOutputField;
            }
            set {
                if ((this.O2RightLanceWaterTempOutputField.Equals(value) != true)) {
                    this.O2RightLanceWaterTempOutputField = value;
                    this.RaisePropertyChanged("O2RightLanceWaterTempOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2TorkVol {
            get {
                return this.O2TorkVolField;
            }
            set {
                if ((this.O2TorkVolField.Equals(value) != true)) {
                    this.O2TorkVolField = value;
                    this.RaisePropertyChanged("O2TorkVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short O2TotalVol {
            get {
                return this.O2TotalVolField;
            }
            set {
                if ((this.O2TotalVolField.Equals(value) != true)) {
                    this.O2TotalVolField = value;
                    this.RaisePropertyChanged("O2TotalVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ReblowingFlag {
            get {
                return this.ReblowingFlagField;
            }
            set {
                if ((this.ReblowingFlagField.Equals(value) != true)) {
                    this.ReblowingFlagField = value;
                    this.RaisePropertyChanged("ReblowingFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SkullCuttingFlag {
            get {
                return this.SkullCuttingFlagField;
            }
            set {
                if ((this.SkullCuttingFlagField.Equals(value) != true)) {
                    this.SkullCuttingFlagField = value;
                    this.RaisePropertyChanged("SkullCuttingFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SlagBlowingFlag {
            get {
                return this.SlagBlowingFlagField;
            }
            set {
                if ((this.SlagBlowingFlagField.Equals(value) != true)) {
                    this.SlagBlowingFlagField = value;
                    this.RaisePropertyChanged("SlagBlowingFlag");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CastIronWeightEvent", Namespace="http://schemas.datacontract.org/2004/07/Converter")]
    [System.SerializableAttribute()]
    public partial class CastIronWeightEvent : Client.MainGate.ConverterBaseEvent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LadlePotNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MixerNumberPortion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MixerNumberPortion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MixerNumberPortion3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusTLCPortion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusTLCPortion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusTLCPortion3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightPortion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightPortion2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightPortion3Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LadlePotNumber {
            get {
                return this.LadlePotNumberField;
            }
            set {
                if ((this.LadlePotNumberField.Equals(value) != true)) {
                    this.LadlePotNumberField = value;
                    this.RaisePropertyChanged("LadlePotNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MixerNumberPortion1 {
            get {
                return this.MixerNumberPortion1Field;
            }
            set {
                if ((this.MixerNumberPortion1Field.Equals(value) != true)) {
                    this.MixerNumberPortion1Field = value;
                    this.RaisePropertyChanged("MixerNumberPortion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MixerNumberPortion2 {
            get {
                return this.MixerNumberPortion2Field;
            }
            set {
                if ((this.MixerNumberPortion2Field.Equals(value) != true)) {
                    this.MixerNumberPortion2Field = value;
                    this.RaisePropertyChanged("MixerNumberPortion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MixerNumberPortion3 {
            get {
                return this.MixerNumberPortion3Field;
            }
            set {
                if ((this.MixerNumberPortion3Field.Equals(value) != true)) {
                    this.MixerNumberPortion3Field = value;
                    this.RaisePropertyChanged("MixerNumberPortion3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StatusTLCPortion1 {
            get {
                return this.StatusTLCPortion1Field;
            }
            set {
                if ((this.StatusTLCPortion1Field.Equals(value) != true)) {
                    this.StatusTLCPortion1Field = value;
                    this.RaisePropertyChanged("StatusTLCPortion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StatusTLCPortion2 {
            get {
                return this.StatusTLCPortion2Field;
            }
            set {
                if ((this.StatusTLCPortion2Field.Equals(value) != true)) {
                    this.StatusTLCPortion2Field = value;
                    this.RaisePropertyChanged("StatusTLCPortion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StatusTLCPortion3 {
            get {
                return this.StatusTLCPortion3Field;
            }
            set {
                if ((this.StatusTLCPortion3Field.Equals(value) != true)) {
                    this.StatusTLCPortion3Field = value;
                    this.RaisePropertyChanged("StatusTLCPortion3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalWeight {
            get {
                return this.TotalWeightField;
            }
            set {
                if ((this.TotalWeightField.Equals(value) != true)) {
                    this.TotalWeightField = value;
                    this.RaisePropertyChanged("TotalWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeightPortion1 {
            get {
                return this.WeightPortion1Field;
            }
            set {
                if ((this.WeightPortion1Field.Equals(value) != true)) {
                    this.WeightPortion1Field = value;
                    this.RaisePropertyChanged("WeightPortion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeightPortion2 {
            get {
                return this.WeightPortion2Field;
            }
            set {
                if ((this.WeightPortion2Field.Equals(value) != true)) {
                    this.WeightPortion2Field = value;
                    this.RaisePropertyChanged("WeightPortion2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeightPortion3 {
            get {
                return this.WeightPortion3Field;
            }
            set {
                if ((this.WeightPortion3Field.Equals(value) != true)) {
                    this.WeightPortion3Field = value;
                    this.RaisePropertyChanged("WeightPortion3");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Core.MainGate", ConfigurationName="MainGate.IMainGate", CallbackContract=typeof(Client.MainGate.IMainGateCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IMainGate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Core.MainGate/IMainGate/Autentificate", ReplyAction="http://Core.MainGate/IMainGate/AutentificateResponse")]
        bool Autentificate(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Core.MainGate/IMainGate/PushEvent", ReplyAction="http://Core.MainGate/IMainGate/PushEventResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.ConverterBaseEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.CastIronTemperatureEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.HeatStartEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.HeatChangeNumberEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.GivenO2FlowRateEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.ConverterAngleEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.SteelAnalysisEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.LadlePotEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.ScrapEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.OffGasEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.GivenCastIronWeightEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.MixerAnalysisEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.LanceEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.CastIronWeightEvent))]
        void PushEvent(BaseEvent baseEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Core.MainGate/IMainGate/Subscribe", ReplyAction="http://Core.MainGate/IMainGate/SubscribeResponse")]
        bool Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Core.MainGate/IMainGate/Unsubscribe", ReplyAction="http://Core.MainGate/IMainGate/UnsubscribeResponse")]
        bool Unsubscribe();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainGateCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Core.MainGate/IMainGate/OnEvent")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.ConverterBaseEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.CastIronTemperatureEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.HeatStartEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.HeatChangeNumberEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.GivenO2FlowRateEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.ConverterAngleEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.SteelAnalysisEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.LadlePotEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.ScrapEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.OffGasEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.GivenCastIronWeightEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.MixerAnalysisEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.LanceEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.MainGate.CastIronWeightEvent))]
        void OnEvent(BaseEvent newEvent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainGateChannel : Client.MainGate.IMainGate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainGateClient : System.ServiceModel.DuplexClientBase<Client.MainGate.IMainGate>, Client.MainGate.IMainGate {
        
        public MainGateClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MainGateClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MainGateClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MainGateClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MainGateClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Autentificate(string login, string password) {
            return base.Channel.Autentificate(login, password);
        }
        
        public void PushEvent(BaseEvent baseEvent) {
            base.Channel.PushEvent(baseEvent);
        }
        
        public bool Subscribe() {
            return base.Channel.Subscribe();
        }
        
        public bool Unsubscribe() {
            return base.Channel.Unsubscribe();
        }
    }
}
