//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HeatModel", "FK_HeatMaterial", "HeatSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConverterUI.Models.Heat), "MaterialSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConverterUI.Models.Material), true)]
[assembly: EdmRelationshipAttribute("HeatModel", "FK_HeatPeriod", "HeatSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConverterUI.Models.Heat), "PeriodSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConverterUI.Models.Period), true)]
[assembly: EdmRelationshipAttribute("HeatModel", "FK_VerticalTraktMaterial", "MaterialSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConverterUI.Models.Material), "VerticalTraktSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConverterUI.Models.VerticalTrakt), true)]
[assembly: EdmRelationshipAttribute("HeatModel", "FK_PeriodPhase", "PeriodSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConverterUI.Models.Period), "PhaseSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConverterUI.Models.Phase), true)]
[assembly: EdmRelationshipAttribute("HeatModel", "FK_PhaseStep", "PhaseSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConverterUI.Models.Phase), "StepSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConverterUI.Models.Step), true)]
[assembly: EdmRelationshipAttribute("HeatModel", "FK_StepVerticalTrakt", "StepSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConverterUI.Models.Step), "VerticalTraktSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConverterUI.Models.VerticalTrakt), true)]

#endregion

namespace ConverterUI.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HeatModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HeatModelContainer object using the connection string found in the 'HeatModelContainer' section of the application configuration file.
        /// </summary>
        public HeatModelContainer() : base("name=HeatModelContainer", "HeatModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HeatModelContainer object.
        /// </summary>
        public HeatModelContainer(string connectionString) : base(connectionString, "HeatModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HeatModelContainer object.
        /// </summary>
        public HeatModelContainer(EntityConnection connection) : base(connection, "HeatModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Heat> HeatSet
        {
            get
            {
                if ((_HeatSet == null))
                {
                    _HeatSet = base.CreateObjectSet<Heat>("HeatSet");
                }
                return _HeatSet;
            }
        }
        private ObjectSet<Heat> _HeatSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Material> MaterialSet
        {
            get
            {
                if ((_MaterialSet == null))
                {
                    _MaterialSet = base.CreateObjectSet<Material>("MaterialSet");
                }
                return _MaterialSet;
            }
        }
        private ObjectSet<Material> _MaterialSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Period> PeriodSet
        {
            get
            {
                if ((_PeriodSet == null))
                {
                    _PeriodSet = base.CreateObjectSet<Period>("PeriodSet");
                }
                return _PeriodSet;
            }
        }
        private ObjectSet<Period> _PeriodSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Phase> PhaseSet
        {
            get
            {
                if ((_PhaseSet == null))
                {
                    _PhaseSet = base.CreateObjectSet<Phase>("PhaseSet");
                }
                return _PhaseSet;
            }
        }
        private ObjectSet<Phase> _PhaseSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Step> StepSet
        {
            get
            {
                if ((_StepSet == null))
                {
                    _StepSet = base.CreateObjectSet<Step>("StepSet");
                }
                return _StepSet;
            }
        }
        private ObjectSet<Step> _StepSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TargetValues> TargetValues
        {
            get
            {
                if ((_TargetValues == null))
                {
                    _TargetValues = base.CreateObjectSet<TargetValues>("TargetValues");
                }
                return _TargetValues;
            }
        }
        private ObjectSet<TargetValues> _TargetValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VerticalTrakt> VerticalTraktSet
        {
            get
            {
                if ((_VerticalTraktSet == null))
                {
                    _VerticalTraktSet = base.CreateObjectSet<VerticalTrakt>("VerticalTraktSet");
                }
                return _VerticalTraktSet;
            }
        }
        private ObjectSet<VerticalTrakt> _VerticalTraktSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HeatSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeatSet(Heat heat)
        {
            base.AddObject("HeatSet", heat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialSet(Material material)
        {
            base.AddObject("MaterialSet", material);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PeriodSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeriodSet(Period period)
        {
            base.AddObject("PeriodSet", period);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhaseSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhaseSet(Phase phase)
        {
            base.AddObject("PhaseSet", phase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StepSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStepSet(Step step)
        {
            base.AddObject("StepSet", step);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TargetValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTargetValues(TargetValues targetValues)
        {
            base.AddObject("TargetValues", targetValues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VerticalTraktSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVerticalTraktSet(VerticalTrakt verticalTrakt)
        {
            base.AddObject("VerticalTraktSet", verticalTrakt);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HeatModel", Name="Heat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Heat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Heat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        public static Heat CreateHeat(global::System.Int32 id, global::System.String name, global::System.Int32 group)
        {
            Heat heat = new Heat();
            heat.Id = id;
            heat.Name = name;
            heat.Group = group;
            return heat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.Int32 _Group;
        partial void OnGroupChanging(global::System.Int32 value);
        partial void OnGroupChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_HeatMaterial", "MaterialSet")]
        public EntityCollection<Material> Materials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Material>("HeatModel.FK_HeatMaterial", "MaterialSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Material>("HeatModel.FK_HeatMaterial", "MaterialSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_HeatPeriod", "PeriodSet")]
        public EntityCollection<Period> Periods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Period>("HeatModel.FK_HeatPeriod", "PeriodSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Period>("HeatModel.FK_HeatPeriod", "PeriodSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HeatModel", Name="Material")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Material : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Material object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="heatId">Initial value of the HeatId property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="weighterLineName">Initial value of the WeighterLineName property.</param>
        /// <param name="bunkerName">Initial value of the BunkerName property.</param>
        public static Material CreateMaterial(global::System.Int32 id, global::System.String name, global::System.Int32 heatId, global::System.Int32 number, global::System.String weighterLineName, global::System.String bunkerName)
        {
            Material material = new Material();
            material.Id = id;
            material.Name = name;
            material.HeatId = heatId;
            material.Number = number;
            material.WeighterLineName = weighterLineName;
            material.BunkerName = bunkerName;
            return material;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HeatId
        {
            get
            {
                return _HeatId;
            }
            set
            {
                OnHeatIdChanging(value);
                ReportPropertyChanging("HeatId");
                _HeatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeatId");
                OnHeatIdChanged();
            }
        }
        private global::System.Int32 _HeatId;
        partial void OnHeatIdChanging(global::System.Int32 value);
        partial void OnHeatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WeighterLineName
        {
            get
            {
                return _WeighterLineName;
            }
            set
            {
                OnWeighterLineNameChanging(value);
                ReportPropertyChanging("WeighterLineName");
                _WeighterLineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WeighterLineName");
                OnWeighterLineNameChanged();
            }
        }
        private global::System.String _WeighterLineName;
        partial void OnWeighterLineNameChanging(global::System.String value);
        partial void OnWeighterLineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BunkerName
        {
            get
            {
                return _BunkerName;
            }
            set
            {
                OnBunkerNameChanging(value);
                ReportPropertyChanging("BunkerName");
                _BunkerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BunkerName");
                OnBunkerNameChanged();
            }
        }
        private global::System.String _BunkerName;
        partial void OnBunkerNameChanging(global::System.String value);
        partial void OnBunkerNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_HeatMaterial", "HeatSet")]
        public Heat Heat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Heat>("HeatModel.FK_HeatMaterial", "HeatSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Heat>("HeatModel.FK_HeatMaterial", "HeatSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Heat> HeatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Heat>("HeatModel.FK_HeatMaterial", "HeatSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Heat>("HeatModel.FK_HeatMaterial", "HeatSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_VerticalTraktMaterial", "VerticalTraktSet")]
        public EntityCollection<VerticalTrakt> VerticalTrakts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VerticalTrakt>("HeatModel.FK_VerticalTraktMaterial", "VerticalTraktSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VerticalTrakt>("HeatModel.FK_VerticalTraktMaterial", "VerticalTraktSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HeatModel", Name="Period")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Period : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Period object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="heatId">Initial value of the HeatId property.</param>
        public static Period CreatePeriod(global::System.Int32 id, global::System.String name, global::System.Int32 number, global::System.Int32 heatId)
        {
            Period period = new Period();
            period.Id = id;
            period.Name = name;
            period.Number = number;
            period.HeatId = heatId;
            return period;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HeatId
        {
            get
            {
                return _HeatId;
            }
            set
            {
                OnHeatIdChanging(value);
                ReportPropertyChanging("HeatId");
                _HeatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeatId");
                OnHeatIdChanged();
            }
        }
        private global::System.Int32 _HeatId;
        partial void OnHeatIdChanging(global::System.Int32 value);
        partial void OnHeatIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_HeatPeriod", "HeatSet")]
        public Heat Heat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Heat>("HeatModel.FK_HeatPeriod", "HeatSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Heat>("HeatModel.FK_HeatPeriod", "HeatSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Heat> HeatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Heat>("HeatModel.FK_HeatPeriod", "HeatSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Heat>("HeatModel.FK_HeatPeriod", "HeatSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_PeriodPhase", "PhaseSet")]
        public EntityCollection<Phase> Phases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Phase>("HeatModel.FK_PeriodPhase", "PhaseSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Phase>("HeatModel.FK_PeriodPhase", "PhaseSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HeatModel", Name="Phase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Phase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Phase object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="periodId">Initial value of the PeriodId property.</param>
        public static Phase CreatePhase(global::System.Int32 id, global::System.String name, global::System.Int32 number, global::System.Int32 periodId)
        {
            Phase phase = new Phase();
            phase.Id = id;
            phase.Name = name;
            phase.Number = number;
            phase.PeriodId = periodId;
            return phase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodId
        {
            get
            {
                return _PeriodId;
            }
            set
            {
                OnPeriodIdChanging(value);
                ReportPropertyChanging("PeriodId");
                _PeriodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodId");
                OnPeriodIdChanged();
            }
        }
        private global::System.Int32 _PeriodId;
        partial void OnPeriodIdChanging(global::System.Int32 value);
        partial void OnPeriodIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_PeriodPhase", "PeriodSet")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("HeatModel.FK_PeriodPhase", "PeriodSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("HeatModel.FK_PeriodPhase", "PeriodSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("HeatModel.FK_PeriodPhase", "PeriodSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("HeatModel.FK_PeriodPhase", "PeriodSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_PhaseStep", "StepSet")]
        public EntityCollection<Step> Steps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Step>("HeatModel.FK_PhaseStep", "StepSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Step>("HeatModel.FK_PhaseStep", "StepSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HeatModel", Name="Step")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Step : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Step object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="phaseId">Initial value of the PhaseId property.</param>
        /// <param name="lancePosition">Initial value of the LancePosition property.</param>
        /// <param name="lanceO2Flow">Initial value of the LanceO2Flow property.</param>
        /// <param name="o2Volume">Initial value of the O2Volume property.</param>
        public static Step CreateStep(global::System.Int32 id, global::System.Int32 number, global::System.Int32 phaseId, global::System.Int32 lancePosition, global::System.Double lanceO2Flow, global::System.Int32 o2Volume)
        {
            Step step = new Step();
            step.Id = id;
            step.Number = number;
            step.PhaseId = phaseId;
            step.LancePosition = lancePosition;
            step.LanceO2Flow = lanceO2Flow;
            step.O2Volume = o2Volume;
            return step;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhaseId
        {
            get
            {
                return _PhaseId;
            }
            set
            {
                OnPhaseIdChanging(value);
                ReportPropertyChanging("PhaseId");
                _PhaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhaseId");
                OnPhaseIdChanged();
            }
        }
        private global::System.Int32 _PhaseId;
        partial void OnPhaseIdChanging(global::System.Int32 value);
        partial void OnPhaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LancePosition
        {
            get
            {
                return _LancePosition;
            }
            set
            {
                OnLancePositionChanging(value);
                ReportPropertyChanging("LancePosition");
                _LancePosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LancePosition");
                OnLancePositionChanged();
            }
        }
        private global::System.Int32 _LancePosition;
        partial void OnLancePositionChanging(global::System.Int32 value);
        partial void OnLancePositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LanceO2Flow
        {
            get
            {
                return _LanceO2Flow;
            }
            set
            {
                OnLanceO2FlowChanging(value);
                ReportPropertyChanging("LanceO2Flow");
                _LanceO2Flow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanceO2Flow");
                OnLanceO2FlowChanged();
            }
        }
        private global::System.Double _LanceO2Flow;
        partial void OnLanceO2FlowChanging(global::System.Double value);
        partial void OnLanceO2FlowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 O2Volume
        {
            get
            {
                return _O2Volume;
            }
            set
            {
                OnO2VolumeChanging(value);
                ReportPropertyChanging("O2Volume");
                _O2Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("O2Volume");
                OnO2VolumeChanged();
            }
        }
        private global::System.Int32 _O2Volume;
        partial void OnO2VolumeChanging(global::System.Int32 value);
        partial void OnO2VolumeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_PhaseStep", "PhaseSet")]
        public Phase Phase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Phase>("HeatModel.FK_PhaseStep", "PhaseSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Phase>("HeatModel.FK_PhaseStep", "PhaseSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Phase> PhaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Phase>("HeatModel.FK_PhaseStep", "PhaseSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Phase>("HeatModel.FK_PhaseStep", "PhaseSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_StepVerticalTrakt", "VerticalTraktSet")]
        public EntityCollection<VerticalTrakt> VerticalTrakts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VerticalTrakt>("HeatModel.FK_StepVerticalTrakt", "VerticalTraktSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VerticalTrakt>("HeatModel.FK_StepVerticalTrakt", "VerticalTraktSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HeatModel", Name="TargetValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TargetValues : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TargetValues object.
        /// </summary>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        public static TargetValues CreateTargetValues(global::System.Int32 groupID)
        {
            TargetValues targetValues = new TargetValues();
            targetValues.GroupID = groupID;
            return targetValues;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String C
        {
            get
            {
                return _C;
            }
            set
            {
                OnCChanging(value);
                ReportPropertyChanging("C");
                _C = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("C");
                OnCChanged();
            }
        }
        private global::System.String _C;
        partial void OnCChanging(global::System.String value);
        partial void OnCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String P
        {
            get
            {
                return _P;
            }
            set
            {
                OnPChanging(value);
                ReportPropertyChanging("P");
                _P = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("P");
                OnPChanged();
            }
        }
        private global::System.String _P;
        partial void OnPChanging(global::System.String value);
        partial void OnPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String S
        {
            get
            {
                return _S;
            }
            set
            {
                OnSChanging(value);
                ReportPropertyChanging("S");
                _S = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("S");
                OnSChanged();
            }
        }
        private global::System.String _S;
        partial void OnSChanging(global::System.String value);
        partial void OnSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cr
        {
            get
            {
                return _Cr;
            }
            set
            {
                OnCrChanging(value);
                ReportPropertyChanging("Cr");
                _Cr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cr");
                OnCrChanged();
            }
        }
        private global::System.String _Cr;
        partial void OnCrChanging(global::System.String value);
        partial void OnCrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ni
        {
            get
            {
                return _Ni;
            }
            set
            {
                OnNiChanging(value);
                ReportPropertyChanging("Ni");
                _Ni = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ni");
                OnNiChanged();
            }
        }
        private global::System.String _Ni;
        partial void OnNiChanging(global::System.String value);
        partial void OnNiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cu
        {
            get
            {
                return _Cu;
            }
            set
            {
                OnCuChanging(value);
                ReportPropertyChanging("Cu");
                _Cu = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cu");
                OnCuChanged();
            }
        }
        private global::System.String _Cu;
        partial void OnCuChanging(global::System.String value);
        partial void OnCuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mn
        {
            get
            {
                return _Mn;
            }
            set
            {
                OnMnChanging(value);
                ReportPropertyChanging("Mn");
                _Mn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mn");
                OnMnChanged();
            }
        }
        private global::System.String _Mn;
        partial void OnMnChanging(global::System.String value);
        partial void OnMnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MgO
        {
            get
            {
                return _MgO;
            }
            set
            {
                OnMgOChanging(value);
                ReportPropertyChanging("MgO");
                _MgO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MgO");
                OnMgOChanged();
            }
        }
        private global::System.String _MgO;
        partial void OnMgOChanging(global::System.String value);
        partial void OnMgOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeO
        {
            get
            {
                return _FeO;
            }
            set
            {
                OnFeOChanging(value);
                ReportPropertyChanging("FeO");
                _FeO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeO");
                OnFeOChanged();
            }
        }
        private global::System.String _FeO;
        partial void OnFeOChanging(global::System.String value);
        partial void OnFeOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CaO
        {
            get
            {
                return _CaO;
            }
            set
            {
                OnCaOChanging(value);
                ReportPropertyChanging("CaO");
                _CaO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CaO");
                OnCaOChanged();
            }
        }
        private global::System.String _CaO;
        partial void OnCaOChanging(global::System.String value);
        partial void OnCaOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String T
        {
            get
            {
                return _T;
            }
            set
            {
                OnTChanging(value);
                ReportPropertyChanging("T");
                _T = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("T");
                OnTChanged();
            }
        }
        private global::System.String _T;
        partial void OnTChanging(global::System.String value);
        partial void OnTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CaOSiO2
        {
            get
            {
                return _CaOSiO2;
            }
            set
            {
                OnCaOSiO2Changing(value);
                ReportPropertyChanging("CaOSiO2");
                _CaOSiO2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CaOSiO2");
                OnCaOSiO2Changed();
            }
        }
        private global::System.String _CaOSiO2;
        partial void OnCaOSiO2Changing(global::System.String value);
        partial void OnCaOSiO2Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HeatModel", Name="VerticalTrakt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VerticalTrakt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VerticalTrakt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="stepId">Initial value of the StepId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="materialId">Initial value of the MaterialId property.</param>
        /// <param name="notToGive">Initial value of the NotToGive property.</param>
        /// <param name="allowToAdd">Initial value of the AllowToAdd property.</param>
        public static VerticalTrakt CreateVerticalTrakt(global::System.Int32 id, global::System.Int32 stepId, global::System.String amount, global::System.Int32 materialId, global::System.Boolean notToGive, global::System.Boolean allowToAdd)
        {
            VerticalTrakt verticalTrakt = new VerticalTrakt();
            verticalTrakt.Id = id;
            verticalTrakt.StepId = stepId;
            verticalTrakt.Amount = amount;
            verticalTrakt.MaterialId = materialId;
            verticalTrakt.NotToGive = notToGive;
            verticalTrakt.AllowToAdd = allowToAdd;
            return verticalTrakt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StepId
        {
            get
            {
                return _StepId;
            }
            set
            {
                OnStepIdChanging(value);
                ReportPropertyChanging("StepId");
                _StepId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StepId");
                OnStepIdChanged();
            }
        }
        private global::System.Int32 _StepId;
        partial void OnStepIdChanging(global::System.Int32 value);
        partial void OnStepIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.String _Amount;
        partial void OnAmountChanging(global::System.String value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialId
        {
            get
            {
                return _MaterialId;
            }
            set
            {
                OnMaterialIdChanging(value);
                ReportPropertyChanging("MaterialId");
                _MaterialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialId");
                OnMaterialIdChanged();
            }
        }
        private global::System.Int32 _MaterialId;
        partial void OnMaterialIdChanging(global::System.Int32 value);
        partial void OnMaterialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NotToGive
        {
            get
            {
                return _NotToGive;
            }
            set
            {
                OnNotToGiveChanging(value);
                ReportPropertyChanging("NotToGive");
                _NotToGive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotToGive");
                OnNotToGiveChanged();
            }
        }
        private global::System.Boolean _NotToGive;
        partial void OnNotToGiveChanging(global::System.Boolean value);
        partial void OnNotToGiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowToAdd
        {
            get
            {
                return _AllowToAdd;
            }
            set
            {
                OnAllowToAddChanging(value);
                ReportPropertyChanging("AllowToAdd");
                _AllowToAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowToAdd");
                OnAllowToAddChanged();
            }
        }
        private global::System.Boolean _AllowToAdd;
        partial void OnAllowToAddChanging(global::System.Boolean value);
        partial void OnAllowToAddChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_VerticalTraktMaterial", "MaterialSet")]
        public Material Material
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("HeatModel.FK_VerticalTraktMaterial", "MaterialSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("HeatModel.FK_VerticalTraktMaterial", "MaterialSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Material> MaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("HeatModel.FK_VerticalTraktMaterial", "MaterialSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Material>("HeatModel.FK_VerticalTraktMaterial", "MaterialSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HeatModel", "FK_StepVerticalTrakt", "StepSet")]
        public Step Step
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Step>("HeatModel.FK_StepVerticalTrakt", "StepSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Step>("HeatModel.FK_StepVerticalTrakt", "StepSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Step> StepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Step>("HeatModel.FK_StepVerticalTrakt", "StepSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Step>("HeatModel.FK_StepVerticalTrakt", "StepSet", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
